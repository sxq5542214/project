<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="orderProductLog">
	
	
	<select id="queryOrderProductLog" parameterType="orderProductLog" resultType="orderProductLog">
		select * from ll_order_product_log l 
		<where>
			<if test="supplier_id != null"> and l.supplier_id = #{supplier_id} </if>
			<if test="supplier_product_id != null"> and l.supplier_product_id = #{supplier_product_id} </if>
			<if test="order_account != null"> and l.order_account = #{order_account} </if>
			<if test="admin_id != null"> and l.admin_id = #{admin_id} </if>
			<if test="user_id != null"> and l.user_id = #{user_id} </if>
			<if test="status != null"> and l.status = #{status} </if>
			<if test="order_code != null"> and l.order_code = #{order_code} </if>
			<if test="channel_id != null"> and l.channel_id = #{channel_id} </if>
			<if test="event_type != null"> and l.event_type = #{event_type} </if>
			<if test="notInStatus != null"> and l.status not in (${notInStatus}) </if>
			<if test="lastmonthbegin != null"> and l.create_time >= #{lastmonthbegin}   </if>
			<if test="lastmonthend != null"> and #{lastmonthend}  >=  l.create_time   </if>
		</where>
		<if test="groupby != null"> group by ${groupby} </if>
		order by id desc
	</select>
	
	<select id="findOrderProductLogByCode" parameterType="string" resultType="orderProductLog">
		select * from ll_order_product_log l where order_code = #{order_code}
	</select>
	
	<insert id="createOrderProductLog" parameterType="orderProductLog" useGeneratedKeys="true" keyProperty="id">
		insert into ll_order_product_log(supplier_id,supplier_name,supplier_product_id,product_name,product_price,
		order_code,order_account,create_time,modify_time,cost_price,cost_points,cost_money,cost_balance,admin_id,user_id,status,remark,channel_id,event_type,lucky_money) values 
		(#{supplier_id},#{supplier_name},#{supplier_product_id},#{product_name},#{product_price},#{order_code},
		#{order_account},#{create_time},#{modify_time},#{cost_price},#{cost_points},#{cost_money},#{cost_balance},#{admin_id},#{user_id},#{status},#{remark},#{channel_id},#{event_type},#{lucky_money})
	</insert>
	
	<update id="updateOrderProductLogStatus" parameterType="map">
		update ll_order_product_log 
		set status = #{status}
		where order_code = #{order_code}
	</update>
	
	<update id="updateOrderProductLog" parameterType="orderProductLog">
		update ll_order_product_log
		<set>
			<if test="supplier_name != null"> supplier_name = #{supplier_name} ,</if>
			<if test="product_name != null"> product_name = #{product_name} ,</if>
			<if test="status != null"> status = #{status} ,</if>
			<if test="remark != null"> remark = #{remark} ,</if>
			<if test="channel_id != null"> channel_id = #{channel_id} ,</if>
			<if test="event_type != null"> event_type = #{event_type} ,</if>
			<if test="modify_time != null"> modify_time = #{modify_time} ,</if>
			<if test="lucky_money != null"> lucky_money = #{lucky_money} ,</if>
			<if test="is_sended != null"> is_sended = #{is_sended} ,</if>
			<if test="share_type != null"> share_type = #{share_type} ,</if>
			<if test="share_time != null"> share_time = #{share_time} ,</if>
		</set>
		<where>
			id = #{id}
		</where>
	</update>
	
	<select id="findOrderProductLogById" parameterType="int" resultType="orderProductLog">
		select * from ll_order_product_log where id = #{value}
	</select>
	
	<select id="queryOrderProductLogByNoPay" parameterType="string" resultType="orderProductLog">
		select * from ll_order_product_log opl where opl.status = 2 and opl.event_type in (1) and  #{value} >= opl.create_time
		and not exists (select 1 from ll_order_product_log l where  l.user_id = opl.user_id and l.create_time > opl.create_time and l.status =1 and l.event_type in (1)  )
		and opl.remark is null
	</select>
	
	<select id="findPartnerOrderProductByOrderCode" parameterType="string" resultType="partnerOrderProduct">
		select * from ll_partner_order_product
		where out_trade_no = #{value}
	</select>
	
	<select id="findPartnerOrderProductByPartnerOrderCode" parameterType="string" resultType="partnerOrderProduct">
		select * from ll_partner_order_product
		where partner_out_trade_no = #{value}
	</select>
	
	<select id="queryPartnerOrderProduct" parameterType="partnerOrderProduct" resultType="partnerOrderProduct">
		select * from ll_partner_order_product
		<where>
			<if test="id != null"> and id = #{id} </if>
			<if test="partner_id != null"> and partner_id = #{partner_id} </if>
			<if test="product_id != null"> and product_id = #{product_id} </if>
			<if test="status != null"> and status = #{status} </if>
			<if test="order_account != null"> and order_account = #{order_account} </if>
			<if test="out_trade_no != null"> and out_trade_no = #{out_trade_no} </if>
			<if test="partner_out_trade_no != null"> and partner_out_trade_no = #{partner_out_trade_no} </if>
			<if test="channel_id != null"> and channel_id = #{channel_id} </if>
			<if test="notify_status != null"> and notify_status = #{notify_status} </if>
			<if test="notify_count != null"> and #{notify_count}  >= notify_count </if>
			
		</where>
		
		
	</select>
		
	<select id="queryOrderLogByDesc" parameterType="orderProductLog" resultType="orderProductLog">
			select DISTINCT(a.order_account) from  	(select * from ll_order_product_log 
	<where>
			<if test="user_id != null"> and user_id = #{user_id} </if>
	</where>
    ORDER BY create_time desc) a 
	order by id desc
	</select>
	
		
	<select id="queryLucykIsNullUser" parameterType="orderLogCondition" resultType="orderProductLog">
			select * from ll_order_product_log  where  `status` in <foreach collection="statusarr" index="index" open="(" close=")" separator="," item="item">#{item}</foreach>
			and (remark  not like concat('%', #{remark})   or remark is null ) 
			and event_type = #{event_type}  and (is_sended is null or is_sended = #{is_sended} ) and   lucky_money  > #{lucky_money} 
	</select>
	
	
	
	<select id="queryOrderProductLogPage"  parameterType="orderProductLog" resultType="orderProductLog">
		select * from ll_order_product_log sp
		<where>
			<if test="user_id != null "> and sp.user_id like concat('%', #{user_id}, '%')</if>
			<if test="order_code != null and order_code !='' "> and sp.order_code like concat('%', #{order_code}, '%')</if>
		</where>
	</select>
	
	
		
	<select id="countOrderProductLog" parameterType="orderProductLog" resultType="int">
		select count(1) from ll_order_product_log
	</select>
	
	
	<delete id="deleteOrderProductLog" parameterType="orderProductLog">
		delete from ll_order_product_log where id = #{id} 
	</delete>
	
	
	<insert id="insertOrderProductLogAdmin" parameterType="orderProductLog"   keyProperty="id">
		insert into ll_order_product_log(supplier_id,supplier_name,supplier_product_id,product_name,product_price,
		order_code,order_account,create_time,modify_time,cost_price,cost_points,cost_money,cost_balance,user_id,status,remark,channel_id,event_type,lucky_money,is_sended) values 
		(#{supplier_id},#{supplier_name},#{supplier_product_id},#{product_name},#{product_price},#{order_code},
		#{order_account},#{create_time},#{modify_time},#{cost_price},#{cost_points},#{cost_money},#{cost_balance},#{user_id},#{status},#{remark},#{channel_id},#{event_type},#{lucky_money},#{is_sended})
	</insert>
	
	
		<update id="updateOrderProductLogAdmin" parameterType="orderProductLog">
		update ll_order_product_log
		<set>
			<if test="supplier_id != null"> supplier_id = #{supplier_id} ,</if>
			<if test="supplier_name != null and supplier_name !=''"> supplier_name = #{supplier_name} ,</if>
			<if test="supplier_product_id != null"> supplier_product_id = #{supplier_product_id} ,</if>
			<if test="product_name != null and product_name !=''"> product_name = #{product_name} ,</if>
			<if test="product_price != null"> product_price = #{product_price} ,</if>
			<if test="order_code != null and order_code !=''"> order_code = #{order_code} ,</if>
			<if test="order_account != null and order_account !=''"> order_account = #{order_account} ,</if>
			<if test="create_time != null and create_time !=''"> create_time = #{create_time} ,</if>
			<if test="modify_time != null and modify_time !=''"> modify_time = #{modify_time} ,</if>
			<if test="cost_price != null"> cost_price = #{cost_price} ,</if>
			<if test="cost_points != null"> cost_points = #{cost_points} ,</if>
			<if test="cost_money != null"> cost_money = #{cost_money} ,</if>
			<if test="cost_balance != null"> cost_balance = #{cost_balance} ,</if>
			<if test="user_id != null"> user_id = #{user_id} ,</if>
			<if test="status != null"> status = #{status} ,</if>
			<if test="remark != null and remark !=''"> remark = #{remark} ,</if>
			<if test="channel_id != null"> channel_id = #{channel_id} ,</if>
			<if test="event_type != null"> event_type = #{event_type} ,</if>
			<if test="lucky_money != null"> lucky_money = #{lucky_money} ,</if>
			<if test="is_sended != null"> is_sended = #{is_sended} ,</if>
		</set>
		<where>
			id = #{id}
		</where>
	</update>
</mapper>


