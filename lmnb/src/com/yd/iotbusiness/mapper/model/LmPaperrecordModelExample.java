package com.yd.iotbusiness.mapper.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class LmPaperrecordModelExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table lm_paperrecord
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table lm_paperrecord
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table lm_paperrecord
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    protected Integer rows;

    protected Integer page;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lm_paperrecord
     *
     * @mbg.generated
     */
    public LmPaperrecordModelExample() {
        oredCriteria = new ArrayList<>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lm_paperrecord
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lm_paperrecord
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lm_paperrecord
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lm_paperrecord
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lm_paperrecord
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lm_paperrecord
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lm_paperrecord
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lm_paperrecord
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lm_paperrecord
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lm_paperrecord
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    public void setRows(Integer rows) {
        this.rows = rows;
    }

    public Integer getRows() {
        return rows;
    }

    public void setPage(Integer page) {
        this.page = page;
    }

    public Integer getPage() {
        return page;
    }

    public LmPaperrecordModelExample(Object pageInation) {
        oredCriteria = new ArrayList<>();
        LmPaperrecordModel model = (LmPaperrecordModel)pageInation;
        this.setPage(model.getPage());
        this.setRows(model.getRows());
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table lm_paperrecord
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                return ;
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                return ;
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                return ;
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            if (value != null) {
                addCriterion("id =", value, "id");
            }
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            if (value != null) {
                addCriterion("id <>", value, "id");
            }
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            if (value != null) {
                addCriterion("id >", value, "id");
            }
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            if (value != null) {
                addCriterion("id >=", value, "id");
            }
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            if (value != null) {
                addCriterion("id <", value, "id");
            }
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            if (value != null) {
                addCriterion("id <=", value, "id");
            }
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andPaperidIsNull() {
            addCriterion("paperid is null");
            return (Criteria) this;
        }

        public Criteria andPaperidIsNotNull() {
            addCriterion("paperid is not null");
            return (Criteria) this;
        }

        public Criteria andPaperidEqualTo(Integer value) {
            if (value != null) {
                addCriterion("paperid =", value, "paperid");
            }
            return (Criteria) this;
        }

        public Criteria andPaperidNotEqualTo(Integer value) {
            if (value != null) {
                addCriterion("paperid <>", value, "paperid");
            }
            return (Criteria) this;
        }

        public Criteria andPaperidGreaterThan(Integer value) {
            if (value != null) {
                addCriterion("paperid >", value, "paperid");
            }
            return (Criteria) this;
        }

        public Criteria andPaperidGreaterThanOrEqualTo(Integer value) {
            if (value != null) {
                addCriterion("paperid >=", value, "paperid");
            }
            return (Criteria) this;
        }

        public Criteria andPaperidLessThan(Integer value) {
            if (value != null) {
                addCriterion("paperid <", value, "paperid");
            }
            return (Criteria) this;
        }

        public Criteria andPaperidLessThanOrEqualTo(Integer value) {
            if (value != null) {
                addCriterion("paperid <=", value, "paperid");
            }
            return (Criteria) this;
        }

        public Criteria andPaperidIn(List<Integer> values) {
            addCriterion("paperid in", values, "paperid");
            return (Criteria) this;
        }

        public Criteria andPaperidNotIn(List<Integer> values) {
            addCriterion("paperid not in", values, "paperid");
            return (Criteria) this;
        }

        public Criteria andPaperidBetween(Integer value1, Integer value2) {
            addCriterion("paperid between", value1, value2, "paperid");
            return (Criteria) this;
        }

        public Criteria andPaperidNotBetween(Integer value1, Integer value2) {
            addCriterion("paperid not between", value1, value2, "paperid");
            return (Criteria) this;
        }

        public Criteria andPaymentidIsNull() {
            addCriterion("paymentid is null");
            return (Criteria) this;
        }

        public Criteria andPaymentidIsNotNull() {
            addCriterion("paymentid is not null");
            return (Criteria) this;
        }

        public Criteria andPaymentidEqualTo(Integer value) {
            if (value != null) {
                addCriterion("paymentid =", value, "paymentid");
            }
            return (Criteria) this;
        }

        public Criteria andPaymentidNotEqualTo(Integer value) {
            if (value != null) {
                addCriterion("paymentid <>", value, "paymentid");
            }
            return (Criteria) this;
        }

        public Criteria andPaymentidGreaterThan(Integer value) {
            if (value != null) {
                addCriterion("paymentid >", value, "paymentid");
            }
            return (Criteria) this;
        }

        public Criteria andPaymentidGreaterThanOrEqualTo(Integer value) {
            if (value != null) {
                addCriterion("paymentid >=", value, "paymentid");
            }
            return (Criteria) this;
        }

        public Criteria andPaymentidLessThan(Integer value) {
            if (value != null) {
                addCriterion("paymentid <", value, "paymentid");
            }
            return (Criteria) this;
        }

        public Criteria andPaymentidLessThanOrEqualTo(Integer value) {
            if (value != null) {
                addCriterion("paymentid <=", value, "paymentid");
            }
            return (Criteria) this;
        }

        public Criteria andPaymentidIn(List<Integer> values) {
            addCriterion("paymentid in", values, "paymentid");
            return (Criteria) this;
        }

        public Criteria andPaymentidNotIn(List<Integer> values) {
            addCriterion("paymentid not in", values, "paymentid");
            return (Criteria) this;
        }

        public Criteria andPaymentidBetween(Integer value1, Integer value2) {
            addCriterion("paymentid between", value1, value2, "paymentid");
            return (Criteria) this;
        }

        public Criteria andPaymentidNotBetween(Integer value1, Integer value2) {
            addCriterion("paymentid not between", value1, value2, "paymentid");
            return (Criteria) this;
        }

        public Criteria andOperatoridIsNull() {
            addCriterion("operatorid is null");
            return (Criteria) this;
        }

        public Criteria andOperatoridIsNotNull() {
            addCriterion("operatorid is not null");
            return (Criteria) this;
        }

        public Criteria andOperatoridEqualTo(Integer value) {
            if (value != null) {
                addCriterion("operatorid =", value, "operatorid");
            }
            return (Criteria) this;
        }

        public Criteria andOperatoridNotEqualTo(Integer value) {
            if (value != null) {
                addCriterion("operatorid <>", value, "operatorid");
            }
            return (Criteria) this;
        }

        public Criteria andOperatoridGreaterThan(Integer value) {
            if (value != null) {
                addCriterion("operatorid >", value, "operatorid");
            }
            return (Criteria) this;
        }

        public Criteria andOperatoridGreaterThanOrEqualTo(Integer value) {
            if (value != null) {
                addCriterion("operatorid >=", value, "operatorid");
            }
            return (Criteria) this;
        }

        public Criteria andOperatoridLessThan(Integer value) {
            if (value != null) {
                addCriterion("operatorid <", value, "operatorid");
            }
            return (Criteria) this;
        }

        public Criteria andOperatoridLessThanOrEqualTo(Integer value) {
            if (value != null) {
                addCriterion("operatorid <=", value, "operatorid");
            }
            return (Criteria) this;
        }

        public Criteria andOperatoridIn(List<Integer> values) {
            addCriterion("operatorid in", values, "operatorid");
            return (Criteria) this;
        }

        public Criteria andOperatoridNotIn(List<Integer> values) {
            addCriterion("operatorid not in", values, "operatorid");
            return (Criteria) this;
        }

        public Criteria andOperatoridBetween(Integer value1, Integer value2) {
            addCriterion("operatorid between", value1, value2, "operatorid");
            return (Criteria) this;
        }

        public Criteria andOperatoridNotBetween(Integer value1, Integer value2) {
            addCriterion("operatorid not between", value1, value2, "operatorid");
            return (Criteria) this;
        }

        public Criteria andOperatornameIsNull() {
            addCriterion("operatorname is null");
            return (Criteria) this;
        }

        public Criteria andOperatornameIsNotNull() {
            addCriterion("operatorname is not null");
            return (Criteria) this;
        }

        public Criteria andOperatornameEqualTo(String value) {
            if (value != null) {
                addCriterion("operatorname =", value, "operatorname");
            }
            return (Criteria) this;
        }

        public Criteria andOperatornameNotEqualTo(String value) {
            if (value != null) {
                addCriterion("operatorname <>", value, "operatorname");
            }
            return (Criteria) this;
        }

        public Criteria andOperatornameGreaterThan(String value) {
            if (value != null) {
                addCriterion("operatorname >", value, "operatorname");
            }
            return (Criteria) this;
        }

        public Criteria andOperatornameGreaterThanOrEqualTo(String value) {
            if (value != null) {
                addCriterion("operatorname >=", value, "operatorname");
            }
            return (Criteria) this;
        }

        public Criteria andOperatornameLessThan(String value) {
            if (value != null) {
                addCriterion("operatorname <", value, "operatorname");
            }
            return (Criteria) this;
        }

        public Criteria andOperatornameLessThanOrEqualTo(String value) {
            if (value != null) {
                addCriterion("operatorname <=", value, "operatorname");
            }
            return (Criteria) this;
        }

        public Criteria andOperatornameLike(String value) {
            if (value != null) {
                addCriterion("operatorname like", "%"+value+"%", "operatorname");
            }
            return (Criteria) this;
        }

        public Criteria andOperatornameNotLike(String value) {
            if (value != null) {
                addCriterion("operatorname not like", value, "operatorname");
            }
            return (Criteria) this;
        }

        public Criteria andOperatornameIn(List<String> values) {
            addCriterion("operatorname in", values, "operatorname");
            return (Criteria) this;
        }

        public Criteria andOperatornameNotIn(List<String> values) {
            addCriterion("operatorname not in", values, "operatorname");
            return (Criteria) this;
        }

        public Criteria andOperatornameBetween(String value1, String value2) {
            addCriterion("operatorname between", value1, value2, "operatorname");
            return (Criteria) this;
        }

        public Criteria andOperatornameNotBetween(String value1, String value2) {
            addCriterion("operatorname not between", value1, value2, "operatorname");
            return (Criteria) this;
        }

        public Criteria andCreatetimeIsNull() {
            addCriterion("createtime is null");
            return (Criteria) this;
        }

        public Criteria andCreatetimeIsNotNull() {
            addCriterion("createtime is not null");
            return (Criteria) this;
        }

        public Criteria andCreatetimeEqualTo(Date value) {
            if (value != null) {
                addCriterion("createtime =", value, "createtime");
            }
            return (Criteria) this;
        }

        public Criteria andCreatetimeNotEqualTo(Date value) {
            if (value != null) {
                addCriterion("createtime <>", value, "createtime");
            }
            return (Criteria) this;
        }

        public Criteria andCreatetimeGreaterThan(Date value) {
            if (value != null) {
                addCriterion("createtime >", value, "createtime");
            }
            return (Criteria) this;
        }

        public Criteria andCreatetimeGreaterThanOrEqualTo(Date value) {
            if (value != null) {
                addCriterion("createtime >=", value, "createtime");
            }
            return (Criteria) this;
        }

        public Criteria andCreatetimeLessThan(Date value) {
            if (value != null) {
                addCriterion("createtime <", value, "createtime");
            }
            return (Criteria) this;
        }

        public Criteria andCreatetimeLessThanOrEqualTo(Date value) {
            if (value != null) {
                addCriterion("createtime <=", value, "createtime");
            }
            return (Criteria) this;
        }

        public Criteria andCreatetimeIn(List<Date> values) {
            addCriterion("createtime in", values, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeNotIn(List<Date> values) {
            addCriterion("createtime not in", values, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeBetween(Date value1, Date value2) {
            addCriterion("createtime between", value1, value2, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeNotBetween(Date value1, Date value2) {
            addCriterion("createtime not between", value1, value2, "createtime");
            return (Criteria) this;
        }

        public Criteria andTypeIsNull() {
            addCriterion("`type` is null");
            return (Criteria) this;
        }

        public Criteria andTypeIsNotNull() {
            addCriterion("`type` is not null");
            return (Criteria) this;
        }

        public Criteria andTypeEqualTo(Byte value) {
            if (value != null) {
                addCriterion("`type` =", value, "type");
            }
            return (Criteria) this;
        }

        public Criteria andTypeNotEqualTo(Byte value) {
            if (value != null) {
                addCriterion("`type` <>", value, "type");
            }
            return (Criteria) this;
        }

        public Criteria andTypeGreaterThan(Byte value) {
            if (value != null) {
                addCriterion("`type` >", value, "type");
            }
            return (Criteria) this;
        }

        public Criteria andTypeGreaterThanOrEqualTo(Byte value) {
            if (value != null) {
                addCriterion("`type` >=", value, "type");
            }
            return (Criteria) this;
        }

        public Criteria andTypeLessThan(Byte value) {
            if (value != null) {
                addCriterion("`type` <", value, "type");
            }
            return (Criteria) this;
        }

        public Criteria andTypeLessThanOrEqualTo(Byte value) {
            if (value != null) {
                addCriterion("`type` <=", value, "type");
            }
            return (Criteria) this;
        }

        public Criteria andTypeIn(List<Byte> values) {
            addCriterion("`type` in", values, "type");
            return (Criteria) this;
        }

        public Criteria andTypeNotIn(List<Byte> values) {
            addCriterion("`type` not in", values, "type");
            return (Criteria) this;
        }

        public Criteria andTypeBetween(Byte value1, Byte value2) {
            addCriterion("`type` between", value1, value2, "type");
            return (Criteria) this;
        }

        public Criteria andTypeNotBetween(Byte value1, Byte value2) {
            addCriterion("`type` not between", value1, value2, "type");
            return (Criteria) this;
        }

        public Criteria andReamarkIsNull() {
            addCriterion("reamark is null");
            return (Criteria) this;
        }

        public Criteria andReamarkIsNotNull() {
            addCriterion("reamark is not null");
            return (Criteria) this;
        }

        public Criteria andReamarkEqualTo(String value) {
            if (value != null) {
                addCriterion("reamark =", value, "reamark");
            }
            return (Criteria) this;
        }

        public Criteria andReamarkNotEqualTo(String value) {
            if (value != null) {
                addCriterion("reamark <>", value, "reamark");
            }
            return (Criteria) this;
        }

        public Criteria andReamarkGreaterThan(String value) {
            if (value != null) {
                addCriterion("reamark >", value, "reamark");
            }
            return (Criteria) this;
        }

        public Criteria andReamarkGreaterThanOrEqualTo(String value) {
            if (value != null) {
                addCriterion("reamark >=", value, "reamark");
            }
            return (Criteria) this;
        }

        public Criteria andReamarkLessThan(String value) {
            if (value != null) {
                addCriterion("reamark <", value, "reamark");
            }
            return (Criteria) this;
        }

        public Criteria andReamarkLessThanOrEqualTo(String value) {
            if (value != null) {
                addCriterion("reamark <=", value, "reamark");
            }
            return (Criteria) this;
        }

        public Criteria andReamarkLike(String value) {
            if (value != null) {
                addCriterion("reamark like", "%"+value+"%", "reamark");
            }
            return (Criteria) this;
        }

        public Criteria andReamarkNotLike(String value) {
            if (value != null) {
                addCriterion("reamark not like", value, "reamark");
            }
            return (Criteria) this;
        }

        public Criteria andReamarkIn(List<String> values) {
            addCriterion("reamark in", values, "reamark");
            return (Criteria) this;
        }

        public Criteria andReamarkNotIn(List<String> values) {
            addCriterion("reamark not in", values, "reamark");
            return (Criteria) this;
        }

        public Criteria andReamarkBetween(String value1, String value2) {
            addCriterion("reamark between", value1, value2, "reamark");
            return (Criteria) this;
        }

        public Criteria andReamarkNotBetween(String value1, String value2) {
            addCriterion("reamark not between", value1, value2, "reamark");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table lm_paperrecord
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {
        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table lm_paperrecord
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}