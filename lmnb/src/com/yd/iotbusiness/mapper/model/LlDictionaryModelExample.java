package com.yd.iotbusiness.mapper.model;

import java.util.ArrayList;
import java.util.List;

public class LlDictionaryModelExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table ll_dictionary
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table ll_dictionary
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table ll_dictionary
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    protected Integer rows;

    protected Integer page;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ll_dictionary
     *
     * @mbg.generated
     */
    public LlDictionaryModelExample() {
        oredCriteria = new ArrayList<>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ll_dictionary
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ll_dictionary
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ll_dictionary
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ll_dictionary
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ll_dictionary
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ll_dictionary
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ll_dictionary
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ll_dictionary
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ll_dictionary
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ll_dictionary
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    public void setRows(Integer rows) {
        this.rows = rows;
    }

    public Integer getRows() {
        return rows;
    }

    public void setPage(Integer page) {
        this.page = page;
    }

    public Integer getPage() {
        return page;
    }

    public LlDictionaryModelExample(Object pageInation) {
        oredCriteria = new ArrayList<>();
        LlDictionaryModel model = (LlDictionaryModel)pageInation;
        this.setPage(model.getPage());
        this.setRows(model.getRows());
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table ll_dictionary
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                return ;
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                return ;
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                return ;
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            if (value != null) {
                addCriterion("id =", value, "id");
            }
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            if (value != null) {
                addCriterion("id <>", value, "id");
            }
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            if (value != null) {
                addCriterion("id >", value, "id");
            }
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            if (value != null) {
                addCriterion("id >=", value, "id");
            }
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            if (value != null) {
                addCriterion("id <", value, "id");
            }
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            if (value != null) {
                addCriterion("id <=", value, "id");
            }
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andTablenameIsNull() {
            addCriterion("tablename is null");
            return (Criteria) this;
        }

        public Criteria andTablenameIsNotNull() {
            addCriterion("tablename is not null");
            return (Criteria) this;
        }

        public Criteria andTablenameEqualTo(String value) {
            if (value != null) {
                addCriterion("tablename =", value, "tablename");
            }
            return (Criteria) this;
        }

        public Criteria andTablenameNotEqualTo(String value) {
            if (value != null) {
                addCriterion("tablename <>", value, "tablename");
            }
            return (Criteria) this;
        }

        public Criteria andTablenameGreaterThan(String value) {
            if (value != null) {
                addCriterion("tablename >", value, "tablename");
            }
            return (Criteria) this;
        }

        public Criteria andTablenameGreaterThanOrEqualTo(String value) {
            if (value != null) {
                addCriterion("tablename >=", value, "tablename");
            }
            return (Criteria) this;
        }

        public Criteria andTablenameLessThan(String value) {
            if (value != null) {
                addCriterion("tablename <", value, "tablename");
            }
            return (Criteria) this;
        }

        public Criteria andTablenameLessThanOrEqualTo(String value) {
            if (value != null) {
                addCriterion("tablename <=", value, "tablename");
            }
            return (Criteria) this;
        }

        public Criteria andTablenameLike(String value) {
            if (value != null) {
                addCriterion("tablename like", "%"+value+"%", "tablename");
            }
            return (Criteria) this;
        }

        public Criteria andTablenameNotLike(String value) {
            if (value != null) {
                addCriterion("tablename not like", value, "tablename");
            }
            return (Criteria) this;
        }

        public Criteria andTablenameIn(List<String> values) {
            addCriterion("tablename in", values, "tablename");
            return (Criteria) this;
        }

        public Criteria andTablenameNotIn(List<String> values) {
            addCriterion("tablename not in", values, "tablename");
            return (Criteria) this;
        }

        public Criteria andTablenameBetween(String value1, String value2) {
            addCriterion("tablename between", value1, value2, "tablename");
            return (Criteria) this;
        }

        public Criteria andTablenameNotBetween(String value1, String value2) {
            addCriterion("tablename not between", value1, value2, "tablename");
            return (Criteria) this;
        }

        public Criteria andAttributeIsNull() {
            addCriterion("`attribute` is null");
            return (Criteria) this;
        }

        public Criteria andAttributeIsNotNull() {
            addCriterion("`attribute` is not null");
            return (Criteria) this;
        }

        public Criteria andAttributeEqualTo(String value) {
            if (value != null) {
                addCriterion("`attribute` =", value, "attribute");
            }
            return (Criteria) this;
        }

        public Criteria andAttributeNotEqualTo(String value) {
            if (value != null) {
                addCriterion("`attribute` <>", value, "attribute");
            }
            return (Criteria) this;
        }

        public Criteria andAttributeGreaterThan(String value) {
            if (value != null) {
                addCriterion("`attribute` >", value, "attribute");
            }
            return (Criteria) this;
        }

        public Criteria andAttributeGreaterThanOrEqualTo(String value) {
            if (value != null) {
                addCriterion("`attribute` >=", value, "attribute");
            }
            return (Criteria) this;
        }

        public Criteria andAttributeLessThan(String value) {
            if (value != null) {
                addCriterion("`attribute` <", value, "attribute");
            }
            return (Criteria) this;
        }

        public Criteria andAttributeLessThanOrEqualTo(String value) {
            if (value != null) {
                addCriterion("`attribute` <=", value, "attribute");
            }
            return (Criteria) this;
        }

        public Criteria andAttributeLike(String value) {
            if (value != null) {
                addCriterion("`attribute` like", "%"+value+"%", "attribute");
            }
            return (Criteria) this;
        }

        public Criteria andAttributeNotLike(String value) {
            if (value != null) {
                addCriterion("`attribute` not like", value, "attribute");
            }
            return (Criteria) this;
        }

        public Criteria andAttributeIn(List<String> values) {
            addCriterion("`attribute` in", values, "attribute");
            return (Criteria) this;
        }

        public Criteria andAttributeNotIn(List<String> values) {
            addCriterion("`attribute` not in", values, "attribute");
            return (Criteria) this;
        }

        public Criteria andAttributeBetween(String value1, String value2) {
            addCriterion("`attribute` between", value1, value2, "attribute");
            return (Criteria) this;
        }

        public Criteria andAttributeNotBetween(String value1, String value2) {
            addCriterion("`attribute` not between", value1, value2, "attribute");
            return (Criteria) this;
        }

        public Criteria andValueIsNull() {
            addCriterion("`value` is null");
            return (Criteria) this;
        }

        public Criteria andValueIsNotNull() {
            addCriterion("`value` is not null");
            return (Criteria) this;
        }

        public Criteria andValueEqualTo(String value) {
            if (value != null) {
                addCriterion("`value` =", value, "value");
            }
            return (Criteria) this;
        }

        public Criteria andValueNotEqualTo(String value) {
            if (value != null) {
                addCriterion("`value` <>", value, "value");
            }
            return (Criteria) this;
        }

        public Criteria andValueGreaterThan(String value) {
            if (value != null) {
                addCriterion("`value` >", value, "value");
            }
            return (Criteria) this;
        }

        public Criteria andValueGreaterThanOrEqualTo(String value) {
            if (value != null) {
                addCriterion("`value` >=", value, "value");
            }
            return (Criteria) this;
        }

        public Criteria andValueLessThan(String value) {
            if (value != null) {
                addCriterion("`value` <", value, "value");
            }
            return (Criteria) this;
        }

        public Criteria andValueLessThanOrEqualTo(String value) {
            if (value != null) {
                addCriterion("`value` <=", value, "value");
            }
            return (Criteria) this;
        }

        public Criteria andValueLike(String value) {
            if (value != null) {
                addCriterion("`value` like", "%"+value+"%", "value");
            }
            return (Criteria) this;
        }

        public Criteria andValueNotLike(String value) {
            if (value != null) {
                addCriterion("`value` not like", value, "value");
            }
            return (Criteria) this;
        }

        public Criteria andValueIn(List<String> values) {
            addCriterion("`value` in", values, "value");
            return (Criteria) this;
        }

        public Criteria andValueNotIn(List<String> values) {
            addCriterion("`value` not in", values, "value");
            return (Criteria) this;
        }

        public Criteria andValueBetween(String value1, String value2) {
            addCriterion("`value` between", value1, value2, "value");
            return (Criteria) this;
        }

        public Criteria andValueNotBetween(String value1, String value2) {
            addCriterion("`value` not between", value1, value2, "value");
            return (Criteria) this;
        }

        public Criteria andDescriptionIsNull() {
            addCriterion("description is null");
            return (Criteria) this;
        }

        public Criteria andDescriptionIsNotNull() {
            addCriterion("description is not null");
            return (Criteria) this;
        }

        public Criteria andDescriptionEqualTo(String value) {
            if (value != null) {
                addCriterion("description =", value, "description");
            }
            return (Criteria) this;
        }

        public Criteria andDescriptionNotEqualTo(String value) {
            if (value != null) {
                addCriterion("description <>", value, "description");
            }
            return (Criteria) this;
        }

        public Criteria andDescriptionGreaterThan(String value) {
            if (value != null) {
                addCriterion("description >", value, "description");
            }
            return (Criteria) this;
        }

        public Criteria andDescriptionGreaterThanOrEqualTo(String value) {
            if (value != null) {
                addCriterion("description >=", value, "description");
            }
            return (Criteria) this;
        }

        public Criteria andDescriptionLessThan(String value) {
            if (value != null) {
                addCriterion("description <", value, "description");
            }
            return (Criteria) this;
        }

        public Criteria andDescriptionLessThanOrEqualTo(String value) {
            if (value != null) {
                addCriterion("description <=", value, "description");
            }
            return (Criteria) this;
        }

        public Criteria andDescriptionLike(String value) {
            if (value != null) {
                addCriterion("description like", "%"+value+"%", "description");
            }
            return (Criteria) this;
        }

        public Criteria andDescriptionNotLike(String value) {
            if (value != null) {
                addCriterion("description not like", value, "description");
            }
            return (Criteria) this;
        }

        public Criteria andDescriptionIn(List<String> values) {
            addCriterion("description in", values, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionNotIn(List<String> values) {
            addCriterion("description not in", values, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionBetween(String value1, String value2) {
            addCriterion("description between", value1, value2, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionNotBetween(String value1, String value2) {
            addCriterion("description not between", value1, value2, "description");
            return (Criteria) this;
        }

        public Criteria andCommonsIsNull() {
            addCriterion("commons is null");
            return (Criteria) this;
        }

        public Criteria andCommonsIsNotNull() {
            addCriterion("commons is not null");
            return (Criteria) this;
        }

        public Criteria andCommonsEqualTo(String value) {
            if (value != null) {
                addCriterion("commons =", value, "commons");
            }
            return (Criteria) this;
        }

        public Criteria andCommonsNotEqualTo(String value) {
            if (value != null) {
                addCriterion("commons <>", value, "commons");
            }
            return (Criteria) this;
        }

        public Criteria andCommonsGreaterThan(String value) {
            if (value != null) {
                addCriterion("commons >", value, "commons");
            }
            return (Criteria) this;
        }

        public Criteria andCommonsGreaterThanOrEqualTo(String value) {
            if (value != null) {
                addCriterion("commons >=", value, "commons");
            }
            return (Criteria) this;
        }

        public Criteria andCommonsLessThan(String value) {
            if (value != null) {
                addCriterion("commons <", value, "commons");
            }
            return (Criteria) this;
        }

        public Criteria andCommonsLessThanOrEqualTo(String value) {
            if (value != null) {
                addCriterion("commons <=", value, "commons");
            }
            return (Criteria) this;
        }

        public Criteria andCommonsLike(String value) {
            if (value != null) {
                addCriterion("commons like", "%"+value+"%", "commons");
            }
            return (Criteria) this;
        }

        public Criteria andCommonsNotLike(String value) {
            if (value != null) {
                addCriterion("commons not like", value, "commons");
            }
            return (Criteria) this;
        }

        public Criteria andCommonsIn(List<String> values) {
            addCriterion("commons in", values, "commons");
            return (Criteria) this;
        }

        public Criteria andCommonsNotIn(List<String> values) {
            addCriterion("commons not in", values, "commons");
            return (Criteria) this;
        }

        public Criteria andCommonsBetween(String value1, String value2) {
            addCriterion("commons between", value1, value2, "commons");
            return (Criteria) this;
        }

        public Criteria andCommonsNotBetween(String value1, String value2) {
            addCriterion("commons not between", value1, value2, "commons");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table ll_dictionary
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {
        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table ll_dictionary
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}