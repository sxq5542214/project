package com.yd.iotbusiness.mapper.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class LmPaperModelExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table lm_paper
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table lm_paper
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table lm_paper
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    protected Integer rows;

    protected Integer page;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lm_paper
     *
     * @mbg.generated
     */
    public LmPaperModelExample() {
        oredCriteria = new ArrayList<>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lm_paper
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lm_paper
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lm_paper
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lm_paper
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lm_paper
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lm_paper
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lm_paper
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lm_paper
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lm_paper
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lm_paper
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    public void setRows(Integer rows) {
        this.rows = rows;
    }

    public Integer getRows() {
        return rows;
    }

    public void setPage(Integer page) {
        this.page = page;
    }

    public Integer getPage() {
        return page;
    }

    public LmPaperModelExample(Object pageInation) {
        oredCriteria = new ArrayList<>();
        LmPaperModel model = (LmPaperModel)pageInation;
        this.setPage(model.getPage());
        this.setRows(model.getRows());
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table lm_paper
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                return ;
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                return ;
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                return ;
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            if (value != null) {
                addCriterion("id =", value, "id");
            }
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            if (value != null) {
                addCriterion("id <>", value, "id");
            }
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            if (value != null) {
                addCriterion("id >", value, "id");
            }
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            if (value != null) {
                addCriterion("id >=", value, "id");
            }
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            if (value != null) {
                addCriterion("id <", value, "id");
            }
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            if (value != null) {
                addCriterion("id <=", value, "id");
            }
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andSystemidIsNull() {
            addCriterion("systemid is null");
            return (Criteria) this;
        }

        public Criteria andSystemidIsNotNull() {
            addCriterion("systemid is not null");
            return (Criteria) this;
        }

        public Criteria andSystemidEqualTo(Integer value) {
            if (value != null) {
                addCriterion("systemid =", value, "systemid");
            }
            return (Criteria) this;
        }

        public Criteria andSystemidNotEqualTo(Integer value) {
            if (value != null) {
                addCriterion("systemid <>", value, "systemid");
            }
            return (Criteria) this;
        }

        public Criteria andSystemidGreaterThan(Integer value) {
            if (value != null) {
                addCriterion("systemid >", value, "systemid");
            }
            return (Criteria) this;
        }

        public Criteria andSystemidGreaterThanOrEqualTo(Integer value) {
            if (value != null) {
                addCriterion("systemid >=", value, "systemid");
            }
            return (Criteria) this;
        }

        public Criteria andSystemidLessThan(Integer value) {
            if (value != null) {
                addCriterion("systemid <", value, "systemid");
            }
            return (Criteria) this;
        }

        public Criteria andSystemidLessThanOrEqualTo(Integer value) {
            if (value != null) {
                addCriterion("systemid <=", value, "systemid");
            }
            return (Criteria) this;
        }

        public Criteria andSystemidIn(List<Integer> values) {
            addCriterion("systemid in", values, "systemid");
            return (Criteria) this;
        }

        public Criteria andSystemidNotIn(List<Integer> values) {
            addCriterion("systemid not in", values, "systemid");
            return (Criteria) this;
        }

        public Criteria andSystemidBetween(Integer value1, Integer value2) {
            addCriterion("systemid between", value1, value2, "systemid");
            return (Criteria) this;
        }

        public Criteria andSystemidNotBetween(Integer value1, Integer value2) {
            addCriterion("systemid not between", value1, value2, "systemid");
            return (Criteria) this;
        }

        public Criteria andGlobalidIsNull() {
            addCriterion("globalid is null");
            return (Criteria) this;
        }

        public Criteria andGlobalidIsNotNull() {
            addCriterion("globalid is not null");
            return (Criteria) this;
        }

        public Criteria andGlobalidEqualTo(Integer value) {
            if (value != null) {
                addCriterion("globalid =", value, "globalid");
            }
            return (Criteria) this;
        }

        public Criteria andGlobalidNotEqualTo(Integer value) {
            if (value != null) {
                addCriterion("globalid <>", value, "globalid");
            }
            return (Criteria) this;
        }

        public Criteria andGlobalidGreaterThan(Integer value) {
            if (value != null) {
                addCriterion("globalid >", value, "globalid");
            }
            return (Criteria) this;
        }

        public Criteria andGlobalidGreaterThanOrEqualTo(Integer value) {
            if (value != null) {
                addCriterion("globalid >=", value, "globalid");
            }
            return (Criteria) this;
        }

        public Criteria andGlobalidLessThan(Integer value) {
            if (value != null) {
                addCriterion("globalid <", value, "globalid");
            }
            return (Criteria) this;
        }

        public Criteria andGlobalidLessThanOrEqualTo(Integer value) {
            if (value != null) {
                addCriterion("globalid <=", value, "globalid");
            }
            return (Criteria) this;
        }

        public Criteria andGlobalidIn(List<Integer> values) {
            addCriterion("globalid in", values, "globalid");
            return (Criteria) this;
        }

        public Criteria andGlobalidNotIn(List<Integer> values) {
            addCriterion("globalid not in", values, "globalid");
            return (Criteria) this;
        }

        public Criteria andGlobalidBetween(Integer value1, Integer value2) {
            addCriterion("globalid between", value1, value2, "globalid");
            return (Criteria) this;
        }

        public Criteria andGlobalidNotBetween(Integer value1, Integer value2) {
            addCriterion("globalid not between", value1, value2, "globalid");
            return (Criteria) this;
        }

        public Criteria andCodeIsNull() {
            addCriterion("code is null");
            return (Criteria) this;
        }

        public Criteria andCodeIsNotNull() {
            addCriterion("code is not null");
            return (Criteria) this;
        }

        public Criteria andCodeEqualTo(String value) {
            if (value != null) {
                addCriterion("code =", value, "code");
            }
            return (Criteria) this;
        }

        public Criteria andCodeNotEqualTo(String value) {
            if (value != null) {
                addCriterion("code <>", value, "code");
            }
            return (Criteria) this;
        }

        public Criteria andCodeGreaterThan(String value) {
            if (value != null) {
                addCriterion("code >", value, "code");
            }
            return (Criteria) this;
        }

        public Criteria andCodeGreaterThanOrEqualTo(String value) {
            if (value != null) {
                addCriterion("code >=", value, "code");
            }
            return (Criteria) this;
        }

        public Criteria andCodeLessThan(String value) {
            if (value != null) {
                addCriterion("code <", value, "code");
            }
            return (Criteria) this;
        }

        public Criteria andCodeLessThanOrEqualTo(String value) {
            if (value != null) {
                addCriterion("code <=", value, "code");
            }
            return (Criteria) this;
        }

        public Criteria andCodeLike(String value) {
            if (value != null) {
                addCriterion("code like", "%"+value+"%", "code");
            }
            return (Criteria) this;
        }

        public Criteria andCodeNotLike(String value) {
            if (value != null) {
                addCriterion("code not like", value, "code");
            }
            return (Criteria) this;
        }

        public Criteria andCodeIn(List<String> values) {
            addCriterion("code in", values, "code");
            return (Criteria) this;
        }

        public Criteria andCodeNotIn(List<String> values) {
            addCriterion("code not in", values, "code");
            return (Criteria) this;
        }

        public Criteria andCodeBetween(String value1, String value2) {
            addCriterion("code between", value1, value2, "code");
            return (Criteria) this;
        }

        public Criteria andCodeNotBetween(String value1, String value2) {
            addCriterion("code not between", value1, value2, "code");
            return (Criteria) this;
        }

        public Criteria andTitleIsNull() {
            addCriterion("title is null");
            return (Criteria) this;
        }

        public Criteria andTitleIsNotNull() {
            addCriterion("title is not null");
            return (Criteria) this;
        }

        public Criteria andTitleEqualTo(String value) {
            if (value != null) {
                addCriterion("title =", value, "title");
            }
            return (Criteria) this;
        }

        public Criteria andTitleNotEqualTo(String value) {
            if (value != null) {
                addCriterion("title <>", value, "title");
            }
            return (Criteria) this;
        }

        public Criteria andTitleGreaterThan(String value) {
            if (value != null) {
                addCriterion("title >", value, "title");
            }
            return (Criteria) this;
        }

        public Criteria andTitleGreaterThanOrEqualTo(String value) {
            if (value != null) {
                addCriterion("title >=", value, "title");
            }
            return (Criteria) this;
        }

        public Criteria andTitleLessThan(String value) {
            if (value != null) {
                addCriterion("title <", value, "title");
            }
            return (Criteria) this;
        }

        public Criteria andTitleLessThanOrEqualTo(String value) {
            if (value != null) {
                addCriterion("title <=", value, "title");
            }
            return (Criteria) this;
        }

        public Criteria andTitleLike(String value) {
            if (value != null) {
                addCriterion("title like", "%"+value+"%", "title");
            }
            return (Criteria) this;
        }

        public Criteria andTitleNotLike(String value) {
            if (value != null) {
                addCriterion("title not like", value, "title");
            }
            return (Criteria) this;
        }

        public Criteria andTitleIn(List<String> values) {
            addCriterion("title in", values, "title");
            return (Criteria) this;
        }

        public Criteria andTitleNotIn(List<String> values) {
            addCriterion("title not in", values, "title");
            return (Criteria) this;
        }

        public Criteria andTitleBetween(String value1, String value2) {
            addCriterion("title between", value1, value2, "title");
            return (Criteria) this;
        }

        public Criteria andTitleNotBetween(String value1, String value2) {
            addCriterion("title not between", value1, value2, "title");
            return (Criteria) this;
        }

        public Criteria andBackgroundIsNull() {
            addCriterion("background is null");
            return (Criteria) this;
        }

        public Criteria andBackgroundIsNotNull() {
            addCriterion("background is not null");
            return (Criteria) this;
        }

        public Criteria andBackgroundEqualTo(String value) {
            if (value != null) {
                addCriterion("background =", value, "background");
            }
            return (Criteria) this;
        }

        public Criteria andBackgroundNotEqualTo(String value) {
            if (value != null) {
                addCriterion("background <>", value, "background");
            }
            return (Criteria) this;
        }

        public Criteria andBackgroundGreaterThan(String value) {
            if (value != null) {
                addCriterion("background >", value, "background");
            }
            return (Criteria) this;
        }

        public Criteria andBackgroundGreaterThanOrEqualTo(String value) {
            if (value != null) {
                addCriterion("background >=", value, "background");
            }
            return (Criteria) this;
        }

        public Criteria andBackgroundLessThan(String value) {
            if (value != null) {
                addCriterion("background <", value, "background");
            }
            return (Criteria) this;
        }

        public Criteria andBackgroundLessThanOrEqualTo(String value) {
            if (value != null) {
                addCriterion("background <=", value, "background");
            }
            return (Criteria) this;
        }

        public Criteria andBackgroundLike(String value) {
            if (value != null) {
                addCriterion("background like", "%"+value+"%", "background");
            }
            return (Criteria) this;
        }

        public Criteria andBackgroundNotLike(String value) {
            if (value != null) {
                addCriterion("background not like", value, "background");
            }
            return (Criteria) this;
        }

        public Criteria andBackgroundIn(List<String> values) {
            addCriterion("background in", values, "background");
            return (Criteria) this;
        }

        public Criteria andBackgroundNotIn(List<String> values) {
            addCriterion("background not in", values, "background");
            return (Criteria) this;
        }

        public Criteria andBackgroundBetween(String value1, String value2) {
            addCriterion("background between", value1, value2, "background");
            return (Criteria) this;
        }

        public Criteria andBackgroundNotBetween(String value1, String value2) {
            addCriterion("background not between", value1, value2, "background");
            return (Criteria) this;
        }

        public Criteria andCreatetimeIsNull() {
            addCriterion("createtime is null");
            return (Criteria) this;
        }

        public Criteria andCreatetimeIsNotNull() {
            addCriterion("createtime is not null");
            return (Criteria) this;
        }

        public Criteria andCreatetimeEqualTo(Date value) {
            if (value != null) {
                addCriterion("createtime =", value, "createtime");
            }
            return (Criteria) this;
        }

        public Criteria andCreatetimeNotEqualTo(Date value) {
            if (value != null) {
                addCriterion("createtime <>", value, "createtime");
            }
            return (Criteria) this;
        }

        public Criteria andCreatetimeGreaterThan(Date value) {
            if (value != null) {
                addCriterion("createtime >", value, "createtime");
            }
            return (Criteria) this;
        }

        public Criteria andCreatetimeGreaterThanOrEqualTo(Date value) {
            if (value != null) {
                addCriterion("createtime >=", value, "createtime");
            }
            return (Criteria) this;
        }

        public Criteria andCreatetimeLessThan(Date value) {
            if (value != null) {
                addCriterion("createtime <", value, "createtime");
            }
            return (Criteria) this;
        }

        public Criteria andCreatetimeLessThanOrEqualTo(Date value) {
            if (value != null) {
                addCriterion("createtime <=", value, "createtime");
            }
            return (Criteria) this;
        }

        public Criteria andCreatetimeIn(List<Date> values) {
            addCriterion("createtime in", values, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeNotIn(List<Date> values) {
            addCriterion("createtime not in", values, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeBetween(Date value1, Date value2) {
            addCriterion("createtime between", value1, value2, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeNotBetween(Date value1, Date value2) {
            addCriterion("createtime not between", value1, value2, "createtime");
            return (Criteria) this;
        }

        public Criteria andRemarkIsNull() {
            addCriterion("remark is null");
            return (Criteria) this;
        }

        public Criteria andRemarkIsNotNull() {
            addCriterion("remark is not null");
            return (Criteria) this;
        }

        public Criteria andRemarkEqualTo(String value) {
            if (value != null) {
                addCriterion("remark =", value, "remark");
            }
            return (Criteria) this;
        }

        public Criteria andRemarkNotEqualTo(String value) {
            if (value != null) {
                addCriterion("remark <>", value, "remark");
            }
            return (Criteria) this;
        }

        public Criteria andRemarkGreaterThan(String value) {
            if (value != null) {
                addCriterion("remark >", value, "remark");
            }
            return (Criteria) this;
        }

        public Criteria andRemarkGreaterThanOrEqualTo(String value) {
            if (value != null) {
                addCriterion("remark >=", value, "remark");
            }
            return (Criteria) this;
        }

        public Criteria andRemarkLessThan(String value) {
            if (value != null) {
                addCriterion("remark <", value, "remark");
            }
            return (Criteria) this;
        }

        public Criteria andRemarkLessThanOrEqualTo(String value) {
            if (value != null) {
                addCriterion("remark <=", value, "remark");
            }
            return (Criteria) this;
        }

        public Criteria andRemarkLike(String value) {
            if (value != null) {
                addCriterion("remark like", "%"+value+"%", "remark");
            }
            return (Criteria) this;
        }

        public Criteria andRemarkNotLike(String value) {
            if (value != null) {
                addCriterion("remark not like", value, "remark");
            }
            return (Criteria) this;
        }

        public Criteria andRemarkIn(List<String> values) {
            addCriterion("remark in", values, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkNotIn(List<String> values) {
            addCriterion("remark not in", values, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkBetween(String value1, String value2) {
            addCriterion("remark between", value1, value2, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkNotBetween(String value1, String value2) {
            addCriterion("remark not between", value1, value2, "remark");
            return (Criteria) this;
        }

        public Criteria andInvalidIsNull() {
            addCriterion("invalid is null");
            return (Criteria) this;
        }

        public Criteria andInvalidIsNotNull() {
            addCriterion("invalid is not null");
            return (Criteria) this;
        }

        public Criteria andInvalidEqualTo(Byte value) {
            if (value != null) {
                addCriterion("invalid =", value, "invalid");
            }
            return (Criteria) this;
        }

        public Criteria andInvalidNotEqualTo(Byte value) {
            if (value != null) {
                addCriterion("invalid <>", value, "invalid");
            }
            return (Criteria) this;
        }

        public Criteria andInvalidGreaterThan(Byte value) {
            if (value != null) {
                addCriterion("invalid >", value, "invalid");
            }
            return (Criteria) this;
        }

        public Criteria andInvalidGreaterThanOrEqualTo(Byte value) {
            if (value != null) {
                addCriterion("invalid >=", value, "invalid");
            }
            return (Criteria) this;
        }

        public Criteria andInvalidLessThan(Byte value) {
            if (value != null) {
                addCriterion("invalid <", value, "invalid");
            }
            return (Criteria) this;
        }

        public Criteria andInvalidLessThanOrEqualTo(Byte value) {
            if (value != null) {
                addCriterion("invalid <=", value, "invalid");
            }
            return (Criteria) this;
        }

        public Criteria andInvalidIn(List<Byte> values) {
            addCriterion("invalid in", values, "invalid");
            return (Criteria) this;
        }

        public Criteria andInvalidNotIn(List<Byte> values) {
            addCriterion("invalid not in", values, "invalid");
            return (Criteria) this;
        }

        public Criteria andInvalidBetween(Byte value1, Byte value2) {
            addCriterion("invalid between", value1, value2, "invalid");
            return (Criteria) this;
        }

        public Criteria andInvalidNotBetween(Byte value1, Byte value2) {
            addCriterion("invalid not between", value1, value2, "invalid");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table lm_paper
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {
        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table lm_paper
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}