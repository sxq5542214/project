package com.yd.iotbusiness.mapper.model;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class LmFeeModelExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table lm_fee
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table lm_fee
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table lm_fee
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    protected Integer rows;

    protected Integer page;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lm_fee
     *
     * @mbg.generated
     */
    public LmFeeModelExample() {
        oredCriteria = new ArrayList<>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lm_fee
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lm_fee
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lm_fee
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lm_fee
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lm_fee
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lm_fee
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lm_fee
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lm_fee
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lm_fee
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lm_fee
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    public void setRows(Integer rows) {
        this.rows = rows;
    }

    public Integer getRows() {
        return rows;
    }

    public void setPage(Integer page) {
        this.page = page;
    }

    public Integer getPage() {
        return page;
    }

    public LmFeeModelExample(Object pageInation) {
        oredCriteria = new ArrayList<>();
        LmFeeModel model = (LmFeeModel)pageInation;
        this.setPage(model.getPage());
        this.setRows(model.getRows());
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table lm_fee
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                return ;
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                return ;
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                return ;
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            if (value != null) {
                addCriterion("id =", value, "id");
            }
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            if (value != null) {
                addCriterion("id <>", value, "id");
            }
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            if (value != null) {
                addCriterion("id >", value, "id");
            }
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            if (value != null) {
                addCriterion("id >=", value, "id");
            }
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            if (value != null) {
                addCriterion("id <", value, "id");
            }
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            if (value != null) {
                addCriterion("id <=", value, "id");
            }
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andCurnumIsNull() {
            addCriterion("curnum is null");
            return (Criteria) this;
        }

        public Criteria andCurnumIsNotNull() {
            addCriterion("curnum is not null");
            return (Criteria) this;
        }

        public Criteria andCurnumEqualTo(BigDecimal value) {
            if (value != null) {
                addCriterion("curnum =", value, "curnum");
            }
            return (Criteria) this;
        }

        public Criteria andCurnumNotEqualTo(BigDecimal value) {
            if (value != null) {
                addCriterion("curnum <>", value, "curnum");
            }
            return (Criteria) this;
        }

        public Criteria andCurnumGreaterThan(BigDecimal value) {
            if (value != null) {
                addCriterion("curnum >", value, "curnum");
            }
            return (Criteria) this;
        }

        public Criteria andCurnumGreaterThanOrEqualTo(BigDecimal value) {
            if (value != null) {
                addCriterion("curnum >=", value, "curnum");
            }
            return (Criteria) this;
        }

        public Criteria andCurnumLessThan(BigDecimal value) {
            if (value != null) {
                addCriterion("curnum <", value, "curnum");
            }
            return (Criteria) this;
        }

        public Criteria andCurnumLessThanOrEqualTo(BigDecimal value) {
            if (value != null) {
                addCriterion("curnum <=", value, "curnum");
            }
            return (Criteria) this;
        }

        public Criteria andCurnumIn(List<BigDecimal> values) {
            addCriterion("curnum in", values, "curnum");
            return (Criteria) this;
        }

        public Criteria andCurnumNotIn(List<BigDecimal> values) {
            addCriterion("curnum not in", values, "curnum");
            return (Criteria) this;
        }

        public Criteria andCurnumBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("curnum between", value1, value2, "curnum");
            return (Criteria) this;
        }

        public Criteria andCurnumNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("curnum not between", value1, value2, "curnum");
            return (Criteria) this;
        }

        public Criteria andCurquantityIsNull() {
            addCriterion("curquantity is null");
            return (Criteria) this;
        }

        public Criteria andCurquantityIsNotNull() {
            addCriterion("curquantity is not null");
            return (Criteria) this;
        }

        public Criteria andCurquantityEqualTo(BigDecimal value) {
            if (value != null) {
                addCriterion("curquantity =", value, "curquantity");
            }
            return (Criteria) this;
        }

        public Criteria andCurquantityNotEqualTo(BigDecimal value) {
            if (value != null) {
                addCriterion("curquantity <>", value, "curquantity");
            }
            return (Criteria) this;
        }

        public Criteria andCurquantityGreaterThan(BigDecimal value) {
            if (value != null) {
                addCriterion("curquantity >", value, "curquantity");
            }
            return (Criteria) this;
        }

        public Criteria andCurquantityGreaterThanOrEqualTo(BigDecimal value) {
            if (value != null) {
                addCriterion("curquantity >=", value, "curquantity");
            }
            return (Criteria) this;
        }

        public Criteria andCurquantityLessThan(BigDecimal value) {
            if (value != null) {
                addCriterion("curquantity <", value, "curquantity");
            }
            return (Criteria) this;
        }

        public Criteria andCurquantityLessThanOrEqualTo(BigDecimal value) {
            if (value != null) {
                addCriterion("curquantity <=", value, "curquantity");
            }
            return (Criteria) this;
        }

        public Criteria andCurquantityIn(List<BigDecimal> values) {
            addCriterion("curquantity in", values, "curquantity");
            return (Criteria) this;
        }

        public Criteria andCurquantityNotIn(List<BigDecimal> values) {
            addCriterion("curquantity not in", values, "curquantity");
            return (Criteria) this;
        }

        public Criteria andCurquantityBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("curquantity between", value1, value2, "curquantity");
            return (Criteria) this;
        }

        public Criteria andCurquantityNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("curquantity not between", value1, value2, "curquantity");
            return (Criteria) this;
        }

        public Criteria andBillmonthIsNull() {
            addCriterion("billmonth is null");
            return (Criteria) this;
        }

        public Criteria andBillmonthIsNotNull() {
            addCriterion("billmonth is not null");
            return (Criteria) this;
        }

        public Criteria andBillmonthEqualTo(Integer value) {
            if (value != null) {
                addCriterion("billmonth =", value, "billmonth");
            }
            return (Criteria) this;
        }

        public Criteria andBillmonthNotEqualTo(Integer value) {
            if (value != null) {
                addCriterion("billmonth <>", value, "billmonth");
            }
            return (Criteria) this;
        }

        public Criteria andBillmonthGreaterThan(Integer value) {
            if (value != null) {
                addCriterion("billmonth >", value, "billmonth");
            }
            return (Criteria) this;
        }

        public Criteria andBillmonthGreaterThanOrEqualTo(Integer value) {
            if (value != null) {
                addCriterion("billmonth >=", value, "billmonth");
            }
            return (Criteria) this;
        }

        public Criteria andBillmonthLessThan(Integer value) {
            if (value != null) {
                addCriterion("billmonth <", value, "billmonth");
            }
            return (Criteria) this;
        }

        public Criteria andBillmonthLessThanOrEqualTo(Integer value) {
            if (value != null) {
                addCriterion("billmonth <=", value, "billmonth");
            }
            return (Criteria) this;
        }

        public Criteria andBillmonthIn(List<Integer> values) {
            addCriterion("billmonth in", values, "billmonth");
            return (Criteria) this;
        }

        public Criteria andBillmonthNotIn(List<Integer> values) {
            addCriterion("billmonth not in", values, "billmonth");
            return (Criteria) this;
        }

        public Criteria andBillmonthBetween(Integer value1, Integer value2) {
            addCriterion("billmonth between", value1, value2, "billmonth");
            return (Criteria) this;
        }

        public Criteria andBillmonthNotBetween(Integer value1, Integer value2) {
            addCriterion("billmonth not between", value1, value2, "billmonth");
            return (Criteria) this;
        }

        public Criteria andAmountIsNull() {
            addCriterion("amount is null");
            return (Criteria) this;
        }

        public Criteria andAmountIsNotNull() {
            addCriterion("amount is not null");
            return (Criteria) this;
        }

        public Criteria andAmountEqualTo(BigDecimal value) {
            if (value != null) {
                addCriterion("amount =", value, "amount");
            }
            return (Criteria) this;
        }

        public Criteria andAmountNotEqualTo(BigDecimal value) {
            if (value != null) {
                addCriterion("amount <>", value, "amount");
            }
            return (Criteria) this;
        }

        public Criteria andAmountGreaterThan(BigDecimal value) {
            if (value != null) {
                addCriterion("amount >", value, "amount");
            }
            return (Criteria) this;
        }

        public Criteria andAmountGreaterThanOrEqualTo(BigDecimal value) {
            if (value != null) {
                addCriterion("amount >=", value, "amount");
            }
            return (Criteria) this;
        }

        public Criteria andAmountLessThan(BigDecimal value) {
            if (value != null) {
                addCriterion("amount <", value, "amount");
            }
            return (Criteria) this;
        }

        public Criteria andAmountLessThanOrEqualTo(BigDecimal value) {
            if (value != null) {
                addCriterion("amount <=", value, "amount");
            }
            return (Criteria) this;
        }

        public Criteria andAmountIn(List<BigDecimal> values) {
            addCriterion("amount in", values, "amount");
            return (Criteria) this;
        }

        public Criteria andAmountNotIn(List<BigDecimal> values) {
            addCriterion("amount not in", values, "amount");
            return (Criteria) this;
        }

        public Criteria andAmountBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("amount between", value1, value2, "amount");
            return (Criteria) this;
        }

        public Criteria andAmountNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("amount not between", value1, value2, "amount");
            return (Criteria) this;
        }

        public Criteria andAfterbalanceIsNull() {
            addCriterion("afterbalance is null");
            return (Criteria) this;
        }

        public Criteria andAfterbalanceIsNotNull() {
            addCriterion("afterbalance is not null");
            return (Criteria) this;
        }

        public Criteria andAfterbalanceEqualTo(BigDecimal value) {
            if (value != null) {
                addCriterion("afterbalance =", value, "afterbalance");
            }
            return (Criteria) this;
        }

        public Criteria andAfterbalanceNotEqualTo(BigDecimal value) {
            if (value != null) {
                addCriterion("afterbalance <>", value, "afterbalance");
            }
            return (Criteria) this;
        }

        public Criteria andAfterbalanceGreaterThan(BigDecimal value) {
            if (value != null) {
                addCriterion("afterbalance >", value, "afterbalance");
            }
            return (Criteria) this;
        }

        public Criteria andAfterbalanceGreaterThanOrEqualTo(BigDecimal value) {
            if (value != null) {
                addCriterion("afterbalance >=", value, "afterbalance");
            }
            return (Criteria) this;
        }

        public Criteria andAfterbalanceLessThan(BigDecimal value) {
            if (value != null) {
                addCriterion("afterbalance <", value, "afterbalance");
            }
            return (Criteria) this;
        }

        public Criteria andAfterbalanceLessThanOrEqualTo(BigDecimal value) {
            if (value != null) {
                addCriterion("afterbalance <=", value, "afterbalance");
            }
            return (Criteria) this;
        }

        public Criteria andAfterbalanceIn(List<BigDecimal> values) {
            addCriterion("afterbalance in", values, "afterbalance");
            return (Criteria) this;
        }

        public Criteria andAfterbalanceNotIn(List<BigDecimal> values) {
            addCriterion("afterbalance not in", values, "afterbalance");
            return (Criteria) this;
        }

        public Criteria andAfterbalanceBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("afterbalance between", value1, value2, "afterbalance");
            return (Criteria) this;
        }

        public Criteria andAfterbalanceNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("afterbalance not between", value1, value2, "afterbalance");
            return (Criteria) this;
        }

        public Criteria andCreatetimeIsNull() {
            addCriterion("createtime is null");
            return (Criteria) this;
        }

        public Criteria andCreatetimeIsNotNull() {
            addCriterion("createtime is not null");
            return (Criteria) this;
        }

        public Criteria andCreatetimeEqualTo(Date value) {
            if (value != null) {
                addCriterion("createtime =", value, "createtime");
            }
            return (Criteria) this;
        }

        public Criteria andCreatetimeNotEqualTo(Date value) {
            if (value != null) {
                addCriterion("createtime <>", value, "createtime");
            }
            return (Criteria) this;
        }

        public Criteria andCreatetimeGreaterThan(Date value) {
            if (value != null) {
                addCriterion("createtime >", value, "createtime");
            }
            return (Criteria) this;
        }

        public Criteria andCreatetimeGreaterThanOrEqualTo(Date value) {
            if (value != null) {
                addCriterion("createtime >=", value, "createtime");
            }
            return (Criteria) this;
        }

        public Criteria andCreatetimeLessThan(Date value) {
            if (value != null) {
                addCriterion("createtime <", value, "createtime");
            }
            return (Criteria) this;
        }

        public Criteria andCreatetimeLessThanOrEqualTo(Date value) {
            if (value != null) {
                addCriterion("createtime <=", value, "createtime");
            }
            return (Criteria) this;
        }

        public Criteria andCreatetimeIn(List<Date> values) {
            addCriterion("createtime in", values, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeNotIn(List<Date> values) {
            addCriterion("createtime not in", values, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeBetween(Date value1, Date value2) {
            addCriterion("createtime between", value1, value2, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeNotBetween(Date value1, Date value2) {
            addCriterion("createtime not between", value1, value2, "createtime");
            return (Criteria) this;
        }

        public Criteria andCycleflagIsNull() {
            addCriterion("cycleflag is null");
            return (Criteria) this;
        }

        public Criteria andCycleflagIsNotNull() {
            addCriterion("cycleflag is not null");
            return (Criteria) this;
        }

        public Criteria andCycleflagEqualTo(Byte value) {
            if (value != null) {
                addCriterion("cycleflag =", value, "cycleflag");
            }
            return (Criteria) this;
        }

        public Criteria andCycleflagNotEqualTo(Byte value) {
            if (value != null) {
                addCriterion("cycleflag <>", value, "cycleflag");
            }
            return (Criteria) this;
        }

        public Criteria andCycleflagGreaterThan(Byte value) {
            if (value != null) {
                addCriterion("cycleflag >", value, "cycleflag");
            }
            return (Criteria) this;
        }

        public Criteria andCycleflagGreaterThanOrEqualTo(Byte value) {
            if (value != null) {
                addCriterion("cycleflag >=", value, "cycleflag");
            }
            return (Criteria) this;
        }

        public Criteria andCycleflagLessThan(Byte value) {
            if (value != null) {
                addCriterion("cycleflag <", value, "cycleflag");
            }
            return (Criteria) this;
        }

        public Criteria andCycleflagLessThanOrEqualTo(Byte value) {
            if (value != null) {
                addCriterion("cycleflag <=", value, "cycleflag");
            }
            return (Criteria) this;
        }

        public Criteria andCycleflagIn(List<Byte> values) {
            addCriterion("cycleflag in", values, "cycleflag");
            return (Criteria) this;
        }

        public Criteria andCycleflagNotIn(List<Byte> values) {
            addCriterion("cycleflag not in", values, "cycleflag");
            return (Criteria) this;
        }

        public Criteria andCycleflagBetween(Byte value1, Byte value2) {
            addCriterion("cycleflag between", value1, value2, "cycleflag");
            return (Criteria) this;
        }

        public Criteria andCycleflagNotBetween(Byte value1, Byte value2) {
            addCriterion("cycleflag not between", value1, value2, "cycleflag");
            return (Criteria) this;
        }

        public Criteria andStateIsNull() {
            addCriterion("`state` is null");
            return (Criteria) this;
        }

        public Criteria andStateIsNotNull() {
            addCriterion("`state` is not null");
            return (Criteria) this;
        }

        public Criteria andStateEqualTo(Byte value) {
            if (value != null) {
                addCriterion("`state` =", value, "state");
            }
            return (Criteria) this;
        }

        public Criteria andStateNotEqualTo(Byte value) {
            if (value != null) {
                addCriterion("`state` <>", value, "state");
            }
            return (Criteria) this;
        }

        public Criteria andStateGreaterThan(Byte value) {
            if (value != null) {
                addCriterion("`state` >", value, "state");
            }
            return (Criteria) this;
        }

        public Criteria andStateGreaterThanOrEqualTo(Byte value) {
            if (value != null) {
                addCriterion("`state` >=", value, "state");
            }
            return (Criteria) this;
        }

        public Criteria andStateLessThan(Byte value) {
            if (value != null) {
                addCriterion("`state` <", value, "state");
            }
            return (Criteria) this;
        }

        public Criteria andStateLessThanOrEqualTo(Byte value) {
            if (value != null) {
                addCriterion("`state` <=", value, "state");
            }
            return (Criteria) this;
        }

        public Criteria andStateIn(List<Byte> values) {
            addCriterion("`state` in", values, "state");
            return (Criteria) this;
        }

        public Criteria andStateNotIn(List<Byte> values) {
            addCriterion("`state` not in", values, "state");
            return (Criteria) this;
        }

        public Criteria andStateBetween(Byte value1, Byte value2) {
            addCriterion("`state` between", value1, value2, "state");
            return (Criteria) this;
        }

        public Criteria andStateNotBetween(Byte value1, Byte value2) {
            addCriterion("`state` not between", value1, value2, "state");
            return (Criteria) this;
        }

        public Criteria andLifecodeIsNull() {
            addCriterion("lifecode is null");
            return (Criteria) this;
        }

        public Criteria andLifecodeIsNotNull() {
            addCriterion("lifecode is not null");
            return (Criteria) this;
        }

        public Criteria andLifecodeEqualTo(Integer value) {
            if (value != null) {
                addCriterion("lifecode =", value, "lifecode");
            }
            return (Criteria) this;
        }

        public Criteria andLifecodeNotEqualTo(Integer value) {
            if (value != null) {
                addCriterion("lifecode <>", value, "lifecode");
            }
            return (Criteria) this;
        }

        public Criteria andLifecodeGreaterThan(Integer value) {
            if (value != null) {
                addCriterion("lifecode >", value, "lifecode");
            }
            return (Criteria) this;
        }

        public Criteria andLifecodeGreaterThanOrEqualTo(Integer value) {
            if (value != null) {
                addCriterion("lifecode >=", value, "lifecode");
            }
            return (Criteria) this;
        }

        public Criteria andLifecodeLessThan(Integer value) {
            if (value != null) {
                addCriterion("lifecode <", value, "lifecode");
            }
            return (Criteria) this;
        }

        public Criteria andLifecodeLessThanOrEqualTo(Integer value) {
            if (value != null) {
                addCriterion("lifecode <=", value, "lifecode");
            }
            return (Criteria) this;
        }

        public Criteria andLifecodeIn(List<Integer> values) {
            addCriterion("lifecode in", values, "lifecode");
            return (Criteria) this;
        }

        public Criteria andLifecodeNotIn(List<Integer> values) {
            addCriterion("lifecode not in", values, "lifecode");
            return (Criteria) this;
        }

        public Criteria andLifecodeBetween(Integer value1, Integer value2) {
            addCriterion("lifecode between", value1, value2, "lifecode");
            return (Criteria) this;
        }

        public Criteria andLifecodeNotBetween(Integer value1, Integer value2) {
            addCriterion("lifecode not between", value1, value2, "lifecode");
            return (Criteria) this;
        }

        public Criteria andSystemidIsNull() {
            addCriterion("systemid is null");
            return (Criteria) this;
        }

        public Criteria andSystemidIsNotNull() {
            addCriterion("systemid is not null");
            return (Criteria) this;
        }

        public Criteria andSystemidEqualTo(Integer value) {
            if (value != null) {
                addCriterion("systemid =", value, "systemid");
            }
            return (Criteria) this;
        }

        public Criteria andSystemidNotEqualTo(Integer value) {
            if (value != null) {
                addCriterion("systemid <>", value, "systemid");
            }
            return (Criteria) this;
        }

        public Criteria andSystemidGreaterThan(Integer value) {
            if (value != null) {
                addCriterion("systemid >", value, "systemid");
            }
            return (Criteria) this;
        }

        public Criteria andSystemidGreaterThanOrEqualTo(Integer value) {
            if (value != null) {
                addCriterion("systemid >=", value, "systemid");
            }
            return (Criteria) this;
        }

        public Criteria andSystemidLessThan(Integer value) {
            if (value != null) {
                addCriterion("systemid <", value, "systemid");
            }
            return (Criteria) this;
        }

        public Criteria andSystemidLessThanOrEqualTo(Integer value) {
            if (value != null) {
                addCriterion("systemid <=", value, "systemid");
            }
            return (Criteria) this;
        }

        public Criteria andSystemidIn(List<Integer> values) {
            addCriterion("systemid in", values, "systemid");
            return (Criteria) this;
        }

        public Criteria andSystemidNotIn(List<Integer> values) {
            addCriterion("systemid not in", values, "systemid");
            return (Criteria) this;
        }

        public Criteria andSystemidBetween(Integer value1, Integer value2) {
            addCriterion("systemid between", value1, value2, "systemid");
            return (Criteria) this;
        }

        public Criteria andSystemidNotBetween(Integer value1, Integer value2) {
            addCriterion("systemid not between", value1, value2, "systemid");
            return (Criteria) this;
        }

        public Criteria andPriceidIsNull() {
            addCriterion("priceid is null");
            return (Criteria) this;
        }

        public Criteria andPriceidIsNotNull() {
            addCriterion("priceid is not null");
            return (Criteria) this;
        }

        public Criteria andPriceidEqualTo(Integer value) {
            if (value != null) {
                addCriterion("priceid =", value, "priceid");
            }
            return (Criteria) this;
        }

        public Criteria andPriceidNotEqualTo(Integer value) {
            if (value != null) {
                addCriterion("priceid <>", value, "priceid");
            }
            return (Criteria) this;
        }

        public Criteria andPriceidGreaterThan(Integer value) {
            if (value != null) {
                addCriterion("priceid >", value, "priceid");
            }
            return (Criteria) this;
        }

        public Criteria andPriceidGreaterThanOrEqualTo(Integer value) {
            if (value != null) {
                addCriterion("priceid >=", value, "priceid");
            }
            return (Criteria) this;
        }

        public Criteria andPriceidLessThan(Integer value) {
            if (value != null) {
                addCriterion("priceid <", value, "priceid");
            }
            return (Criteria) this;
        }

        public Criteria andPriceidLessThanOrEqualTo(Integer value) {
            if (value != null) {
                addCriterion("priceid <=", value, "priceid");
            }
            return (Criteria) this;
        }

        public Criteria andPriceidIn(List<Integer> values) {
            addCriterion("priceid in", values, "priceid");
            return (Criteria) this;
        }

        public Criteria andPriceidNotIn(List<Integer> values) {
            addCriterion("priceid not in", values, "priceid");
            return (Criteria) this;
        }

        public Criteria andPriceidBetween(Integer value1, Integer value2) {
            addCriterion("priceid between", value1, value2, "priceid");
            return (Criteria) this;
        }

        public Criteria andPriceidNotBetween(Integer value1, Integer value2) {
            addCriterion("priceid not between", value1, value2, "priceid");
            return (Criteria) this;
        }

        public Criteria andRecordidIsNull() {
            addCriterion("recordid is null");
            return (Criteria) this;
        }

        public Criteria andRecordidIsNotNull() {
            addCriterion("recordid is not null");
            return (Criteria) this;
        }

        public Criteria andRecordidEqualTo(Integer value) {
            if (value != null) {
                addCriterion("recordid =", value, "recordid");
            }
            return (Criteria) this;
        }

        public Criteria andRecordidNotEqualTo(Integer value) {
            if (value != null) {
                addCriterion("recordid <>", value, "recordid");
            }
            return (Criteria) this;
        }

        public Criteria andRecordidGreaterThan(Integer value) {
            if (value != null) {
                addCriterion("recordid >", value, "recordid");
            }
            return (Criteria) this;
        }

        public Criteria andRecordidGreaterThanOrEqualTo(Integer value) {
            if (value != null) {
                addCriterion("recordid >=", value, "recordid");
            }
            return (Criteria) this;
        }

        public Criteria andRecordidLessThan(Integer value) {
            if (value != null) {
                addCriterion("recordid <", value, "recordid");
            }
            return (Criteria) this;
        }

        public Criteria andRecordidLessThanOrEqualTo(Integer value) {
            if (value != null) {
                addCriterion("recordid <=", value, "recordid");
            }
            return (Criteria) this;
        }

        public Criteria andRecordidIn(List<Integer> values) {
            addCriterion("recordid in", values, "recordid");
            return (Criteria) this;
        }

        public Criteria andRecordidNotIn(List<Integer> values) {
            addCriterion("recordid not in", values, "recordid");
            return (Criteria) this;
        }

        public Criteria andRecordidBetween(Integer value1, Integer value2) {
            addCriterion("recordid between", value1, value2, "recordid");
            return (Criteria) this;
        }

        public Criteria andRecordidNotBetween(Integer value1, Integer value2) {
            addCriterion("recordid not between", value1, value2, "recordid");
            return (Criteria) this;
        }

        public Criteria andMeteridIsNull() {
            addCriterion("meterid is null");
            return (Criteria) this;
        }

        public Criteria andMeteridIsNotNull() {
            addCriterion("meterid is not null");
            return (Criteria) this;
        }

        public Criteria andMeteridEqualTo(Integer value) {
            if (value != null) {
                addCriterion("meterid =", value, "meterid");
            }
            return (Criteria) this;
        }

        public Criteria andMeteridNotEqualTo(Integer value) {
            if (value != null) {
                addCriterion("meterid <>", value, "meterid");
            }
            return (Criteria) this;
        }

        public Criteria andMeteridGreaterThan(Integer value) {
            if (value != null) {
                addCriterion("meterid >", value, "meterid");
            }
            return (Criteria) this;
        }

        public Criteria andMeteridGreaterThanOrEqualTo(Integer value) {
            if (value != null) {
                addCriterion("meterid >=", value, "meterid");
            }
            return (Criteria) this;
        }

        public Criteria andMeteridLessThan(Integer value) {
            if (value != null) {
                addCriterion("meterid <", value, "meterid");
            }
            return (Criteria) this;
        }

        public Criteria andMeteridLessThanOrEqualTo(Integer value) {
            if (value != null) {
                addCriterion("meterid <=", value, "meterid");
            }
            return (Criteria) this;
        }

        public Criteria andMeteridIn(List<Integer> values) {
            addCriterion("meterid in", values, "meterid");
            return (Criteria) this;
        }

        public Criteria andMeteridNotIn(List<Integer> values) {
            addCriterion("meterid not in", values, "meterid");
            return (Criteria) this;
        }

        public Criteria andMeteridBetween(Integer value1, Integer value2) {
            addCriterion("meterid between", value1, value2, "meterid");
            return (Criteria) this;
        }

        public Criteria andMeteridNotBetween(Integer value1, Integer value2) {
            addCriterion("meterid not between", value1, value2, "meterid");
            return (Criteria) this;
        }

        public Criteria andSettleidIsNull() {
            addCriterion("settleid is null");
            return (Criteria) this;
        }

        public Criteria andSettleidIsNotNull() {
            addCriterion("settleid is not null");
            return (Criteria) this;
        }

        public Criteria andSettleidEqualTo(Integer value) {
            if (value != null) {
                addCriterion("settleid =", value, "settleid");
            }
            return (Criteria) this;
        }

        public Criteria andSettleidNotEqualTo(Integer value) {
            if (value != null) {
                addCriterion("settleid <>", value, "settleid");
            }
            return (Criteria) this;
        }

        public Criteria andSettleidGreaterThan(Integer value) {
            if (value != null) {
                addCriterion("settleid >", value, "settleid");
            }
            return (Criteria) this;
        }

        public Criteria andSettleidGreaterThanOrEqualTo(Integer value) {
            if (value != null) {
                addCriterion("settleid >=", value, "settleid");
            }
            return (Criteria) this;
        }

        public Criteria andSettleidLessThan(Integer value) {
            if (value != null) {
                addCriterion("settleid <", value, "settleid");
            }
            return (Criteria) this;
        }

        public Criteria andSettleidLessThanOrEqualTo(Integer value) {
            if (value != null) {
                addCriterion("settleid <=", value, "settleid");
            }
            return (Criteria) this;
        }

        public Criteria andSettleidIn(List<Integer> values) {
            addCriterion("settleid in", values, "settleid");
            return (Criteria) this;
        }

        public Criteria andSettleidNotIn(List<Integer> values) {
            addCriterion("settleid not in", values, "settleid");
            return (Criteria) this;
        }

        public Criteria andSettleidBetween(Integer value1, Integer value2) {
            addCriterion("settleid between", value1, value2, "settleid");
            return (Criteria) this;
        }

        public Criteria andSettleidNotBetween(Integer value1, Integer value2) {
            addCriterion("settleid not between", value1, value2, "settleid");
            return (Criteria) this;
        }

        public Criteria andJoinflagIsNull() {
            addCriterion("joinflag is null");
            return (Criteria) this;
        }

        public Criteria andJoinflagIsNotNull() {
            addCriterion("joinflag is not null");
            return (Criteria) this;
        }

        public Criteria andJoinflagEqualTo(Byte value) {
            if (value != null) {
                addCriterion("joinflag =", value, "joinflag");
            }
            return (Criteria) this;
        }

        public Criteria andJoinflagNotEqualTo(Byte value) {
            if (value != null) {
                addCriterion("joinflag <>", value, "joinflag");
            }
            return (Criteria) this;
        }

        public Criteria andJoinflagGreaterThan(Byte value) {
            if (value != null) {
                addCriterion("joinflag >", value, "joinflag");
            }
            return (Criteria) this;
        }

        public Criteria andJoinflagGreaterThanOrEqualTo(Byte value) {
            if (value != null) {
                addCriterion("joinflag >=", value, "joinflag");
            }
            return (Criteria) this;
        }

        public Criteria andJoinflagLessThan(Byte value) {
            if (value != null) {
                addCriterion("joinflag <", value, "joinflag");
            }
            return (Criteria) this;
        }

        public Criteria andJoinflagLessThanOrEqualTo(Byte value) {
            if (value != null) {
                addCriterion("joinflag <=", value, "joinflag");
            }
            return (Criteria) this;
        }

        public Criteria andJoinflagIn(List<Byte> values) {
            addCriterion("joinflag in", values, "joinflag");
            return (Criteria) this;
        }

        public Criteria andJoinflagNotIn(List<Byte> values) {
            addCriterion("joinflag not in", values, "joinflag");
            return (Criteria) this;
        }

        public Criteria andJoinflagBetween(Byte value1, Byte value2) {
            addCriterion("joinflag between", value1, value2, "joinflag");
            return (Criteria) this;
        }

        public Criteria andJoinflagNotBetween(Byte value1, Byte value2) {
            addCriterion("joinflag not between", value1, value2, "joinflag");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table lm_fee
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {
        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table lm_fee
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}