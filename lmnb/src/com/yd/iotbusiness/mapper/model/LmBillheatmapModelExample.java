package com.yd.iotbusiness.mapper.model;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

public class LmBillheatmapModelExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table lm_billheatmap
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table lm_billheatmap
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table lm_billheatmap
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    protected Integer rows;

    protected Integer page;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lm_billheatmap
     *
     * @mbg.generated
     */
    public LmBillheatmapModelExample() {
        oredCriteria = new ArrayList<>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lm_billheatmap
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lm_billheatmap
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lm_billheatmap
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lm_billheatmap
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lm_billheatmap
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lm_billheatmap
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lm_billheatmap
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lm_billheatmap
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lm_billheatmap
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lm_billheatmap
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    public void setRows(Integer rows) {
        this.rows = rows;
    }

    public Integer getRows() {
        return rows;
    }

    public void setPage(Integer page) {
        this.page = page;
    }

    public Integer getPage() {
        return page;
    }

    public LmBillheatmapModelExample(Object pageInation) {
        oredCriteria = new ArrayList<>();
        LmBillheatmapModel model = (LmBillheatmapModel)pageInation;
        this.setPage(model.getPage());
        this.setRows(model.getRows());
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table lm_billheatmap
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                return ;
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                return ;
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                return ;
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            if (value != null) {
                addCriterion("id =", value, "id");
            }
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            if (value != null) {
                addCriterion("id <>", value, "id");
            }
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            if (value != null) {
                addCriterion("id >", value, "id");
            }
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            if (value != null) {
                addCriterion("id >=", value, "id");
            }
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            if (value != null) {
                addCriterion("id <", value, "id");
            }
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            if (value != null) {
                addCriterion("id <=", value, "id");
            }
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andStartnumIsNull() {
            addCriterion("startnum is null");
            return (Criteria) this;
        }

        public Criteria andStartnumIsNotNull() {
            addCriterion("startnum is not null");
            return (Criteria) this;
        }

        public Criteria andStartnumEqualTo(BigDecimal value) {
            if (value != null) {
                addCriterion("startnum =", value, "startnum");
            }
            return (Criteria) this;
        }

        public Criteria andStartnumNotEqualTo(BigDecimal value) {
            if (value != null) {
                addCriterion("startnum <>", value, "startnum");
            }
            return (Criteria) this;
        }

        public Criteria andStartnumGreaterThan(BigDecimal value) {
            if (value != null) {
                addCriterion("startnum >", value, "startnum");
            }
            return (Criteria) this;
        }

        public Criteria andStartnumGreaterThanOrEqualTo(BigDecimal value) {
            if (value != null) {
                addCriterion("startnum >=", value, "startnum");
            }
            return (Criteria) this;
        }

        public Criteria andStartnumLessThan(BigDecimal value) {
            if (value != null) {
                addCriterion("startnum <", value, "startnum");
            }
            return (Criteria) this;
        }

        public Criteria andStartnumLessThanOrEqualTo(BigDecimal value) {
            if (value != null) {
                addCriterion("startnum <=", value, "startnum");
            }
            return (Criteria) this;
        }

        public Criteria andStartnumIn(List<BigDecimal> values) {
            addCriterion("startnum in", values, "startnum");
            return (Criteria) this;
        }

        public Criteria andStartnumNotIn(List<BigDecimal> values) {
            addCriterion("startnum not in", values, "startnum");
            return (Criteria) this;
        }

        public Criteria andStartnumBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("startnum between", value1, value2, "startnum");
            return (Criteria) this;
        }

        public Criteria andStartnumNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("startnum not between", value1, value2, "startnum");
            return (Criteria) this;
        }

        public Criteria andEndnumIsNull() {
            addCriterion("endnum is null");
            return (Criteria) this;
        }

        public Criteria andEndnumIsNotNull() {
            addCriterion("endnum is not null");
            return (Criteria) this;
        }

        public Criteria andEndnumEqualTo(BigDecimal value) {
            if (value != null) {
                addCriterion("endnum =", value, "endnum");
            }
            return (Criteria) this;
        }

        public Criteria andEndnumNotEqualTo(BigDecimal value) {
            if (value != null) {
                addCriterion("endnum <>", value, "endnum");
            }
            return (Criteria) this;
        }

        public Criteria andEndnumGreaterThan(BigDecimal value) {
            if (value != null) {
                addCriterion("endnum >", value, "endnum");
            }
            return (Criteria) this;
        }

        public Criteria andEndnumGreaterThanOrEqualTo(BigDecimal value) {
            if (value != null) {
                addCriterion("endnum >=", value, "endnum");
            }
            return (Criteria) this;
        }

        public Criteria andEndnumLessThan(BigDecimal value) {
            if (value != null) {
                addCriterion("endnum <", value, "endnum");
            }
            return (Criteria) this;
        }

        public Criteria andEndnumLessThanOrEqualTo(BigDecimal value) {
            if (value != null) {
                addCriterion("endnum <=", value, "endnum");
            }
            return (Criteria) this;
        }

        public Criteria andEndnumIn(List<BigDecimal> values) {
            addCriterion("endnum in", values, "endnum");
            return (Criteria) this;
        }

        public Criteria andEndnumNotIn(List<BigDecimal> values) {
            addCriterion("endnum not in", values, "endnum");
            return (Criteria) this;
        }

        public Criteria andEndnumBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("endnum between", value1, value2, "endnum");
            return (Criteria) this;
        }

        public Criteria andEndnumNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("endnum not between", value1, value2, "endnum");
            return (Criteria) this;
        }

        public Criteria andQuantityIsNull() {
            addCriterion("quantity is null");
            return (Criteria) this;
        }

        public Criteria andQuantityIsNotNull() {
            addCriterion("quantity is not null");
            return (Criteria) this;
        }

        public Criteria andQuantityEqualTo(BigDecimal value) {
            if (value != null) {
                addCriterion("quantity =", value, "quantity");
            }
            return (Criteria) this;
        }

        public Criteria andQuantityNotEqualTo(BigDecimal value) {
            if (value != null) {
                addCriterion("quantity <>", value, "quantity");
            }
            return (Criteria) this;
        }

        public Criteria andQuantityGreaterThan(BigDecimal value) {
            if (value != null) {
                addCriterion("quantity >", value, "quantity");
            }
            return (Criteria) this;
        }

        public Criteria andQuantityGreaterThanOrEqualTo(BigDecimal value) {
            if (value != null) {
                addCriterion("quantity >=", value, "quantity");
            }
            return (Criteria) this;
        }

        public Criteria andQuantityLessThan(BigDecimal value) {
            if (value != null) {
                addCriterion("quantity <", value, "quantity");
            }
            return (Criteria) this;
        }

        public Criteria andQuantityLessThanOrEqualTo(BigDecimal value) {
            if (value != null) {
                addCriterion("quantity <=", value, "quantity");
            }
            return (Criteria) this;
        }

        public Criteria andQuantityIn(List<BigDecimal> values) {
            addCriterion("quantity in", values, "quantity");
            return (Criteria) this;
        }

        public Criteria andQuantityNotIn(List<BigDecimal> values) {
            addCriterion("quantity not in", values, "quantity");
            return (Criteria) this;
        }

        public Criteria andQuantityBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("quantity between", value1, value2, "quantity");
            return (Criteria) this;
        }

        public Criteria andQuantityNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("quantity not between", value1, value2, "quantity");
            return (Criteria) this;
        }

        public Criteria andBillmonthIsNull() {
            addCriterion("billmonth is null");
            return (Criteria) this;
        }

        public Criteria andBillmonthIsNotNull() {
            addCriterion("billmonth is not null");
            return (Criteria) this;
        }

        public Criteria andBillmonthEqualTo(String value) {
            if (value != null) {
                addCriterion("billmonth =", value, "billmonth");
            }
            return (Criteria) this;
        }

        public Criteria andBillmonthNotEqualTo(String value) {
            if (value != null) {
                addCriterion("billmonth <>", value, "billmonth");
            }
            return (Criteria) this;
        }

        public Criteria andBillmonthGreaterThan(String value) {
            if (value != null) {
                addCriterion("billmonth >", value, "billmonth");
            }
            return (Criteria) this;
        }

        public Criteria andBillmonthGreaterThanOrEqualTo(String value) {
            if (value != null) {
                addCriterion("billmonth >=", value, "billmonth");
            }
            return (Criteria) this;
        }

        public Criteria andBillmonthLessThan(String value) {
            if (value != null) {
                addCriterion("billmonth <", value, "billmonth");
            }
            return (Criteria) this;
        }

        public Criteria andBillmonthLessThanOrEqualTo(String value) {
            if (value != null) {
                addCriterion("billmonth <=", value, "billmonth");
            }
            return (Criteria) this;
        }

        public Criteria andBillmonthLike(String value) {
            if (value != null) {
                addCriterion("billmonth like", "%"+value+"%", "billmonth");
            }
            return (Criteria) this;
        }

        public Criteria andBillmonthNotLike(String value) {
            if (value != null) {
                addCriterion("billmonth not like", value, "billmonth");
            }
            return (Criteria) this;
        }

        public Criteria andBillmonthIn(List<String> values) {
            addCriterion("billmonth in", values, "billmonth");
            return (Criteria) this;
        }

        public Criteria andBillmonthNotIn(List<String> values) {
            addCriterion("billmonth not in", values, "billmonth");
            return (Criteria) this;
        }

        public Criteria andBillmonthBetween(String value1, String value2) {
            addCriterion("billmonth between", value1, value2, "billmonth");
            return (Criteria) this;
        }

        public Criteria andBillmonthNotBetween(String value1, String value2) {
            addCriterion("billmonth not between", value1, value2, "billmonth");
            return (Criteria) this;
        }

        public Criteria andLifecodeIsNull() {
            addCriterion("lifecode is null");
            return (Criteria) this;
        }

        public Criteria andLifecodeIsNotNull() {
            addCriterion("lifecode is not null");
            return (Criteria) this;
        }

        public Criteria andLifecodeEqualTo(Integer value) {
            if (value != null) {
                addCriterion("lifecode =", value, "lifecode");
            }
            return (Criteria) this;
        }

        public Criteria andLifecodeNotEqualTo(Integer value) {
            if (value != null) {
                addCriterion("lifecode <>", value, "lifecode");
            }
            return (Criteria) this;
        }

        public Criteria andLifecodeGreaterThan(Integer value) {
            if (value != null) {
                addCriterion("lifecode >", value, "lifecode");
            }
            return (Criteria) this;
        }

        public Criteria andLifecodeGreaterThanOrEqualTo(Integer value) {
            if (value != null) {
                addCriterion("lifecode >=", value, "lifecode");
            }
            return (Criteria) this;
        }

        public Criteria andLifecodeLessThan(Integer value) {
            if (value != null) {
                addCriterion("lifecode <", value, "lifecode");
            }
            return (Criteria) this;
        }

        public Criteria andLifecodeLessThanOrEqualTo(Integer value) {
            if (value != null) {
                addCriterion("lifecode <=", value, "lifecode");
            }
            return (Criteria) this;
        }

        public Criteria andLifecodeIn(List<Integer> values) {
            addCriterion("lifecode in", values, "lifecode");
            return (Criteria) this;
        }

        public Criteria andLifecodeNotIn(List<Integer> values) {
            addCriterion("lifecode not in", values, "lifecode");
            return (Criteria) this;
        }

        public Criteria andLifecodeBetween(Integer value1, Integer value2) {
            addCriterion("lifecode between", value1, value2, "lifecode");
            return (Criteria) this;
        }

        public Criteria andLifecodeNotBetween(Integer value1, Integer value2) {
            addCriterion("lifecode not between", value1, value2, "lifecode");
            return (Criteria) this;
        }

        public Criteria andMeteridIsNull() {
            addCriterion("meterid is null");
            return (Criteria) this;
        }

        public Criteria andMeteridIsNotNull() {
            addCriterion("meterid is not null");
            return (Criteria) this;
        }

        public Criteria andMeteridEqualTo(String value) {
            if (value != null) {
                addCriterion("meterid =", value, "meterid");
            }
            return (Criteria) this;
        }

        public Criteria andMeteridNotEqualTo(String value) {
            if (value != null) {
                addCriterion("meterid <>", value, "meterid");
            }
            return (Criteria) this;
        }

        public Criteria andMeteridGreaterThan(String value) {
            if (value != null) {
                addCriterion("meterid >", value, "meterid");
            }
            return (Criteria) this;
        }

        public Criteria andMeteridGreaterThanOrEqualTo(String value) {
            if (value != null) {
                addCriterion("meterid >=", value, "meterid");
            }
            return (Criteria) this;
        }

        public Criteria andMeteridLessThan(String value) {
            if (value != null) {
                addCriterion("meterid <", value, "meterid");
            }
            return (Criteria) this;
        }

        public Criteria andMeteridLessThanOrEqualTo(String value) {
            if (value != null) {
                addCriterion("meterid <=", value, "meterid");
            }
            return (Criteria) this;
        }

        public Criteria andMeteridLike(String value) {
            if (value != null) {
                addCriterion("meterid like", "%"+value+"%", "meterid");
            }
            return (Criteria) this;
        }

        public Criteria andMeteridNotLike(String value) {
            if (value != null) {
                addCriterion("meterid not like", value, "meterid");
            }
            return (Criteria) this;
        }

        public Criteria andMeteridIn(List<String> values) {
            addCriterion("meterid in", values, "meterid");
            return (Criteria) this;
        }

        public Criteria andMeteridNotIn(List<String> values) {
            addCriterion("meterid not in", values, "meterid");
            return (Criteria) this;
        }

        public Criteria andMeteridBetween(String value1, String value2) {
            addCriterion("meterid between", value1, value2, "meterid");
            return (Criteria) this;
        }

        public Criteria andMeteridNotBetween(String value1, String value2) {
            addCriterion("meterid not between", value1, value2, "meterid");
            return (Criteria) this;
        }

        public Criteria andPriceidIsNull() {
            addCriterion("priceid is null");
            return (Criteria) this;
        }

        public Criteria andPriceidIsNotNull() {
            addCriterion("priceid is not null");
            return (Criteria) this;
        }

        public Criteria andPriceidEqualTo(Integer value) {
            if (value != null) {
                addCriterion("priceid =", value, "priceid");
            }
            return (Criteria) this;
        }

        public Criteria andPriceidNotEqualTo(Integer value) {
            if (value != null) {
                addCriterion("priceid <>", value, "priceid");
            }
            return (Criteria) this;
        }

        public Criteria andPriceidGreaterThan(Integer value) {
            if (value != null) {
                addCriterion("priceid >", value, "priceid");
            }
            return (Criteria) this;
        }

        public Criteria andPriceidGreaterThanOrEqualTo(Integer value) {
            if (value != null) {
                addCriterion("priceid >=", value, "priceid");
            }
            return (Criteria) this;
        }

        public Criteria andPriceidLessThan(Integer value) {
            if (value != null) {
                addCriterion("priceid <", value, "priceid");
            }
            return (Criteria) this;
        }

        public Criteria andPriceidLessThanOrEqualTo(Integer value) {
            if (value != null) {
                addCriterion("priceid <=", value, "priceid");
            }
            return (Criteria) this;
        }

        public Criteria andPriceidIn(List<Integer> values) {
            addCriterion("priceid in", values, "priceid");
            return (Criteria) this;
        }

        public Criteria andPriceidNotIn(List<Integer> values) {
            addCriterion("priceid not in", values, "priceid");
            return (Criteria) this;
        }

        public Criteria andPriceidBetween(Integer value1, Integer value2) {
            addCriterion("priceid between", value1, value2, "priceid");
            return (Criteria) this;
        }

        public Criteria andPriceidNotBetween(Integer value1, Integer value2) {
            addCriterion("priceid not between", value1, value2, "priceid");
            return (Criteria) this;
        }

        public Criteria andBillidIsNull() {
            addCriterion("billid is null");
            return (Criteria) this;
        }

        public Criteria andBillidIsNotNull() {
            addCriterion("billid is not null");
            return (Criteria) this;
        }

        public Criteria andBillidEqualTo(Integer value) {
            if (value != null) {
                addCriterion("billid =", value, "billid");
            }
            return (Criteria) this;
        }

        public Criteria andBillidNotEqualTo(Integer value) {
            if (value != null) {
                addCriterion("billid <>", value, "billid");
            }
            return (Criteria) this;
        }

        public Criteria andBillidGreaterThan(Integer value) {
            if (value != null) {
                addCriterion("billid >", value, "billid");
            }
            return (Criteria) this;
        }

        public Criteria andBillidGreaterThanOrEqualTo(Integer value) {
            if (value != null) {
                addCriterion("billid >=", value, "billid");
            }
            return (Criteria) this;
        }

        public Criteria andBillidLessThan(Integer value) {
            if (value != null) {
                addCriterion("billid <", value, "billid");
            }
            return (Criteria) this;
        }

        public Criteria andBillidLessThanOrEqualTo(Integer value) {
            if (value != null) {
                addCriterion("billid <=", value, "billid");
            }
            return (Criteria) this;
        }

        public Criteria andBillidIn(List<Integer> values) {
            addCriterion("billid in", values, "billid");
            return (Criteria) this;
        }

        public Criteria andBillidNotIn(List<Integer> values) {
            addCriterion("billid not in", values, "billid");
            return (Criteria) this;
        }

        public Criteria andBillidBetween(Integer value1, Integer value2) {
            addCriterion("billid between", value1, value2, "billid");
            return (Criteria) this;
        }

        public Criteria andBillidNotBetween(Integer value1, Integer value2) {
            addCriterion("billid not between", value1, value2, "billid");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table lm_billheatmap
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {
        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table lm_billheatmap
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}