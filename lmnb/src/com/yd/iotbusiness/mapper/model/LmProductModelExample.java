package com.yd.iotbusiness.mapper.model;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

public class LmProductModelExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table lm_product
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table lm_product
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table lm_product
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    protected Integer rows;

    protected Integer page;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lm_product
     *
     * @mbg.generated
     */
    public LmProductModelExample() {
        oredCriteria = new ArrayList<>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lm_product
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lm_product
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lm_product
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lm_product
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lm_product
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lm_product
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lm_product
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lm_product
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lm_product
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lm_product
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    public void setRows(Integer rows) {
        this.rows = rows;
    }

    public Integer getRows() {
        return rows;
    }

    public void setPage(Integer page) {
        this.page = page;
    }

    public Integer getPage() {
        return page;
    }

    public LmProductModelExample(Object pageInation) {
        oredCriteria = new ArrayList<>();
        LmProductModel model = (LmProductModel)pageInation;
        this.setPage(model.getPage());
        this.setRows(model.getRows());
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table lm_product
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                return ;
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                return ;
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                return ;
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            if (value != null) {
                addCriterion("id =", value, "id");
            }
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            if (value != null) {
                addCriterion("id <>", value, "id");
            }
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            if (value != null) {
                addCriterion("id >", value, "id");
            }
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            if (value != null) {
                addCriterion("id >=", value, "id");
            }
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            if (value != null) {
                addCriterion("id <", value, "id");
            }
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            if (value != null) {
                addCriterion("id <=", value, "id");
            }
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andNameIsNull() {
            addCriterion("`name` is null");
            return (Criteria) this;
        }

        public Criteria andNameIsNotNull() {
            addCriterion("`name` is not null");
            return (Criteria) this;
        }

        public Criteria andNameEqualTo(String value) {
            if (value != null) {
                addCriterion("`name` =", value, "name");
            }
            return (Criteria) this;
        }

        public Criteria andNameNotEqualTo(String value) {
            if (value != null) {
                addCriterion("`name` <>", value, "name");
            }
            return (Criteria) this;
        }

        public Criteria andNameGreaterThan(String value) {
            if (value != null) {
                addCriterion("`name` >", value, "name");
            }
            return (Criteria) this;
        }

        public Criteria andNameGreaterThanOrEqualTo(String value) {
            if (value != null) {
                addCriterion("`name` >=", value, "name");
            }
            return (Criteria) this;
        }

        public Criteria andNameLessThan(String value) {
            if (value != null) {
                addCriterion("`name` <", value, "name");
            }
            return (Criteria) this;
        }

        public Criteria andNameLessThanOrEqualTo(String value) {
            if (value != null) {
                addCriterion("`name` <=", value, "name");
            }
            return (Criteria) this;
        }

        public Criteria andNameLike(String value) {
            if (value != null) {
                addCriterion("`name` like", "%"+value+"%", "name");
            }
            return (Criteria) this;
        }

        public Criteria andNameNotLike(String value) {
            if (value != null) {
                addCriterion("`name` not like", value, "name");
            }
            return (Criteria) this;
        }

        public Criteria andNameIn(List<String> values) {
            addCriterion("`name` in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotIn(List<String> values) {
            addCriterion("`name` not in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameBetween(String value1, String value2) {
            addCriterion("`name` between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotBetween(String value1, String value2) {
            addCriterion("`name` not between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andFactorycodeIsNull() {
            addCriterion("factorycode is null");
            return (Criteria) this;
        }

        public Criteria andFactorycodeIsNotNull() {
            addCriterion("factorycode is not null");
            return (Criteria) this;
        }

        public Criteria andFactorycodeEqualTo(String value) {
            if (value != null) {
                addCriterion("factorycode =", value, "factorycode");
            }
            return (Criteria) this;
        }

        public Criteria andFactorycodeNotEqualTo(String value) {
            if (value != null) {
                addCriterion("factorycode <>", value, "factorycode");
            }
            return (Criteria) this;
        }

        public Criteria andFactorycodeGreaterThan(String value) {
            if (value != null) {
                addCriterion("factorycode >", value, "factorycode");
            }
            return (Criteria) this;
        }

        public Criteria andFactorycodeGreaterThanOrEqualTo(String value) {
            if (value != null) {
                addCriterion("factorycode >=", value, "factorycode");
            }
            return (Criteria) this;
        }

        public Criteria andFactorycodeLessThan(String value) {
            if (value != null) {
                addCriterion("factorycode <", value, "factorycode");
            }
            return (Criteria) this;
        }

        public Criteria andFactorycodeLessThanOrEqualTo(String value) {
            if (value != null) {
                addCriterion("factorycode <=", value, "factorycode");
            }
            return (Criteria) this;
        }

        public Criteria andFactorycodeLike(String value) {
            if (value != null) {
                addCriterion("factorycode like", "%"+value+"%", "factorycode");
            }
            return (Criteria) this;
        }

        public Criteria andFactorycodeNotLike(String value) {
            if (value != null) {
                addCriterion("factorycode not like", value, "factorycode");
            }
            return (Criteria) this;
        }

        public Criteria andFactorycodeIn(List<String> values) {
            addCriterion("factorycode in", values, "factorycode");
            return (Criteria) this;
        }

        public Criteria andFactorycodeNotIn(List<String> values) {
            addCriterion("factorycode not in", values, "factorycode");
            return (Criteria) this;
        }

        public Criteria andFactorycodeBetween(String value1, String value2) {
            addCriterion("factorycode between", value1, value2, "factorycode");
            return (Criteria) this;
        }

        public Criteria andFactorycodeNotBetween(String value1, String value2) {
            addCriterion("factorycode not between", value1, value2, "factorycode");
            return (Criteria) this;
        }

        public Criteria andDaymaxIsNull() {
            addCriterion("daymax is null");
            return (Criteria) this;
        }

        public Criteria andDaymaxIsNotNull() {
            addCriterion("daymax is not null");
            return (Criteria) this;
        }

        public Criteria andDaymaxEqualTo(BigDecimal value) {
            if (value != null) {
                addCriterion("daymax =", value, "daymax");
            }
            return (Criteria) this;
        }

        public Criteria andDaymaxNotEqualTo(BigDecimal value) {
            if (value != null) {
                addCriterion("daymax <>", value, "daymax");
            }
            return (Criteria) this;
        }

        public Criteria andDaymaxGreaterThan(BigDecimal value) {
            if (value != null) {
                addCriterion("daymax >", value, "daymax");
            }
            return (Criteria) this;
        }

        public Criteria andDaymaxGreaterThanOrEqualTo(BigDecimal value) {
            if (value != null) {
                addCriterion("daymax >=", value, "daymax");
            }
            return (Criteria) this;
        }

        public Criteria andDaymaxLessThan(BigDecimal value) {
            if (value != null) {
                addCriterion("daymax <", value, "daymax");
            }
            return (Criteria) this;
        }

        public Criteria andDaymaxLessThanOrEqualTo(BigDecimal value) {
            if (value != null) {
                addCriterion("daymax <=", value, "daymax");
            }
            return (Criteria) this;
        }

        public Criteria andDaymaxIn(List<BigDecimal> values) {
            addCriterion("daymax in", values, "daymax");
            return (Criteria) this;
        }

        public Criteria andDaymaxNotIn(List<BigDecimal> values) {
            addCriterion("daymax not in", values, "daymax");
            return (Criteria) this;
        }

        public Criteria andDaymaxBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("daymax between", value1, value2, "daymax");
            return (Criteria) this;
        }

        public Criteria andDaymaxNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("daymax not between", value1, value2, "daymax");
            return (Criteria) this;
        }

        public Criteria andFullvalueIsNull() {
            addCriterion("fullvalue is null");
            return (Criteria) this;
        }

        public Criteria andFullvalueIsNotNull() {
            addCriterion("fullvalue is not null");
            return (Criteria) this;
        }

        public Criteria andFullvalueEqualTo(BigDecimal value) {
            if (value != null) {
                addCriterion("fullvalue =", value, "fullvalue");
            }
            return (Criteria) this;
        }

        public Criteria andFullvalueNotEqualTo(BigDecimal value) {
            if (value != null) {
                addCriterion("fullvalue <>", value, "fullvalue");
            }
            return (Criteria) this;
        }

        public Criteria andFullvalueGreaterThan(BigDecimal value) {
            if (value != null) {
                addCriterion("fullvalue >", value, "fullvalue");
            }
            return (Criteria) this;
        }

        public Criteria andFullvalueGreaterThanOrEqualTo(BigDecimal value) {
            if (value != null) {
                addCriterion("fullvalue >=", value, "fullvalue");
            }
            return (Criteria) this;
        }

        public Criteria andFullvalueLessThan(BigDecimal value) {
            if (value != null) {
                addCriterion("fullvalue <", value, "fullvalue");
            }
            return (Criteria) this;
        }

        public Criteria andFullvalueLessThanOrEqualTo(BigDecimal value) {
            if (value != null) {
                addCriterion("fullvalue <=", value, "fullvalue");
            }
            return (Criteria) this;
        }

        public Criteria andFullvalueIn(List<BigDecimal> values) {
            addCriterion("fullvalue in", values, "fullvalue");
            return (Criteria) this;
        }

        public Criteria andFullvalueNotIn(List<BigDecimal> values) {
            addCriterion("fullvalue not in", values, "fullvalue");
            return (Criteria) this;
        }

        public Criteria andFullvalueBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("fullvalue between", value1, value2, "fullvalue");
            return (Criteria) this;
        }

        public Criteria andFullvalueNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("fullvalue not between", value1, value2, "fullvalue");
            return (Criteria) this;
        }

        public Criteria andUnitIsNull() {
            addCriterion("unit is null");
            return (Criteria) this;
        }

        public Criteria andUnitIsNotNull() {
            addCriterion("unit is not null");
            return (Criteria) this;
        }

        public Criteria andUnitEqualTo(String value) {
            if (value != null) {
                addCriterion("unit =", value, "unit");
            }
            return (Criteria) this;
        }

        public Criteria andUnitNotEqualTo(String value) {
            if (value != null) {
                addCriterion("unit <>", value, "unit");
            }
            return (Criteria) this;
        }

        public Criteria andUnitGreaterThan(String value) {
            if (value != null) {
                addCriterion("unit >", value, "unit");
            }
            return (Criteria) this;
        }

        public Criteria andUnitGreaterThanOrEqualTo(String value) {
            if (value != null) {
                addCriterion("unit >=", value, "unit");
            }
            return (Criteria) this;
        }

        public Criteria andUnitLessThan(String value) {
            if (value != null) {
                addCriterion("unit <", value, "unit");
            }
            return (Criteria) this;
        }

        public Criteria andUnitLessThanOrEqualTo(String value) {
            if (value != null) {
                addCriterion("unit <=", value, "unit");
            }
            return (Criteria) this;
        }

        public Criteria andUnitLike(String value) {
            if (value != null) {
                addCriterion("unit like", "%"+value+"%", "unit");
            }
            return (Criteria) this;
        }

        public Criteria andUnitNotLike(String value) {
            if (value != null) {
                addCriterion("unit not like", value, "unit");
            }
            return (Criteria) this;
        }

        public Criteria andUnitIn(List<String> values) {
            addCriterion("unit in", values, "unit");
            return (Criteria) this;
        }

        public Criteria andUnitNotIn(List<String> values) {
            addCriterion("unit not in", values, "unit");
            return (Criteria) this;
        }

        public Criteria andUnitBetween(String value1, String value2) {
            addCriterion("unit between", value1, value2, "unit");
            return (Criteria) this;
        }

        public Criteria andUnitNotBetween(String value1, String value2) {
            addCriterion("unit not between", value1, value2, "unit");
            return (Criteria) this;
        }

        public Criteria andUsedIsNull() {
            addCriterion("used is null");
            return (Criteria) this;
        }

        public Criteria andUsedIsNotNull() {
            addCriterion("used is not null");
            return (Criteria) this;
        }

        public Criteria andUsedEqualTo(Byte value) {
            if (value != null) {
                addCriterion("used =", value, "used");
            }
            return (Criteria) this;
        }

        public Criteria andUsedNotEqualTo(Byte value) {
            if (value != null) {
                addCriterion("used <>", value, "used");
            }
            return (Criteria) this;
        }

        public Criteria andUsedGreaterThan(Byte value) {
            if (value != null) {
                addCriterion("used >", value, "used");
            }
            return (Criteria) this;
        }

        public Criteria andUsedGreaterThanOrEqualTo(Byte value) {
            if (value != null) {
                addCriterion("used >=", value, "used");
            }
            return (Criteria) this;
        }

        public Criteria andUsedLessThan(Byte value) {
            if (value != null) {
                addCriterion("used <", value, "used");
            }
            return (Criteria) this;
        }

        public Criteria andUsedLessThanOrEqualTo(Byte value) {
            if (value != null) {
                addCriterion("used <=", value, "used");
            }
            return (Criteria) this;
        }

        public Criteria andUsedIn(List<Byte> values) {
            addCriterion("used in", values, "used");
            return (Criteria) this;
        }

        public Criteria andUsedNotIn(List<Byte> values) {
            addCriterion("used not in", values, "used");
            return (Criteria) this;
        }

        public Criteria andUsedBetween(Byte value1, Byte value2) {
            addCriterion("used between", value1, value2, "used");
            return (Criteria) this;
        }

        public Criteria andUsedNotBetween(Byte value1, Byte value2) {
            addCriterion("used not between", value1, value2, "used");
            return (Criteria) this;
        }

        public Criteria andMetertypeIsNull() {
            addCriterion("metertype is null");
            return (Criteria) this;
        }

        public Criteria andMetertypeIsNotNull() {
            addCriterion("metertype is not null");
            return (Criteria) this;
        }

        public Criteria andMetertypeEqualTo(Byte value) {
            if (value != null) {
                addCriterion("metertype =", value, "metertype");
            }
            return (Criteria) this;
        }

        public Criteria andMetertypeNotEqualTo(Byte value) {
            if (value != null) {
                addCriterion("metertype <>", value, "metertype");
            }
            return (Criteria) this;
        }

        public Criteria andMetertypeGreaterThan(Byte value) {
            if (value != null) {
                addCriterion("metertype >", value, "metertype");
            }
            return (Criteria) this;
        }

        public Criteria andMetertypeGreaterThanOrEqualTo(Byte value) {
            if (value != null) {
                addCriterion("metertype >=", value, "metertype");
            }
            return (Criteria) this;
        }

        public Criteria andMetertypeLessThan(Byte value) {
            if (value != null) {
                addCriterion("metertype <", value, "metertype");
            }
            return (Criteria) this;
        }

        public Criteria andMetertypeLessThanOrEqualTo(Byte value) {
            if (value != null) {
                addCriterion("metertype <=", value, "metertype");
            }
            return (Criteria) this;
        }

        public Criteria andMetertypeIn(List<Byte> values) {
            addCriterion("metertype in", values, "metertype");
            return (Criteria) this;
        }

        public Criteria andMetertypeNotIn(List<Byte> values) {
            addCriterion("metertype not in", values, "metertype");
            return (Criteria) this;
        }

        public Criteria andMetertypeBetween(Byte value1, Byte value2) {
            addCriterion("metertype between", value1, value2, "metertype");
            return (Criteria) this;
        }

        public Criteria andMetertypeNotBetween(Byte value1, Byte value2) {
            addCriterion("metertype not between", value1, value2, "metertype");
            return (Criteria) this;
        }

        public Criteria andCommtypeIsNull() {
            addCriterion("commtype is null");
            return (Criteria) this;
        }

        public Criteria andCommtypeIsNotNull() {
            addCriterion("commtype is not null");
            return (Criteria) this;
        }

        public Criteria andCommtypeEqualTo(Byte value) {
            if (value != null) {
                addCriterion("commtype =", value, "commtype");
            }
            return (Criteria) this;
        }

        public Criteria andCommtypeNotEqualTo(Byte value) {
            if (value != null) {
                addCriterion("commtype <>", value, "commtype");
            }
            return (Criteria) this;
        }

        public Criteria andCommtypeGreaterThan(Byte value) {
            if (value != null) {
                addCriterion("commtype >", value, "commtype");
            }
            return (Criteria) this;
        }

        public Criteria andCommtypeGreaterThanOrEqualTo(Byte value) {
            if (value != null) {
                addCriterion("commtype >=", value, "commtype");
            }
            return (Criteria) this;
        }

        public Criteria andCommtypeLessThan(Byte value) {
            if (value != null) {
                addCriterion("commtype <", value, "commtype");
            }
            return (Criteria) this;
        }

        public Criteria andCommtypeLessThanOrEqualTo(Byte value) {
            if (value != null) {
                addCriterion("commtype <=", value, "commtype");
            }
            return (Criteria) this;
        }

        public Criteria andCommtypeIn(List<Byte> values) {
            addCriterion("commtype in", values, "commtype");
            return (Criteria) this;
        }

        public Criteria andCommtypeNotIn(List<Byte> values) {
            addCriterion("commtype not in", values, "commtype");
            return (Criteria) this;
        }

        public Criteria andCommtypeBetween(Byte value1, Byte value2) {
            addCriterion("commtype between", value1, value2, "commtype");
            return (Criteria) this;
        }

        public Criteria andCommtypeNotBetween(Byte value1, Byte value2) {
            addCriterion("commtype not between", value1, value2, "commtype");
            return (Criteria) this;
        }

        public Criteria andValveIsNull() {
            addCriterion("valve is null");
            return (Criteria) this;
        }

        public Criteria andValveIsNotNull() {
            addCriterion("valve is not null");
            return (Criteria) this;
        }

        public Criteria andValveEqualTo(Byte value) {
            if (value != null) {
                addCriterion("valve =", value, "valve");
            }
            return (Criteria) this;
        }

        public Criteria andValveNotEqualTo(Byte value) {
            if (value != null) {
                addCriterion("valve <>", value, "valve");
            }
            return (Criteria) this;
        }

        public Criteria andValveGreaterThan(Byte value) {
            if (value != null) {
                addCriterion("valve >", value, "valve");
            }
            return (Criteria) this;
        }

        public Criteria andValveGreaterThanOrEqualTo(Byte value) {
            if (value != null) {
                addCriterion("valve >=", value, "valve");
            }
            return (Criteria) this;
        }

        public Criteria andValveLessThan(Byte value) {
            if (value != null) {
                addCriterion("valve <", value, "valve");
            }
            return (Criteria) this;
        }

        public Criteria andValveLessThanOrEqualTo(Byte value) {
            if (value != null) {
                addCriterion("valve <=", value, "valve");
            }
            return (Criteria) this;
        }

        public Criteria andValveIn(List<Byte> values) {
            addCriterion("valve in", values, "valve");
            return (Criteria) this;
        }

        public Criteria andValveNotIn(List<Byte> values) {
            addCriterion("valve not in", values, "valve");
            return (Criteria) this;
        }

        public Criteria andValveBetween(Byte value1, Byte value2) {
            addCriterion("valve between", value1, value2, "valve");
            return (Criteria) this;
        }

        public Criteria andValveNotBetween(Byte value1, Byte value2) {
            addCriterion("valve not between", value1, value2, "valve");
            return (Criteria) this;
        }

        public Criteria andPhotoIsNull() {
            addCriterion("photo is null");
            return (Criteria) this;
        }

        public Criteria andPhotoIsNotNull() {
            addCriterion("photo is not null");
            return (Criteria) this;
        }

        public Criteria andPhotoEqualTo(String value) {
            if (value != null) {
                addCriterion("photo =", value, "photo");
            }
            return (Criteria) this;
        }

        public Criteria andPhotoNotEqualTo(String value) {
            if (value != null) {
                addCriterion("photo <>", value, "photo");
            }
            return (Criteria) this;
        }

        public Criteria andPhotoGreaterThan(String value) {
            if (value != null) {
                addCriterion("photo >", value, "photo");
            }
            return (Criteria) this;
        }

        public Criteria andPhotoGreaterThanOrEqualTo(String value) {
            if (value != null) {
                addCriterion("photo >=", value, "photo");
            }
            return (Criteria) this;
        }

        public Criteria andPhotoLessThan(String value) {
            if (value != null) {
                addCriterion("photo <", value, "photo");
            }
            return (Criteria) this;
        }

        public Criteria andPhotoLessThanOrEqualTo(String value) {
            if (value != null) {
                addCriterion("photo <=", value, "photo");
            }
            return (Criteria) this;
        }

        public Criteria andPhotoLike(String value) {
            if (value != null) {
                addCriterion("photo like", "%"+value+"%", "photo");
            }
            return (Criteria) this;
        }

        public Criteria andPhotoNotLike(String value) {
            if (value != null) {
                addCriterion("photo not like", value, "photo");
            }
            return (Criteria) this;
        }

        public Criteria andPhotoIn(List<String> values) {
            addCriterion("photo in", values, "photo");
            return (Criteria) this;
        }

        public Criteria andPhotoNotIn(List<String> values) {
            addCriterion("photo not in", values, "photo");
            return (Criteria) this;
        }

        public Criteria andPhotoBetween(String value1, String value2) {
            addCriterion("photo between", value1, value2, "photo");
            return (Criteria) this;
        }

        public Criteria andPhotoNotBetween(String value1, String value2) {
            addCriterion("photo not between", value1, value2, "photo");
            return (Criteria) this;
        }

        public Criteria andSystemidIsNull() {
            addCriterion("systemid is null");
            return (Criteria) this;
        }

        public Criteria andSystemidIsNotNull() {
            addCriterion("systemid is not null");
            return (Criteria) this;
        }

        public Criteria andSystemidEqualTo(Integer value) {
            if (value != null) {
                addCriterion("systemid =", value, "systemid");
            }
            return (Criteria) this;
        }

        public Criteria andSystemidNotEqualTo(Integer value) {
            if (value != null) {
                addCriterion("systemid <>", value, "systemid");
            }
            return (Criteria) this;
        }

        public Criteria andSystemidGreaterThan(Integer value) {
            if (value != null) {
                addCriterion("systemid >", value, "systemid");
            }
            return (Criteria) this;
        }

        public Criteria andSystemidGreaterThanOrEqualTo(Integer value) {
            if (value != null) {
                addCriterion("systemid >=", value, "systemid");
            }
            return (Criteria) this;
        }

        public Criteria andSystemidLessThan(Integer value) {
            if (value != null) {
                addCriterion("systemid <", value, "systemid");
            }
            return (Criteria) this;
        }

        public Criteria andSystemidLessThanOrEqualTo(Integer value) {
            if (value != null) {
                addCriterion("systemid <=", value, "systemid");
            }
            return (Criteria) this;
        }

        public Criteria andSystemidIn(List<Integer> values) {
            addCriterion("systemid in", values, "systemid");
            return (Criteria) this;
        }

        public Criteria andSystemidNotIn(List<Integer> values) {
            addCriterion("systemid not in", values, "systemid");
            return (Criteria) this;
        }

        public Criteria andSystemidBetween(Integer value1, Integer value2) {
            addCriterion("systemid between", value1, value2, "systemid");
            return (Criteria) this;
        }

        public Criteria andSystemidNotBetween(Integer value1, Integer value2) {
            addCriterion("systemid not between", value1, value2, "systemid");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table lm_product
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {
        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table lm_product
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}