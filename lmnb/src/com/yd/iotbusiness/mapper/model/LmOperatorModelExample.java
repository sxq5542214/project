package com.yd.iotbusiness.mapper.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class LmOperatorModelExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table lm_operator
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table lm_operator
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table lm_operator
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    protected Integer rows;

    protected Integer page;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lm_operator
     *
     * @mbg.generated
     */
    public LmOperatorModelExample() {
        oredCriteria = new ArrayList<>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lm_operator
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lm_operator
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lm_operator
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lm_operator
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lm_operator
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lm_operator
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lm_operator
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lm_operator
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lm_operator
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lm_operator
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    public void setRows(Integer rows) {
        this.rows = rows;
    }

    public Integer getRows() {
        return rows;
    }

    public void setPage(Integer page) {
        this.page = page;
    }

    public Integer getPage() {
        return page;
    }

    public LmOperatorModelExample(Object pageInation) {
        oredCriteria = new ArrayList<>();
        LmOperatorModel model = (LmOperatorModel)pageInation;
        this.setPage(model.getPage());
        this.setRows(model.getRows());
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table lm_operator
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                return ;
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                return ;
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                return ;
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            if (value != null) {
                addCriterion("id =", value, "id");
            }
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            if (value != null) {
                addCriterion("id <>", value, "id");
            }
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            if (value != null) {
                addCriterion("id >", value, "id");
            }
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            if (value != null) {
                addCriterion("id >=", value, "id");
            }
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            if (value != null) {
                addCriterion("id <", value, "id");
            }
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            if (value != null) {
                addCriterion("id <=", value, "id");
            }
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andSystemidIsNull() {
            addCriterion("systemid is null");
            return (Criteria) this;
        }

        public Criteria andSystemidIsNotNull() {
            addCriterion("systemid is not null");
            return (Criteria) this;
        }

        public Criteria andSystemidEqualTo(Integer value) {
            if (value != null) {
                addCriterion("systemid =", value, "systemid");
            }
            return (Criteria) this;
        }

        public Criteria andSystemidNotEqualTo(Integer value) {
            if (value != null) {
                addCriterion("systemid <>", value, "systemid");
            }
            return (Criteria) this;
        }

        public Criteria andSystemidGreaterThan(Integer value) {
            if (value != null) {
                addCriterion("systemid >", value, "systemid");
            }
            return (Criteria) this;
        }

        public Criteria andSystemidGreaterThanOrEqualTo(Integer value) {
            if (value != null) {
                addCriterion("systemid >=", value, "systemid");
            }
            return (Criteria) this;
        }

        public Criteria andSystemidLessThan(Integer value) {
            if (value != null) {
                addCriterion("systemid <", value, "systemid");
            }
            return (Criteria) this;
        }

        public Criteria andSystemidLessThanOrEqualTo(Integer value) {
            if (value != null) {
                addCriterion("systemid <=", value, "systemid");
            }
            return (Criteria) this;
        }

        public Criteria andSystemidIn(List<Integer> values) {
            addCriterion("systemid in", values, "systemid");
            return (Criteria) this;
        }

        public Criteria andSystemidNotIn(List<Integer> values) {
            addCriterion("systemid not in", values, "systemid");
            return (Criteria) this;
        }

        public Criteria andSystemidBetween(Integer value1, Integer value2) {
            addCriterion("systemid between", value1, value2, "systemid");
            return (Criteria) this;
        }

        public Criteria andSystemidNotBetween(Integer value1, Integer value2) {
            addCriterion("systemid not between", value1, value2, "systemid");
            return (Criteria) this;
        }

        public Criteria andRoleidIsNull() {
            addCriterion("roleid is null");
            return (Criteria) this;
        }

        public Criteria andRoleidIsNotNull() {
            addCriterion("roleid is not null");
            return (Criteria) this;
        }

        public Criteria andRoleidEqualTo(Integer value) {
            if (value != null) {
                addCriterion("roleid =", value, "roleid");
            }
            return (Criteria) this;
        }

        public Criteria andRoleidNotEqualTo(Integer value) {
            if (value != null) {
                addCriterion("roleid <>", value, "roleid");
            }
            return (Criteria) this;
        }

        public Criteria andRoleidGreaterThan(Integer value) {
            if (value != null) {
                addCriterion("roleid >", value, "roleid");
            }
            return (Criteria) this;
        }

        public Criteria andRoleidGreaterThanOrEqualTo(Integer value) {
            if (value != null) {
                addCriterion("roleid >=", value, "roleid");
            }
            return (Criteria) this;
        }

        public Criteria andRoleidLessThan(Integer value) {
            if (value != null) {
                addCriterion("roleid <", value, "roleid");
            }
            return (Criteria) this;
        }

        public Criteria andRoleidLessThanOrEqualTo(Integer value) {
            if (value != null) {
                addCriterion("roleid <=", value, "roleid");
            }
            return (Criteria) this;
        }

        public Criteria andRoleidIn(List<Integer> values) {
            addCriterion("roleid in", values, "roleid");
            return (Criteria) this;
        }

        public Criteria andRoleidNotIn(List<Integer> values) {
            addCriterion("roleid not in", values, "roleid");
            return (Criteria) this;
        }

        public Criteria andRoleidBetween(Integer value1, Integer value2) {
            addCriterion("roleid between", value1, value2, "roleid");
            return (Criteria) this;
        }

        public Criteria andRoleidNotBetween(Integer value1, Integer value2) {
            addCriterion("roleid not between", value1, value2, "roleid");
            return (Criteria) this;
        }

        public Criteria andRealnameIsNull() {
            addCriterion("realname is null");
            return (Criteria) this;
        }

        public Criteria andRealnameIsNotNull() {
            addCriterion("realname is not null");
            return (Criteria) this;
        }

        public Criteria andRealnameEqualTo(String value) {
            if (value != null) {
                addCriterion("realname =", value, "realname");
            }
            return (Criteria) this;
        }

        public Criteria andRealnameNotEqualTo(String value) {
            if (value != null) {
                addCriterion("realname <>", value, "realname");
            }
            return (Criteria) this;
        }

        public Criteria andRealnameGreaterThan(String value) {
            if (value != null) {
                addCriterion("realname >", value, "realname");
            }
            return (Criteria) this;
        }

        public Criteria andRealnameGreaterThanOrEqualTo(String value) {
            if (value != null) {
                addCriterion("realname >=", value, "realname");
            }
            return (Criteria) this;
        }

        public Criteria andRealnameLessThan(String value) {
            if (value != null) {
                addCriterion("realname <", value, "realname");
            }
            return (Criteria) this;
        }

        public Criteria andRealnameLessThanOrEqualTo(String value) {
            if (value != null) {
                addCriterion("realname <=", value, "realname");
            }
            return (Criteria) this;
        }

        public Criteria andRealnameLike(String value) {
            if (value != null) {
                addCriterion("realname like", "%"+value+"%", "realname");
            }
            return (Criteria) this;
        }

        public Criteria andRealnameNotLike(String value) {
            if (value != null) {
                addCriterion("realname not like", value, "realname");
            }
            return (Criteria) this;
        }

        public Criteria andRealnameIn(List<String> values) {
            addCriterion("realname in", values, "realname");
            return (Criteria) this;
        }

        public Criteria andRealnameNotIn(List<String> values) {
            addCriterion("realname not in", values, "realname");
            return (Criteria) this;
        }

        public Criteria andRealnameBetween(String value1, String value2) {
            addCriterion("realname between", value1, value2, "realname");
            return (Criteria) this;
        }

        public Criteria andRealnameNotBetween(String value1, String value2) {
            addCriterion("realname not between", value1, value2, "realname");
            return (Criteria) this;
        }

        public Criteria andLoginnameIsNull() {
            addCriterion("loginname is null");
            return (Criteria) this;
        }

        public Criteria andLoginnameIsNotNull() {
            addCriterion("loginname is not null");
            return (Criteria) this;
        }

        public Criteria andLoginnameEqualTo(String value) {
            if (value != null) {
                addCriterion("loginname =", value, "loginname");
            }
            return (Criteria) this;
        }

        public Criteria andLoginnameNotEqualTo(String value) {
            if (value != null) {
                addCriterion("loginname <>", value, "loginname");
            }
            return (Criteria) this;
        }

        public Criteria andLoginnameGreaterThan(String value) {
            if (value != null) {
                addCriterion("loginname >", value, "loginname");
            }
            return (Criteria) this;
        }

        public Criteria andLoginnameGreaterThanOrEqualTo(String value) {
            if (value != null) {
                addCriterion("loginname >=", value, "loginname");
            }
            return (Criteria) this;
        }

        public Criteria andLoginnameLessThan(String value) {
            if (value != null) {
                addCriterion("loginname <", value, "loginname");
            }
            return (Criteria) this;
        }

        public Criteria andLoginnameLessThanOrEqualTo(String value) {
            if (value != null) {
                addCriterion("loginname <=", value, "loginname");
            }
            return (Criteria) this;
        }

        public Criteria andLoginnameLike(String value) {
            if (value != null) {
                addCriterion("loginname like", "%"+value+"%", "loginname");
            }
            return (Criteria) this;
        }

        public Criteria andLoginnameNotLike(String value) {
            if (value != null) {
                addCriterion("loginname not like", value, "loginname");
            }
            return (Criteria) this;
        }

        public Criteria andLoginnameIn(List<String> values) {
            addCriterion("loginname in", values, "loginname");
            return (Criteria) this;
        }

        public Criteria andLoginnameNotIn(List<String> values) {
            addCriterion("loginname not in", values, "loginname");
            return (Criteria) this;
        }

        public Criteria andLoginnameBetween(String value1, String value2) {
            addCriterion("loginname between", value1, value2, "loginname");
            return (Criteria) this;
        }

        public Criteria andLoginnameNotBetween(String value1, String value2) {
            addCriterion("loginname not between", value1, value2, "loginname");
            return (Criteria) this;
        }

        public Criteria andPassIsNull() {
            addCriterion("pass is null");
            return (Criteria) this;
        }

        public Criteria andPassIsNotNull() {
            addCriterion("pass is not null");
            return (Criteria) this;
        }

        public Criteria andPassEqualTo(String value) {
            if (value != null) {
                addCriterion("pass =", value, "pass");
            }
            return (Criteria) this;
        }

        public Criteria andPassNotEqualTo(String value) {
            if (value != null) {
                addCriterion("pass <>", value, "pass");
            }
            return (Criteria) this;
        }

        public Criteria andPassGreaterThan(String value) {
            if (value != null) {
                addCriterion("pass >", value, "pass");
            }
            return (Criteria) this;
        }

        public Criteria andPassGreaterThanOrEqualTo(String value) {
            if (value != null) {
                addCriterion("pass >=", value, "pass");
            }
            return (Criteria) this;
        }

        public Criteria andPassLessThan(String value) {
            if (value != null) {
                addCriterion("pass <", value, "pass");
            }
            return (Criteria) this;
        }

        public Criteria andPassLessThanOrEqualTo(String value) {
            if (value != null) {
                addCriterion("pass <=", value, "pass");
            }
            return (Criteria) this;
        }

        public Criteria andPassLike(String value) {
            if (value != null) {
                addCriterion("pass like", "%"+value+"%", "pass");
            }
            return (Criteria) this;
        }

        public Criteria andPassNotLike(String value) {
            if (value != null) {
                addCriterion("pass not like", value, "pass");
            }
            return (Criteria) this;
        }

        public Criteria andPassIn(List<String> values) {
            addCriterion("pass in", values, "pass");
            return (Criteria) this;
        }

        public Criteria andPassNotIn(List<String> values) {
            addCriterion("pass not in", values, "pass");
            return (Criteria) this;
        }

        public Criteria andPassBetween(String value1, String value2) {
            addCriterion("pass between", value1, value2, "pass");
            return (Criteria) this;
        }

        public Criteria andPassNotBetween(String value1, String value2) {
            addCriterion("pass not between", value1, value2, "pass");
            return (Criteria) this;
        }

        public Criteria andCreatetimeIsNull() {
            addCriterion("createtime is null");
            return (Criteria) this;
        }

        public Criteria andCreatetimeIsNotNull() {
            addCriterion("createtime is not null");
            return (Criteria) this;
        }

        public Criteria andCreatetimeEqualTo(Date value) {
            if (value != null) {
                addCriterion("createtime =", value, "createtime");
            }
            return (Criteria) this;
        }

        public Criteria andCreatetimeNotEqualTo(Date value) {
            if (value != null) {
                addCriterion("createtime <>", value, "createtime");
            }
            return (Criteria) this;
        }

        public Criteria andCreatetimeGreaterThan(Date value) {
            if (value != null) {
                addCriterion("createtime >", value, "createtime");
            }
            return (Criteria) this;
        }

        public Criteria andCreatetimeGreaterThanOrEqualTo(Date value) {
            if (value != null) {
                addCriterion("createtime >=", value, "createtime");
            }
            return (Criteria) this;
        }

        public Criteria andCreatetimeLessThan(Date value) {
            if (value != null) {
                addCriterion("createtime <", value, "createtime");
            }
            return (Criteria) this;
        }

        public Criteria andCreatetimeLessThanOrEqualTo(Date value) {
            if (value != null) {
                addCriterion("createtime <=", value, "createtime");
            }
            return (Criteria) this;
        }

        public Criteria andCreatetimeIn(List<Date> values) {
            addCriterion("createtime in", values, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeNotIn(List<Date> values) {
            addCriterion("createtime not in", values, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeBetween(Date value1, Date value2) {
            addCriterion("createtime between", value1, value2, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeNotBetween(Date value1, Date value2) {
            addCriterion("createtime not between", value1, value2, "createtime");
            return (Criteria) this;
        }

        public Criteria andLastlogintimeIsNull() {
            addCriterion("lastlogintime is null");
            return (Criteria) this;
        }

        public Criteria andLastlogintimeIsNotNull() {
            addCriterion("lastlogintime is not null");
            return (Criteria) this;
        }

        public Criteria andLastlogintimeEqualTo(Date value) {
            if (value != null) {
                addCriterion("lastlogintime =", value, "lastlogintime");
            }
            return (Criteria) this;
        }

        public Criteria andLastlogintimeNotEqualTo(Date value) {
            if (value != null) {
                addCriterion("lastlogintime <>", value, "lastlogintime");
            }
            return (Criteria) this;
        }

        public Criteria andLastlogintimeGreaterThan(Date value) {
            if (value != null) {
                addCriterion("lastlogintime >", value, "lastlogintime");
            }
            return (Criteria) this;
        }

        public Criteria andLastlogintimeGreaterThanOrEqualTo(Date value) {
            if (value != null) {
                addCriterion("lastlogintime >=", value, "lastlogintime");
            }
            return (Criteria) this;
        }

        public Criteria andLastlogintimeLessThan(Date value) {
            if (value != null) {
                addCriterion("lastlogintime <", value, "lastlogintime");
            }
            return (Criteria) this;
        }

        public Criteria andLastlogintimeLessThanOrEqualTo(Date value) {
            if (value != null) {
                addCriterion("lastlogintime <=", value, "lastlogintime");
            }
            return (Criteria) this;
        }

        public Criteria andLastlogintimeIn(List<Date> values) {
            addCriterion("lastlogintime in", values, "lastlogintime");
            return (Criteria) this;
        }

        public Criteria andLastlogintimeNotIn(List<Date> values) {
            addCriterion("lastlogintime not in", values, "lastlogintime");
            return (Criteria) this;
        }

        public Criteria andLastlogintimeBetween(Date value1, Date value2) {
            addCriterion("lastlogintime between", value1, value2, "lastlogintime");
            return (Criteria) this;
        }

        public Criteria andLastlogintimeNotBetween(Date value1, Date value2) {
            addCriterion("lastlogintime not between", value1, value2, "lastlogintime");
            return (Criteria) this;
        }

        public Criteria andDeletedIsNull() {
            addCriterion("deleted is null");
            return (Criteria) this;
        }

        public Criteria andDeletedIsNotNull() {
            addCriterion("deleted is not null");
            return (Criteria) this;
        }

        public Criteria andDeletedEqualTo(Byte value) {
            if (value != null) {
                addCriterion("deleted =", value, "deleted");
            }
            return (Criteria) this;
        }

        public Criteria andDeletedNotEqualTo(Byte value) {
            if (value != null) {
                addCriterion("deleted <>", value, "deleted");
            }
            return (Criteria) this;
        }

        public Criteria andDeletedGreaterThan(Byte value) {
            if (value != null) {
                addCriterion("deleted >", value, "deleted");
            }
            return (Criteria) this;
        }

        public Criteria andDeletedGreaterThanOrEqualTo(Byte value) {
            if (value != null) {
                addCriterion("deleted >=", value, "deleted");
            }
            return (Criteria) this;
        }

        public Criteria andDeletedLessThan(Byte value) {
            if (value != null) {
                addCriterion("deleted <", value, "deleted");
            }
            return (Criteria) this;
        }

        public Criteria andDeletedLessThanOrEqualTo(Byte value) {
            if (value != null) {
                addCriterion("deleted <=", value, "deleted");
            }
            return (Criteria) this;
        }

        public Criteria andDeletedIn(List<Byte> values) {
            addCriterion("deleted in", values, "deleted");
            return (Criteria) this;
        }

        public Criteria andDeletedNotIn(List<Byte> values) {
            addCriterion("deleted not in", values, "deleted");
            return (Criteria) this;
        }

        public Criteria andDeletedBetween(Byte value1, Byte value2) {
            addCriterion("deleted between", value1, value2, "deleted");
            return (Criteria) this;
        }

        public Criteria andDeletedNotBetween(Byte value1, Byte value2) {
            addCriterion("deleted not between", value1, value2, "deleted");
            return (Criteria) this;
        }

        public Criteria andPasstermsIsNull() {
            addCriterion("passterms is null");
            return (Criteria) this;
        }

        public Criteria andPasstermsIsNotNull() {
            addCriterion("passterms is not null");
            return (Criteria) this;
        }

        public Criteria andPasstermsEqualTo(Integer value) {
            if (value != null) {
                addCriterion("passterms =", value, "passterms");
            }
            return (Criteria) this;
        }

        public Criteria andPasstermsNotEqualTo(Integer value) {
            if (value != null) {
                addCriterion("passterms <>", value, "passterms");
            }
            return (Criteria) this;
        }

        public Criteria andPasstermsGreaterThan(Integer value) {
            if (value != null) {
                addCriterion("passterms >", value, "passterms");
            }
            return (Criteria) this;
        }

        public Criteria andPasstermsGreaterThanOrEqualTo(Integer value) {
            if (value != null) {
                addCriterion("passterms >=", value, "passterms");
            }
            return (Criteria) this;
        }

        public Criteria andPasstermsLessThan(Integer value) {
            if (value != null) {
                addCriterion("passterms <", value, "passterms");
            }
            return (Criteria) this;
        }

        public Criteria andPasstermsLessThanOrEqualTo(Integer value) {
            if (value != null) {
                addCriterion("passterms <=", value, "passterms");
            }
            return (Criteria) this;
        }

        public Criteria andPasstermsIn(List<Integer> values) {
            addCriterion("passterms in", values, "passterms");
            return (Criteria) this;
        }

        public Criteria andPasstermsNotIn(List<Integer> values) {
            addCriterion("passterms not in", values, "passterms");
            return (Criteria) this;
        }

        public Criteria andPasstermsBetween(Integer value1, Integer value2) {
            addCriterion("passterms between", value1, value2, "passterms");
            return (Criteria) this;
        }

        public Criteria andPasstermsNotBetween(Integer value1, Integer value2) {
            addCriterion("passterms not between", value1, value2, "passterms");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table lm_operator
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {
        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table lm_operator
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}