<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yd.iotbusiness.mapper.dao.LmFeeModelMapper">
  <resultMap id="BaseResultMap" type="com.yd.iotbusiness.mapper.model.LmFeeModel">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="curnum" jdbcType="DECIMAL" property="curnum" />
    <result column="curquantity" jdbcType="DECIMAL" property="curquantity" />
    <result column="billmonth" jdbcType="INTEGER" property="billmonth" />
    <result column="amount" jdbcType="DECIMAL" property="amount" />
    <result column="afterbalance" jdbcType="DECIMAL" property="afterbalance" />
    <result column="createtime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="cycleflag" jdbcType="TINYINT" property="cycleflag" />
    <result column="state" jdbcType="TINYINT" property="state" />
    <result column="lifecode" jdbcType="INTEGER" property="lifecode" />
    <result column="systemid" jdbcType="INTEGER" property="systemid" />
    <result column="priceid" jdbcType="INTEGER" property="priceid" />
    <result column="recordid" jdbcType="INTEGER" property="recordid" />
    <result column="meterid" jdbcType="INTEGER" property="meterid" />
    <result column="settleid" jdbcType="INTEGER" property="settleid" />
    <result column="joinflag" jdbcType="TINYINT" property="joinflag" />
    <result column="billid" jdbcType="INTEGER" property="billid" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, curnum, curquantity, billmonth, amount, afterbalance, createtime, cycleflag, 
    `state`, lifecode, systemid, priceid, recordid, meterid, settleid, joinflag, billid
  </sql>
  <select id="selectByExample" parameterType="com.yd.iotbusiness.mapper.model.LmFeeModelExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from lm_fee
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="rows != null">
      <if test="page != null">
        limit ${(page-1) * rows}, ${rows}
      </if>
      <if test="page == null">
        limit ${rows}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from lm_fee
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from lm_fee
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.yd.iotbusiness.mapper.model.LmFeeModelExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from lm_fee
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yd.iotbusiness.mapper.model.LmFeeModel">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into lm_fee (curnum, curquantity, billmonth, 
      amount, afterbalance, createtime, 
      cycleflag, `state`, lifecode, 
      systemid, priceid, recordid, 
      meterid, settleid, joinflag, 
      billid)
    values (#{curnum,jdbcType=DECIMAL}, #{curquantity,jdbcType=DECIMAL}, #{billmonth,jdbcType=INTEGER}, 
      #{amount,jdbcType=DECIMAL}, #{afterbalance,jdbcType=DECIMAL}, #{createtime,jdbcType=TIMESTAMP}, 
      #{cycleflag,jdbcType=TINYINT}, #{state,jdbcType=TINYINT}, #{lifecode,jdbcType=INTEGER}, 
      #{systemid,jdbcType=INTEGER}, #{priceid,jdbcType=INTEGER}, #{recordid,jdbcType=INTEGER}, 
      #{meterid,jdbcType=INTEGER}, #{settleid,jdbcType=INTEGER}, #{joinflag,jdbcType=TINYINT}, 
      #{billid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.yd.iotbusiness.mapper.model.LmFeeModel">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into lm_fee
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="curnum != null">
        curnum,
      </if>
      <if test="curquantity != null">
        curquantity,
      </if>
      <if test="billmonth != null">
        billmonth,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="afterbalance != null">
        afterbalance,
      </if>
      <if test="createtime != null">
        createtime,
      </if>
      <if test="cycleflag != null">
        cycleflag,
      </if>
      <if test="state != null">
        `state`,
      </if>
      <if test="lifecode != null">
        lifecode,
      </if>
      <if test="systemid != null">
        systemid,
      </if>
      <if test="priceid != null">
        priceid,
      </if>
      <if test="recordid != null">
        recordid,
      </if>
      <if test="meterid != null">
        meterid,
      </if>
      <if test="settleid != null">
        settleid,
      </if>
      <if test="joinflag != null">
        joinflag,
      </if>
      <if test="billid != null">
        billid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="curnum != null">
        #{curnum,jdbcType=DECIMAL},
      </if>
      <if test="curquantity != null">
        #{curquantity,jdbcType=DECIMAL},
      </if>
      <if test="billmonth != null">
        #{billmonth,jdbcType=INTEGER},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="afterbalance != null">
        #{afterbalance,jdbcType=DECIMAL},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="cycleflag != null">
        #{cycleflag,jdbcType=TINYINT},
      </if>
      <if test="state != null">
        #{state,jdbcType=TINYINT},
      </if>
      <if test="lifecode != null">
        #{lifecode,jdbcType=INTEGER},
      </if>
      <if test="systemid != null">
        #{systemid,jdbcType=INTEGER},
      </if>
      <if test="priceid != null">
        #{priceid,jdbcType=INTEGER},
      </if>
      <if test="recordid != null">
        #{recordid,jdbcType=INTEGER},
      </if>
      <if test="meterid != null">
        #{meterid,jdbcType=INTEGER},
      </if>
      <if test="settleid != null">
        #{settleid,jdbcType=INTEGER},
      </if>
      <if test="joinflag != null">
        #{joinflag,jdbcType=TINYINT},
      </if>
      <if test="billid != null">
        #{billid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yd.iotbusiness.mapper.model.LmFeeModelExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from lm_fee
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update lm_fee
    <set>
      <if test="row.id != null">
        id = #{row.id,jdbcType=INTEGER},
      </if>
      <if test="row.curnum != null">
        curnum = #{row.curnum,jdbcType=DECIMAL},
      </if>
      <if test="row.curquantity != null">
        curquantity = #{row.curquantity,jdbcType=DECIMAL},
      </if>
      <if test="row.billmonth != null">
        billmonth = #{row.billmonth,jdbcType=INTEGER},
      </if>
      <if test="row.amount != null">
        amount = #{row.amount,jdbcType=DECIMAL},
      </if>
      <if test="row.afterbalance != null">
        afterbalance = #{row.afterbalance,jdbcType=DECIMAL},
      </if>
      <if test="row.createtime != null">
        createtime = #{row.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="row.cycleflag != null">
        cycleflag = #{row.cycleflag,jdbcType=TINYINT},
      </if>
      <if test="row.state != null">
        `state` = #{row.state,jdbcType=TINYINT},
      </if>
      <if test="row.lifecode != null">
        lifecode = #{row.lifecode,jdbcType=INTEGER},
      </if>
      <if test="row.systemid != null">
        systemid = #{row.systemid,jdbcType=INTEGER},
      </if>
      <if test="row.priceid != null">
        priceid = #{row.priceid,jdbcType=INTEGER},
      </if>
      <if test="row.recordid != null">
        recordid = #{row.recordid,jdbcType=INTEGER},
      </if>
      <if test="row.meterid != null">
        meterid = #{row.meterid,jdbcType=INTEGER},
      </if>
      <if test="row.settleid != null">
        settleid = #{row.settleid,jdbcType=INTEGER},
      </if>
      <if test="row.joinflag != null">
        joinflag = #{row.joinflag,jdbcType=TINYINT},
      </if>
      <if test="row.billid != null">
        billid = #{row.billid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update lm_fee
    set id = #{row.id,jdbcType=INTEGER},
      curnum = #{row.curnum,jdbcType=DECIMAL},
      curquantity = #{row.curquantity,jdbcType=DECIMAL},
      billmonth = #{row.billmonth,jdbcType=INTEGER},
      amount = #{row.amount,jdbcType=DECIMAL},
      afterbalance = #{row.afterbalance,jdbcType=DECIMAL},
      createtime = #{row.createtime,jdbcType=TIMESTAMP},
      cycleflag = #{row.cycleflag,jdbcType=TINYINT},
      `state` = #{row.state,jdbcType=TINYINT},
      lifecode = #{row.lifecode,jdbcType=INTEGER},
      systemid = #{row.systemid,jdbcType=INTEGER},
      priceid = #{row.priceid,jdbcType=INTEGER},
      recordid = #{row.recordid,jdbcType=INTEGER},
      meterid = #{row.meterid,jdbcType=INTEGER},
      settleid = #{row.settleid,jdbcType=INTEGER},
      joinflag = #{row.joinflag,jdbcType=TINYINT},
      billid = #{row.billid,jdbcType=INTEGER}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yd.iotbusiness.mapper.model.LmFeeModel">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update lm_fee
    <set>
      <if test="curnum != null">
        curnum = #{curnum,jdbcType=DECIMAL},
      </if>
      <if test="curquantity != null">
        curquantity = #{curquantity,jdbcType=DECIMAL},
      </if>
      <if test="billmonth != null">
        billmonth = #{billmonth,jdbcType=INTEGER},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="afterbalance != null">
        afterbalance = #{afterbalance,jdbcType=DECIMAL},
      </if>
      <if test="createtime != null">
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="cycleflag != null">
        cycleflag = #{cycleflag,jdbcType=TINYINT},
      </if>
      <if test="state != null">
        `state` = #{state,jdbcType=TINYINT},
      </if>
      <if test="lifecode != null">
        lifecode = #{lifecode,jdbcType=INTEGER},
      </if>
      <if test="systemid != null">
        systemid = #{systemid,jdbcType=INTEGER},
      </if>
      <if test="priceid != null">
        priceid = #{priceid,jdbcType=INTEGER},
      </if>
      <if test="recordid != null">
        recordid = #{recordid,jdbcType=INTEGER},
      </if>
      <if test="meterid != null">
        meterid = #{meterid,jdbcType=INTEGER},
      </if>
      <if test="settleid != null">
        settleid = #{settleid,jdbcType=INTEGER},
      </if>
      <if test="joinflag != null">
        joinflag = #{joinflag,jdbcType=TINYINT},
      </if>
      <if test="billid != null">
        billid = #{billid,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yd.iotbusiness.mapper.model.LmFeeModel">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update lm_fee
    set curnum = #{curnum,jdbcType=DECIMAL},
      curquantity = #{curquantity,jdbcType=DECIMAL},
      billmonth = #{billmonth,jdbcType=INTEGER},
      amount = #{amount,jdbcType=DECIMAL},
      afterbalance = #{afterbalance,jdbcType=DECIMAL},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      cycleflag = #{cycleflag,jdbcType=TINYINT},
      `state` = #{state,jdbcType=TINYINT},
      lifecode = #{lifecode,jdbcType=INTEGER},
      systemid = #{systemid,jdbcType=INTEGER},
      priceid = #{priceid,jdbcType=INTEGER},
      recordid = #{recordid,jdbcType=INTEGER},
      meterid = #{meterid,jdbcType=INTEGER},
      settleid = #{settleid,jdbcType=INTEGER},
      joinflag = #{joinflag,jdbcType=TINYINT},
      billid = #{billid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>