<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yd.iotbusiness.mapper.dao.LmBillModelMapper">
  <resultMap id="BaseResultMap" type="com.yd.iotbusiness.mapper.model.LmBillModel">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="billmonth" jdbcType="INTEGER" property="billmonth" />
    <result column="cyclestartbalance" jdbcType="DECIMAL" property="cyclestartbalance" />
    <result column="cycleendbalance" jdbcType="DECIMAL" property="cycleendbalance" />
    <result column="cyclebuyamount" jdbcType="DECIMAL" property="cyclebuyamount" />
    <result column="quantity" jdbcType="DECIMAL" property="quantity" />
    <result column="minconsumequantity" jdbcType="DECIMAL" property="minconsumequantity" />
    <result column="shouldwateramount" jdbcType="DECIMAL" property="shouldwateramount" />
    <result column="minconsumamount" jdbcType="DECIMAL" property="minconsumamount" />
    <result column="additionalmount" jdbcType="DECIMAL" property="additionalmount" />
    <result column="realbillamount" jdbcType="DECIMAL" property="realbillamount" />
    <result column="waitpayrealbillamount" jdbcType="DECIMAL" property="waitpayrealbillamount" />
    <result column="waitpayrealwateramount" jdbcType="DECIMAL" property="waitpayrealwateramount" />
    <result column="payamount" jdbcType="DECIMAL" property="payamount" />
    <result column="surchargeamount" jdbcType="DECIMAL" property="surchargeamount" />
    <result column="waitsurchargeamount" jdbcType="DECIMAL" property="waitsurchargeamount" />
    <result column="afterbalance" jdbcType="DECIMAL" property="afterbalance" />
    <result column="createtime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="recentsurchargetime" jdbcType="TIMESTAMP" property="recentsurchargetime" />
    <result column="state" jdbcType="TINYINT" property="state" />
    <result column="settletype" jdbcType="TINYINT" property="settletype" />
    <result column="factorycode" jdbcType="VARCHAR" property="factorycode" />
    <result column="lifecode" jdbcType="INTEGER" property="lifecode" />
    <result column="meterid" jdbcType="INTEGER" property="meterid" />
    <result column="userid" jdbcType="INTEGER" property="userid" />
    <result column="systemid" jdbcType="INTEGER" property="systemid" />
    <result column="settleid" jdbcType="INTEGER" property="settleid" />
    <result column="priceid" jdbcType="INTEGER" property="priceid" />
    <result column="billtype" jdbcType="TINYINT" property="billtype" />
    <result column="operName" jdbcType="VARCHAR" property="opername" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, billmonth, cyclestartbalance, cycleendbalance, cyclebuyamount, quantity, minconsumequantity, 
    shouldwateramount, minconsumamount, additionalmount, realbillamount, waitpayrealbillamount, 
    waitpayrealwateramount, payamount, surchargeamount, waitsurchargeamount, afterbalance, 
    createtime, recentsurchargetime, `state`, settletype, factorycode, lifecode, meterid, 
    userid, systemid, settleid, priceid, billtype, operName
  </sql>
  <select id="selectByExample" parameterType="com.yd.iotbusiness.mapper.model.LmBillModelExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from lm_bill
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="rows != null">
      <if test="page != null">
        limit ${(page-1) * rows}, ${rows}
      </if>
      <if test="page == null">
        limit ${rows}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from lm_bill
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from lm_bill
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.yd.iotbusiness.mapper.model.LmBillModelExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from lm_bill
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yd.iotbusiness.mapper.model.LmBillModel">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into lm_bill (billmonth, cyclestartbalance, cycleendbalance, 
      cyclebuyamount, quantity, minconsumequantity, 
      shouldwateramount, minconsumamount, additionalmount, 
      realbillamount, waitpayrealbillamount, 
      waitpayrealwateramount, payamount, surchargeamount, 
      waitsurchargeamount, afterbalance, createtime, 
      recentsurchargetime, `state`, settletype, 
      factorycode, lifecode, meterid, 
      userid, systemid, settleid, 
      priceid, billtype, operName
      )
    values (#{billmonth,jdbcType=INTEGER}, #{cyclestartbalance,jdbcType=DECIMAL}, #{cycleendbalance,jdbcType=DECIMAL}, 
      #{cyclebuyamount,jdbcType=DECIMAL}, #{quantity,jdbcType=DECIMAL}, #{minconsumequantity,jdbcType=DECIMAL}, 
      #{shouldwateramount,jdbcType=DECIMAL}, #{minconsumamount,jdbcType=DECIMAL}, #{additionalmount,jdbcType=DECIMAL}, 
      #{realbillamount,jdbcType=DECIMAL}, #{waitpayrealbillamount,jdbcType=DECIMAL}, 
      #{waitpayrealwateramount,jdbcType=DECIMAL}, #{payamount,jdbcType=DECIMAL}, #{surchargeamount,jdbcType=DECIMAL}, 
      #{waitsurchargeamount,jdbcType=DECIMAL}, #{afterbalance,jdbcType=DECIMAL}, #{createtime,jdbcType=TIMESTAMP}, 
      #{recentsurchargetime,jdbcType=TIMESTAMP}, #{state,jdbcType=TINYINT}, #{settletype,jdbcType=TINYINT}, 
      #{factorycode,jdbcType=VARCHAR}, #{lifecode,jdbcType=INTEGER}, #{meterid,jdbcType=INTEGER}, 
      #{userid,jdbcType=INTEGER}, #{systemid,jdbcType=INTEGER}, #{settleid,jdbcType=INTEGER}, 
      #{priceid,jdbcType=INTEGER}, #{billtype,jdbcType=TINYINT}, #{opername,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.yd.iotbusiness.mapper.model.LmBillModel">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into lm_bill
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="billmonth != null">
        billmonth,
      </if>
      <if test="cyclestartbalance != null">
        cyclestartbalance,
      </if>
      <if test="cycleendbalance != null">
        cycleendbalance,
      </if>
      <if test="cyclebuyamount != null">
        cyclebuyamount,
      </if>
      <if test="quantity != null">
        quantity,
      </if>
      <if test="minconsumequantity != null">
        minconsumequantity,
      </if>
      <if test="shouldwateramount != null">
        shouldwateramount,
      </if>
      <if test="minconsumamount != null">
        minconsumamount,
      </if>
      <if test="additionalmount != null">
        additionalmount,
      </if>
      <if test="realbillamount != null">
        realbillamount,
      </if>
      <if test="waitpayrealbillamount != null">
        waitpayrealbillamount,
      </if>
      <if test="waitpayrealwateramount != null">
        waitpayrealwateramount,
      </if>
      <if test="payamount != null">
        payamount,
      </if>
      <if test="surchargeamount != null">
        surchargeamount,
      </if>
      <if test="waitsurchargeamount != null">
        waitsurchargeamount,
      </if>
      <if test="afterbalance != null">
        afterbalance,
      </if>
      <if test="createtime != null">
        createtime,
      </if>
      <if test="recentsurchargetime != null">
        recentsurchargetime,
      </if>
      <if test="state != null">
        `state`,
      </if>
      <if test="settletype != null">
        settletype,
      </if>
      <if test="factorycode != null">
        factorycode,
      </if>
      <if test="lifecode != null">
        lifecode,
      </if>
      <if test="meterid != null">
        meterid,
      </if>
      <if test="userid != null">
        userid,
      </if>
      <if test="systemid != null">
        systemid,
      </if>
      <if test="settleid != null">
        settleid,
      </if>
      <if test="priceid != null">
        priceid,
      </if>
      <if test="billtype != null">
        billtype,
      </if>
      <if test="opername != null">
        operName,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="billmonth != null">
        #{billmonth,jdbcType=INTEGER},
      </if>
      <if test="cyclestartbalance != null">
        #{cyclestartbalance,jdbcType=DECIMAL},
      </if>
      <if test="cycleendbalance != null">
        #{cycleendbalance,jdbcType=DECIMAL},
      </if>
      <if test="cyclebuyamount != null">
        #{cyclebuyamount,jdbcType=DECIMAL},
      </if>
      <if test="quantity != null">
        #{quantity,jdbcType=DECIMAL},
      </if>
      <if test="minconsumequantity != null">
        #{minconsumequantity,jdbcType=DECIMAL},
      </if>
      <if test="shouldwateramount != null">
        #{shouldwateramount,jdbcType=DECIMAL},
      </if>
      <if test="minconsumamount != null">
        #{minconsumamount,jdbcType=DECIMAL},
      </if>
      <if test="additionalmount != null">
        #{additionalmount,jdbcType=DECIMAL},
      </if>
      <if test="realbillamount != null">
        #{realbillamount,jdbcType=DECIMAL},
      </if>
      <if test="waitpayrealbillamount != null">
        #{waitpayrealbillamount,jdbcType=DECIMAL},
      </if>
      <if test="waitpayrealwateramount != null">
        #{waitpayrealwateramount,jdbcType=DECIMAL},
      </if>
      <if test="payamount != null">
        #{payamount,jdbcType=DECIMAL},
      </if>
      <if test="surchargeamount != null">
        #{surchargeamount,jdbcType=DECIMAL},
      </if>
      <if test="waitsurchargeamount != null">
        #{waitsurchargeamount,jdbcType=DECIMAL},
      </if>
      <if test="afterbalance != null">
        #{afterbalance,jdbcType=DECIMAL},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="recentsurchargetime != null">
        #{recentsurchargetime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null">
        #{state,jdbcType=TINYINT},
      </if>
      <if test="settletype != null">
        #{settletype,jdbcType=TINYINT},
      </if>
      <if test="factorycode != null">
        #{factorycode,jdbcType=VARCHAR},
      </if>
      <if test="lifecode != null">
        #{lifecode,jdbcType=INTEGER},
      </if>
      <if test="meterid != null">
        #{meterid,jdbcType=INTEGER},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="systemid != null">
        #{systemid,jdbcType=INTEGER},
      </if>
      <if test="settleid != null">
        #{settleid,jdbcType=INTEGER},
      </if>
      <if test="priceid != null">
        #{priceid,jdbcType=INTEGER},
      </if>
      <if test="billtype != null">
        #{billtype,jdbcType=TINYINT},
      </if>
      <if test="opername != null">
        #{opername,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yd.iotbusiness.mapper.model.LmBillModelExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from lm_bill
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update lm_bill
    <set>
      <if test="row.id != null">
        id = #{row.id,jdbcType=INTEGER},
      </if>
      <if test="row.billmonth != null">
        billmonth = #{row.billmonth,jdbcType=INTEGER},
      </if>
      <if test="row.cyclestartbalance != null">
        cyclestartbalance = #{row.cyclestartbalance,jdbcType=DECIMAL},
      </if>
      <if test="row.cycleendbalance != null">
        cycleendbalance = #{row.cycleendbalance,jdbcType=DECIMAL},
      </if>
      <if test="row.cyclebuyamount != null">
        cyclebuyamount = #{row.cyclebuyamount,jdbcType=DECIMAL},
      </if>
      <if test="row.quantity != null">
        quantity = #{row.quantity,jdbcType=DECIMAL},
      </if>
      <if test="row.minconsumequantity != null">
        minconsumequantity = #{row.minconsumequantity,jdbcType=DECIMAL},
      </if>
      <if test="row.shouldwateramount != null">
        shouldwateramount = #{row.shouldwateramount,jdbcType=DECIMAL},
      </if>
      <if test="row.minconsumamount != null">
        minconsumamount = #{row.minconsumamount,jdbcType=DECIMAL},
      </if>
      <if test="row.additionalmount != null">
        additionalmount = #{row.additionalmount,jdbcType=DECIMAL},
      </if>
      <if test="row.realbillamount != null">
        realbillamount = #{row.realbillamount,jdbcType=DECIMAL},
      </if>
      <if test="row.waitpayrealbillamount != null">
        waitpayrealbillamount = #{row.waitpayrealbillamount,jdbcType=DECIMAL},
      </if>
      <if test="row.waitpayrealwateramount != null">
        waitpayrealwateramount = #{row.waitpayrealwateramount,jdbcType=DECIMAL},
      </if>
      <if test="row.payamount != null">
        payamount = #{row.payamount,jdbcType=DECIMAL},
      </if>
      <if test="row.surchargeamount != null">
        surchargeamount = #{row.surchargeamount,jdbcType=DECIMAL},
      </if>
      <if test="row.waitsurchargeamount != null">
        waitsurchargeamount = #{row.waitsurchargeamount,jdbcType=DECIMAL},
      </if>
      <if test="row.afterbalance != null">
        afterbalance = #{row.afterbalance,jdbcType=DECIMAL},
      </if>
      <if test="row.createtime != null">
        createtime = #{row.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="row.recentsurchargetime != null">
        recentsurchargetime = #{row.recentsurchargetime,jdbcType=TIMESTAMP},
      </if>
      <if test="row.state != null">
        `state` = #{row.state,jdbcType=TINYINT},
      </if>
      <if test="row.settletype != null">
        settletype = #{row.settletype,jdbcType=TINYINT},
      </if>
      <if test="row.factorycode != null">
        factorycode = #{row.factorycode,jdbcType=VARCHAR},
      </if>
      <if test="row.lifecode != null">
        lifecode = #{row.lifecode,jdbcType=INTEGER},
      </if>
      <if test="row.meterid != null">
        meterid = #{row.meterid,jdbcType=INTEGER},
      </if>
      <if test="row.userid != null">
        userid = #{row.userid,jdbcType=INTEGER},
      </if>
      <if test="row.systemid != null">
        systemid = #{row.systemid,jdbcType=INTEGER},
      </if>
      <if test="row.settleid != null">
        settleid = #{row.settleid,jdbcType=INTEGER},
      </if>
      <if test="row.priceid != null">
        priceid = #{row.priceid,jdbcType=INTEGER},
      </if>
      <if test="row.billtype != null">
        billtype = #{row.billtype,jdbcType=TINYINT},
      </if>
      <if test="row.opername != null">
        operName = #{row.opername,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update lm_bill
    set id = #{row.id,jdbcType=INTEGER},
      billmonth = #{row.billmonth,jdbcType=INTEGER},
      cyclestartbalance = #{row.cyclestartbalance,jdbcType=DECIMAL},
      cycleendbalance = #{row.cycleendbalance,jdbcType=DECIMAL},
      cyclebuyamount = #{row.cyclebuyamount,jdbcType=DECIMAL},
      quantity = #{row.quantity,jdbcType=DECIMAL},
      minconsumequantity = #{row.minconsumequantity,jdbcType=DECIMAL},
      shouldwateramount = #{row.shouldwateramount,jdbcType=DECIMAL},
      minconsumamount = #{row.minconsumamount,jdbcType=DECIMAL},
      additionalmount = #{row.additionalmount,jdbcType=DECIMAL},
      realbillamount = #{row.realbillamount,jdbcType=DECIMAL},
      waitpayrealbillamount = #{row.waitpayrealbillamount,jdbcType=DECIMAL},
      waitpayrealwateramount = #{row.waitpayrealwateramount,jdbcType=DECIMAL},
      payamount = #{row.payamount,jdbcType=DECIMAL},
      surchargeamount = #{row.surchargeamount,jdbcType=DECIMAL},
      waitsurchargeamount = #{row.waitsurchargeamount,jdbcType=DECIMAL},
      afterbalance = #{row.afterbalance,jdbcType=DECIMAL},
      createtime = #{row.createtime,jdbcType=TIMESTAMP},
      recentsurchargetime = #{row.recentsurchargetime,jdbcType=TIMESTAMP},
      `state` = #{row.state,jdbcType=TINYINT},
      settletype = #{row.settletype,jdbcType=TINYINT},
      factorycode = #{row.factorycode,jdbcType=VARCHAR},
      lifecode = #{row.lifecode,jdbcType=INTEGER},
      meterid = #{row.meterid,jdbcType=INTEGER},
      userid = #{row.userid,jdbcType=INTEGER},
      systemid = #{row.systemid,jdbcType=INTEGER},
      settleid = #{row.settleid,jdbcType=INTEGER},
      priceid = #{row.priceid,jdbcType=INTEGER},
      billtype = #{row.billtype,jdbcType=TINYINT},
      operName = #{row.opername,jdbcType=VARCHAR}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yd.iotbusiness.mapper.model.LmBillModel">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update lm_bill
    <set>
      <if test="billmonth != null">
        billmonth = #{billmonth,jdbcType=INTEGER},
      </if>
      <if test="cyclestartbalance != null">
        cyclestartbalance = #{cyclestartbalance,jdbcType=DECIMAL},
      </if>
      <if test="cycleendbalance != null">
        cycleendbalance = #{cycleendbalance,jdbcType=DECIMAL},
      </if>
      <if test="cyclebuyamount != null">
        cyclebuyamount = #{cyclebuyamount,jdbcType=DECIMAL},
      </if>
      <if test="quantity != null">
        quantity = #{quantity,jdbcType=DECIMAL},
      </if>
      <if test="minconsumequantity != null">
        minconsumequantity = #{minconsumequantity,jdbcType=DECIMAL},
      </if>
      <if test="shouldwateramount != null">
        shouldwateramount = #{shouldwateramount,jdbcType=DECIMAL},
      </if>
      <if test="minconsumamount != null">
        minconsumamount = #{minconsumamount,jdbcType=DECIMAL},
      </if>
      <if test="additionalmount != null">
        additionalmount = #{additionalmount,jdbcType=DECIMAL},
      </if>
      <if test="realbillamount != null">
        realbillamount = #{realbillamount,jdbcType=DECIMAL},
      </if>
      <if test="waitpayrealbillamount != null">
        waitpayrealbillamount = #{waitpayrealbillamount,jdbcType=DECIMAL},
      </if>
      <if test="waitpayrealwateramount != null">
        waitpayrealwateramount = #{waitpayrealwateramount,jdbcType=DECIMAL},
      </if>
      <if test="payamount != null">
        payamount = #{payamount,jdbcType=DECIMAL},
      </if>
      <if test="surchargeamount != null">
        surchargeamount = #{surchargeamount,jdbcType=DECIMAL},
      </if>
      <if test="waitsurchargeamount != null">
        waitsurchargeamount = #{waitsurchargeamount,jdbcType=DECIMAL},
      </if>
      <if test="afterbalance != null">
        afterbalance = #{afterbalance,jdbcType=DECIMAL},
      </if>
      <if test="createtime != null">
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="recentsurchargetime != null">
        recentsurchargetime = #{recentsurchargetime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null">
        `state` = #{state,jdbcType=TINYINT},
      </if>
      <if test="settletype != null">
        settletype = #{settletype,jdbcType=TINYINT},
      </if>
      <if test="factorycode != null">
        factorycode = #{factorycode,jdbcType=VARCHAR},
      </if>
      <if test="lifecode != null">
        lifecode = #{lifecode,jdbcType=INTEGER},
      </if>
      <if test="meterid != null">
        meterid = #{meterid,jdbcType=INTEGER},
      </if>
      <if test="userid != null">
        userid = #{userid,jdbcType=INTEGER},
      </if>
      <if test="systemid != null">
        systemid = #{systemid,jdbcType=INTEGER},
      </if>
      <if test="settleid != null">
        settleid = #{settleid,jdbcType=INTEGER},
      </if>
      <if test="priceid != null">
        priceid = #{priceid,jdbcType=INTEGER},
      </if>
      <if test="billtype != null">
        billtype = #{billtype,jdbcType=TINYINT},
      </if>
      <if test="opername != null">
        operName = #{opername,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yd.iotbusiness.mapper.model.LmBillModel">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update lm_bill
    set billmonth = #{billmonth,jdbcType=INTEGER},
      cyclestartbalance = #{cyclestartbalance,jdbcType=DECIMAL},
      cycleendbalance = #{cycleendbalance,jdbcType=DECIMAL},
      cyclebuyamount = #{cyclebuyamount,jdbcType=DECIMAL},
      quantity = #{quantity,jdbcType=DECIMAL},
      minconsumequantity = #{minconsumequantity,jdbcType=DECIMAL},
      shouldwateramount = #{shouldwateramount,jdbcType=DECIMAL},
      minconsumamount = #{minconsumamount,jdbcType=DECIMAL},
      additionalmount = #{additionalmount,jdbcType=DECIMAL},
      realbillamount = #{realbillamount,jdbcType=DECIMAL},
      waitpayrealbillamount = #{waitpayrealbillamount,jdbcType=DECIMAL},
      waitpayrealwateramount = #{waitpayrealwateramount,jdbcType=DECIMAL},
      payamount = #{payamount,jdbcType=DECIMAL},
      surchargeamount = #{surchargeamount,jdbcType=DECIMAL},
      waitsurchargeamount = #{waitsurchargeamount,jdbcType=DECIMAL},
      afterbalance = #{afterbalance,jdbcType=DECIMAL},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      recentsurchargetime = #{recentsurchargetime,jdbcType=TIMESTAMP},
      `state` = #{state,jdbcType=TINYINT},
      settletype = #{settletype,jdbcType=TINYINT},
      factorycode = #{factorycode,jdbcType=VARCHAR},
      lifecode = #{lifecode,jdbcType=INTEGER},
      meterid = #{meterid,jdbcType=INTEGER},
      userid = #{userid,jdbcType=INTEGER},
      systemid = #{systemid,jdbcType=INTEGER},
      settleid = #{settleid,jdbcType=INTEGER},
      priceid = #{priceid,jdbcType=INTEGER},
      billtype = #{billtype,jdbcType=TINYINT},
      operName = #{opername,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>