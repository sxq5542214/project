{"remainingRequest":"G:\\学习\\前端\\vue3\\admin_chn\\vue-element-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!G:\\学习\\前端\\vue3\\admin_chn\\vue-element-admin\\src\\views\\excel\\export-excel.vue?vue&type=style&index=0&id=f976c760&lang=css&","dependencies":[{"path":"G:\\学习\\前端\\vue3\\admin_chn\\vue-element-admin\\src\\views\\excel\\export-excel.vue","mtime":1686317623652},{"path":"G:\\学习\\前端\\vue3\\admin_chn\\vue-element-admin\\node_modules\\css-loader\\dist\\cjs.js","mtime":1686317877598},{"path":"G:\\学习\\前端\\vue3\\admin_chn\\vue-element-admin\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1686317878208},{"path":"G:\\学习\\前端\\vue3\\admin_chn\\vue-element-admin\\node_modules\\postcss-loader\\src\\index.js","mtime":1686317876955},{"path":"G:\\学习\\前端\\vue3\\admin_chn\\vue-element-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1686317881344},{"path":"G:\\学习\\前端\\vue3\\admin_chn\\vue-element-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":1686317877158}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCi5yYWRpby1sYWJlbCB7DQogIGZvbnQtc2l6ZTogMTRweDsNCiAgY29sb3I6ICM2MDYyNjY7DQogIGxpbmUtaGVpZ2h0OiA0MHB4Ow0KICBwYWRkaW5nOiAwIDEycHggMCAzMHB4Ow0KfQ0K"},{"version":3,"sources":["export-excel.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4GA;AACA;AACA;AACA;AACA;AACA","file":"export-excel.vue","sourceRoot":"src/views/excel","sourcesContent":["<template>\r\n  <!-- $t is vue-i18n global function to translate lang -->\r\n  <div class=\"app-container\">\r\n    <div>\r\n      <FilenameOption v-model=\"filename\" />\r\n      <AutoWidthOption v-model=\"autoWidth\" />\r\n      <BookTypeOption v-model=\"bookType\" />\r\n      <el-button :loading=\"downloadLoading\" style=\"margin:0 0 20px 20px;\" type=\"primary\" icon=\"el-icon-document\" @click=\"handleDownload\">\r\n        {{ $t('excel.export') }} Excel\r\n      </el-button>\r\n      <a href=\"https://panjiachen.github.io/vue-element-admin-site/feature/component/excel.html\" target=\"_blank\" style=\"margin-left:15px;\">\r\n        <el-tag type=\"info\">Documentation</el-tag>\r\n      </a>\r\n    </div>\r\n\r\n    <el-table v-loading=\"listLoading\" :data=\"list\" element-loading-text=\"Loading...\" border fit highlight-current-row>\r\n      <el-table-column align=\"center\" label=\"Id\" width=\"95\">\r\n        <template slot-scope=\"scope\">\r\n          {{ scope.$index }}\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column label=\"Title\">\r\n        <template slot-scope=\"scope\">\r\n          {{ scope.row.title }}\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column label=\"Author\" width=\"110\" align=\"center\">\r\n        <template slot-scope=\"scope\">\r\n          <el-tag>{{ scope.row.author }}</el-tag>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column label=\"Readings\" width=\"115\" align=\"center\">\r\n        <template slot-scope=\"scope\">\r\n          {{ scope.row.pageviews }}\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column align=\"center\" label=\"Date\" width=\"220\">\r\n        <template slot-scope=\"scope\">\r\n          <i class=\"el-icon-time\" />\r\n          <span>{{ scope.row.timestamp | parseTime('{y}-{m}-{d} {h}:{i}') }}</span>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { fetchList } from '@/api/article'\r\nimport { parseTime } from '@/utils'\r\n// options components\r\nimport FilenameOption from './components/FilenameOption'\r\nimport AutoWidthOption from './components/AutoWidthOption'\r\nimport BookTypeOption from './components/BookTypeOption'\r\nexport default {\r\n  name: 'ExportExcel',\r\n  components: { FilenameOption, AutoWidthOption, BookTypeOption },\r\n  data() {\r\n    return {\r\n      list: null,\r\n      listLoading: true,\r\n      downloadLoading: false,\r\n      filename: '',\r\n      autoWidth: true,\r\n      bookType: 'xlsx'\r\n    }\r\n  },\r\n  created() {\r\n    this.fetchData()\r\n  },\r\n  methods: {\r\n    fetchData() {\r\n      this.listLoading = true\r\n      fetchList().then(response => {\r\n        this.list = response.data.items\r\n        this.listLoading = false\r\n      })\r\n    },\r\n    handleDownload() {\r\n      this.downloadLoading = true\r\n      import('@/vendor/Export2Excel').then(excel => {\r\n        const tHeader = ['Id', 'Title', 'Author', 'Readings', 'Date']\r\n        const filterVal = ['id', 'title', 'author', 'pageviews', 'display_time']\r\n        const list = this.list\r\n        const data = this.formatJson(filterVal, list)\r\n        excel.export_json_to_excel({\r\n          header: tHeader,\r\n          data,\r\n          filename: this.filename,\r\n          autoWidth: this.autoWidth,\r\n          bookType: this.bookType\r\n        })\r\n        this.downloadLoading = false\r\n      })\r\n    },\r\n    formatJson(filterVal, jsonData) {\r\n      return jsonData.map(v => filterVal.map(j => {\r\n        if (j === 'timestamp') {\r\n          return parseTime(v[j])\r\n        } else {\r\n          return v[j]\r\n        }\r\n      }))\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n.radio-label {\r\n  font-size: 14px;\r\n  color: #606266;\r\n  line-height: 40px;\r\n  padding: 0 12px 0 30px;\r\n}\r\n</style>\r\n"]}]}