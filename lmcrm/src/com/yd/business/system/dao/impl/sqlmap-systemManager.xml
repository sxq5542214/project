<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="systemManager">
	
	<select id="querySystemRoleMenuRelation" parameterType="systemRoleMenuRelation" resultType="systemRoleMenuRelation">
		select *,(select max(dic.description) from ll_dictionary dic where dic.value = rela.status and dic.tablename='SystemRoleMenuRelationBean') as status_value from ll_system_role_menu_relation rela 
		<where>
			<if test="id != null"> and id = #{id}</if>
			<if test="role_id != null"> and role_id = #{role_id}</if>
			<if test="role_name != null"> and role_name like concat('%', #{role_name},'%') </if>
			<if test="menu_id != null"> and menu_id = #{menu_id}</if>
			<if test="menu_name != null"> and menu_name like concat('%', #{menu_name},'%') </if>
			<if test="status != null"> and status = #{status}</if>
		</where>
		<if test="orderby != null"> ${orderby} </if>
	</select>
	
	<select id="findSystemRoleById" parameterType="int" resultType="systemRole">
		select * from ll_system_role where id = #{value}
	</select>
	
	<select id="findSystemMenuById" parameterType="int" resultType="systemMenu">
		select * from ll_system_menu where id = #{value}
	</select>
	
	<select id="findSystemRoleByIds" parameterType="list" resultType="systemRole">
		select * from ll_system_role where id in
		<foreach collection="list" index="" item="item" separator="," open="(" close=")">
			#{item} 
		</foreach>	
	</select>
	
	<select id="findSystemMenuByIds" parameterType="list" resultType="systemMenu">
		select * from ll_system_menu where id in
		<foreach collection="list" index="" item="item" separator="," open="(" close=")">
			#{item} 
		</foreach>	
	</select>
	
	<select id="querySystemRoleAdminRelation" parameterType="systemRoleAdminRelation" resultType="systemRoleAdminRelation">
		
		select * from ll_system_role_admin_relation
		<where>
			<if test="id != null "> and id = #{id} </if>
			<if test="role_id != null "> and role_id = #{role_id} </if>
			<if test="role_name != null "> and role_name like concat('%', #{role_name},'%') </if>
			<if test="customer_id != null "> and customer_id = #{customer_id} </if>
			<if test="customer_name != null "> and customer_name like concat('%', #{customer_name},'%') </if>
			<if test="admin_id != null "> and admin_id = #{admin_id} </if>
			<if test="admin_name != null "> and admin_name like concat('%', #{admin_name},'%') </if>
			<if test="status != null "> and status = #{status} </if>
		</where>
		<if test="orderby != null"> ${orderby}</if>
	</select>
	
	<insert id="createSystemRoleAdminRelation" parameterType="systemRoleAdminRelation">
		insert into ll_system_role_admin_relation (role_id,role_name,customer_id,customer_name,
		admin_id,admin_name,status ) 
		values (#{role_id},#{role_name},#{customer_id},#{customer_name},
		#{admin_id},#{admin_name},#{status})
	</insert>
	
	<delete id="deleteSystemRoleAdminRelation" parameterType="systemRoleAdminRelation">
		delete from ll_system_role_admin_relation 
		<where>
			<if test="id != null "> and id = #{id} </if>
			<if test="role_id != null "> and role_id = #{role_id} </if>
			<if test="customer_id != null "> and customer_id = #{customer_id} </if>
			<if test="admin_id != null "> and admin_id = #{admin_id} </if>
			<if test="status != null "> and status = #{status} </if>
		</where>
	</delete>
	
	<insert id="createSystemRoleMenuRelation" parameterType="systemRoleMenuRelation" useGeneratedKeys="true" keyProperty="id">
		insert into ll_system_role_menu_relation (role_id,role_name,menu_id,menu_name,status)
		values (#{role_id},#{role_name},#{menu_id},#{menu_name},#{status});
	</insert>
	
	<delete id="deleteSystemRoleMenuRelation" parameterType="systemRoleMenuRelation">
		delete from ll_system_role_menu_relation 
		<where>
			<if test="id != null"> and id = #{id}</if>
			<if test="role_id != null"> and role_id = #{role_id}</if>
			<if test="menu_id != null"> and menu_id = #{menu_id}</if>
			<if test="status != null"> and status = #{status}</if>
		</where>
	</delete>
	
	<select id="querySystemMenuByAdmin" parameterType="map" resultType="systemMenu">
		select DISTINCT m.* from ll_system_menu m, ll_system_menu m1, ll_system_role_menu_relation mr,ll_system_role_admin_relation ar 
		<where> ar.role_id = mr.role_id and (mr.menu_id = m.id or m.id = m1.parentid ) and mr.menu_id = m1.id
			<if test="customer_id != null"> and ar.customer_id = #{customer_id} </if>
			<if test="admin_id != null"> and ar.admin_id = #{admin_id} </if>
			<if test="status != null"> and ar.status = #{status} and mr.status = #{status} and m.status = #{status} </if>
		</where>  order by id
	</select>
	
	<select id="querySystemMenuByBean" parameterType="systemMenu" resultType="systemMenu">
		select m.* from ll_system_menu m
		<where> 
			<if test="id != null"> and id = #{id} </if>
			<if test="parentid != null"> and parentid = #{parentid} </if>
			<if test="status != null"> and status = #{status}</if>
		</where>  order by id ;
	</select>
	<insert id="createSystemMenu" parameterType="systemMenu" useGeneratedKeys="true" keyProperty="id">
		insert into ll_system_menu(name,code,parentid,description,icon_path,path,type,create_time,status,seq)
		values(#{name},#{code},#{parentid},#{description},#{icon_path},#{path},#{type},#{create_time},#{status},#{seq})
	</insert>
	
	<update id="updateSystemMenu" parameterType="systemMenu">
		update ll_system_menu 
		<set>
			<if test="name != null">name = #{name},</if>
			<if test="code != null">code = #{code},</if>
			<if test="parentid != null">parentid = #{parentid},</if>
			<if test="description != null">description = #{description},</if>
			<if test="icon_path != null">icon_path = #{icon_path},</if>
			<if test="path != null">path = #{path},</if>
			<if test="type != null">type = #{type},</if>
			<if test="seq != null">seq = #{seq},</if>
			<if test="status != null">status = #{status},</if>
			<if test="modify_time != null">modify_time = #{modify_time},</if>
		</set>
		<where>
			id = #{id}
		</where>
	</update>
	
	<delete id="deleteSystemMenu" parameterType="systemMenu">
		delete from ll_system_menu
		<where>
			id = #{id}
		</where>
	</delete>
	
		<select id="querySystemRoleBeanByBean" parameterType="systemRole" resultType="systemRole">
		select * from ll_system_role 
		<where>
			<if test="id != null"> and id = #{id}</if>
			<if test="name != null"> and name = #{role_id}</if>
			<if test="code != null"> and code like concat('%', #{role_name},'%') </if>
			<if test="status != null"> and status = #{status}</if>
		</where>
	</select>
	
		<update id="updateSystemRoleMenuRelation" parameterType="systemRoleMenuRelation">
		update ll_system_role_menu_relation 
		<set>
			<if test="status != null">status = #{status},</if>
			<if test="modify_time != null">modify_time = #{modify_time},</if>
		</set>
		<where>
			id = #{id}
		</where>
	</update>
	
		<update id="updateSystemRoleAdminRelation" parameterType="systemRoleAdminRelation">
		update ll_system_role_admin_relation 
		<set>
			<if test="status != null">status = #{status},</if>
			<if test="modify_time != null">modify_time = #{modify_time},</if>
		</set>
		<where>
			id = #{id}
		</where>
	</update>
	
	<select id="findSystemRoleMenuRelationById" parameterType="systemRoleMenuRelation" resultType="systemRoleMenuRelation">
		select * from ll_system_role_menu_relation where id = #{id}
	</select>
	
	<select id="findSystemRoleAdminRelationById" parameterType="systemRoleAdminRelation" resultType="systemRoleAdminRelation">
		select * from ll_system_role_admin_relation where id = #{id}
	</select>
	
	<insert id="createSystemRole" parameterType="systemRole" useGeneratedKeys="true" keyProperty="id">
		insert into ll_system_role(name,code,modify_time,create_time,status,description)
		values(#{name},#{code},#{modify_time},#{create_time},#{status},#{description})
	</insert>
	
	<update id="updateSystemRole" parameterType="systemRole">
		update ll_system_role 
		<set>
			<if test="name != null">name = #{name},</if>
			<if test="code != null">code = #{code},</if>
			<if test="description != null">description = #{description},</if>
			<if test="status != null">status = #{status},</if>
			<if test="modify_time != null">modify_time = #{modify_time},</if>
		</set>
		<where>
			id = #{id}
		</where>
	</update>
	
	<select id="queryLastChildMenu" parameterType="systemMenu" resultType="systemMenu">
		select * from ll_system_menu lastmenu 
		<where>
			NOT EXISTS(select 1 from ll_system_menu menu where menu.parentid = lastmenu.id) 
			<if test="status != null"> and lastmenu.status = #{status} </if>
		</where>		
	</select>
	
	<select id="queryLastChildMenuNotExist" parameterType="systemRole" resultType="systemMenu">
		select * from ll_system_menu lastmenu 
		<where>
			NOT EXISTS(select 1 from ll_system_menu menu where menu.parentid = lastmenu.id) and
			NOT EXISTS(SELECT 1 from ll_system_role_menu_relation rela where rela.menu_id = lastmenu.id and rela.role_id=#{id})
		</where>		
	</select>
	<delete id="deleteSystemRole" parameterType="systemRole">
		delete from ll_system_role where id = #{id}
	</delete>
</mapper>


