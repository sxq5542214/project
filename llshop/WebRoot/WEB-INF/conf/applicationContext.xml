<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
http://www.springframework.org/schema/tx 
http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
http://www.springframework.org/schema/aop 
http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context-2.5.xsd">


	<!-- 读properties配置 -->
	<bean id="jdbcConfig"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location">
			<value>WEB-INF/conf/jdbc.properties</value>
		</property>
	</bean>
	<!-- H:/workspaces/jixun/project_l/WebRoot/WEB-INF/conf/jdbc.properties -->

	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="${jdbc.driverClassName}">
		</property>
		<property name="url" value="${jdbc.url}"></property>
		<property name="username" value="${jdbc.username}"></property>
		<property name="password" value="${jdbc.password}"></property>
		<!-- 最大活动连接 -->
		<property name="maxActive" value="400"></property>
		<!-- 最大空闲连接 -->
		<property name="maxIdle" value="20"></property>
		<!-- 数据库超时时间MS -->
		<property name="maxWait" value="60000"></property>
		<property name="removeAbandoned" value="true" />
		<property name="removeAbandonedTimeout" value="300" />
		<!-- 用来验证从连接池取出的连接 -->
		<property name="validationQuery" value="select 1"></property>
		<property name="testWhileIdle" value="true"></property>
		<property name="timeBetweenEvictionRunsMillis" value="300000"></property>
		<property name="numTestsPerEvictionRun" value="400"></property>
		<property name="minEvictableIdleTimeMillis" value="3600000"></property>
	</bean>

	<!-- mybatis 配置 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!--dataSource属性指定要用到的连接池 -->
		<property name="dataSource" ref="dataSource" />
		<!--configLocation属性指定mybatis的核心配置文件 -->
		<property name="configLocation" value="WEB-INF/conf/mybatis-config.xml" />
		<!-- 		<property name="configLocation" value="H:/workspaces/jixun/llshop/WebRoot/WEB-INF/conf/mybatis-config.xml" />
		 -->
		<property name="mapperLocations" value="classpath:com/yd/business/**/sqlmap-*.xml" />
	</bean>
	<!-- 配置扫描器 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 扫描com.yd这个包以及它的子包下的所有映射接口类 -->
		<property name="basePackage" value="com.yd" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>
<!-- 不用指定了
	<bean id="dictionaryMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
		sqlSessionFactory属性指定要用到的SqlSessionFactory实例
		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
		mapperInterface属性指定映射器接口，用于实现此接口并生成映射器对象
		<property name="mapperInterface"
			value="com.yd.business.dictionary.dao.IDictionaryDAO" />
	</bean> -->

	<!-- 配置Spring的事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>

	<!-- 配置事务传播特性 <tx:advice id="advice" transaction-manager="transactionManager"> 
		<tx:attributes> <tx:method name="save*" propagation="REQUIRED" /> <tx:method 
		name="del*" propagation="REQUIRED" read-only="true" /> <tx:method name="update*" 
		read-only="true" /> <tx:method name="add*" read-only="true" /> <tx:method 
		name="find*" read-only="true" /> <tx:method name="get*" read-only="true" 
		/> <tx:method name="apply*" read-only="true" /> </tx:attributes> </tx:advice> 
		<aop:config> <aop:pointcut id="allServiceMethod" expression="execution(* 
		com.ym.business.dictionary.service.impl.*.*(..))" /> <aop:advisor pointcut-ref="allServiceMethod" 
		advice-ref="advice" /> </aop:config> -->


	<bean id="matchAllWithPropReq"
		class="org.springframework.transaction.interceptor.MatchAlwaysTransactionAttributeSource">
		<description>对所有的事务场景都使用一个相同的事务规则.支持当前事务，如果当前没有事务，就新建一个事务
		</description>
		<property name="transactionAttribute">
			<value>PROPAGATION_REQUIRED</value>
		</property>
	</bean>
	<bean id="transactionInterceptor"
		class="org.springframework.transaction.interceptor.TransactionInterceptor">
		<property name="transactionManager" ref="transactionManager" />
		<property name="transactionAttributeSource">
			<ref bean="matchAllWithPropReq" />
		</property>
	</bean>
	<bean id="autoProxyCreator"
		class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">
		<description>对所有符合名字规则的对象使用指定的Interceptor</description>
		<property name="proxyTargetClass" value="true"></property>
		<property name="beanNames">
			<list>
				<value>*Service*</value>
			</list>
		</property>
		<property name="interceptorNames">
			<list>
				<value>transactionInterceptor</value>
			</list>
		</property>
	</bean>
	<bean id="sourceAdvisor"
		class="org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor">
		<property name="transactionInterceptor" ref="transactionInterceptor" />
	</bean>

	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>
	
<!-- 自动扫描组件，这里要把controler下面的 controller去除，他们是在applicationContext-servlet.xml中配置的，如果不去除会影响事务管理的。  --> 
	<context:component-scan base-package="com.yd">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<bean id="schedulerFactory" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="waitForJobsToCompleteOnShutdown" value="true"></property>
	</bean>

	
	<!-- 线程池 -->
	<bean id="taskExecutor"
		class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		<property name="corePoolSize" value="10" />
		<property name="keepAliveSeconds" value="60" />
		<property name="maxPoolSize" value="150" />
		<property name="queueCapacity" value="20" />
	</bean>

</beans>