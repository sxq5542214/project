<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="commentInfo">

	<insert id="insertCommentInfo" parameterType="commentInfo" useGeneratedKeys="true" keyProperty="id">
		insert into ll_comment_info(comment_conf_id,comment_parentid,createtime,modifytime,user_id,status,reCount,agreeCount,type,msgtext,is_adminre,openid,ip,head_img,nick_name,comment_conf_code,parent_replyid,parent_replyUserName)
		values(#{comment_conf_id},#{comment_parentid},#{createtime},#{modifytime},#{user_id},#{status},#{reCount},#{agreeCount},#{type},#{msgtext},#{is_adminre},#{openid},#{ip},#{head_img},#{nick_name},#{comment_conf_code},#{parent_replyid},#{parent_replyUserName})
	</insert>

	<insert id="insertCommentConfig" parameterType="commentConfig" useGeneratedKeys="true" keyProperty="id">
		insert into ll_comment_config(activity_code,is_repeat,pageSize,per_voted_num,voted_cycle,is_user_subscribe,is_show,create_time,start_time,end_time,link_url,name,vote_is_user_subscribe,is_admin_review,orderby,is_voted_expired)
		values(#{activity_code},#{is_repeat},#{pageSize},#{per_voted_num},#{voted_cycle},#{is_user_subscribe},#{is_show},#{create_time},#{start_time},#{end_time},#{link_url},#{name},#{vote_is_user_subscribe},#{is_admin_review},#{orderby},#{is_voted_expired})
	</insert>

	<insert id="insertCommentInfoToBackTable" parameterType="commentInfo" useGeneratedKeys="true" keyProperty="id">
		insert into ll_comment_info_back(id,comment_conf_id,comment_parentid,createtime,modifytime,user_id,status,reCount,agreeCount,type,msgtext,is_adminre,openid,ip,head_img,nick_name,comment_conf_code,parent_replyid,parent_replyUserName)
		values(#{id},#{comment_conf_id},#{comment_parentid},#{createtime},#{modifytime},#{user_id},#{status},#{reCount},#{agreeCount},#{type},#{msgtext},#{is_adminre},#{openid},#{ip},#{head_img},#{nick_name},#{comment_conf_code},#{parent_replyid},#{parent_replyUserName})
	</insert>
	<insert id="insertCommentInfoImgBean" parameterType="commentInfoImg" useGeneratedKeys="true" keyProperty="id">
		insert into ll_comment_info_img(info_id,img_url,path,create_time,cost_time,thumb_url,img_sizex)
		values(#{info_id},#{img_url},#{path},#{create_time},#{cost_time},#{thumb_url},#{img_sizex})
	</insert>
	
	
	<select id="queryCommentConfigInfoByBean" parameterType="commentConfig" resultType="commentConfig">
		select * from ll_comment_config 
		<where>
			<if test="id != null"> and id = #{id}</if>		
			<if test="activity_code != null"> and activity_code = #{activity_code}</if>		
			<if test="is_repeat != null"> and is_repeat = #{is_repeat}</if>	
		</where>
	</select>
		
	<select id="queryCommentInfoByBean" parameterType="commentInfo" resultType="commentInfo">
		select comment.* from ll_comment_info comment
		<where>
			<if test="id != null"> and comment.id = #{id}</if>		
			<if test="comment_conf_id != null"> and comment.comment_conf_id = #{comment_conf_id}</if>	
			<if test="openids != null and openids.size() > 0"> and openid in <foreach collection="openids" index="" item="item" separator="," open="(" close=")">
				#{item} </foreach>	
			</if>	
			<if test="openid != null"> and comment.openid = #{openid}	</if>
			<if test="ip != null"> and comment.ip = #{ip}</if>		
			<if test="status != null"> and comment.status = #{status}</if>
			<if test="type != null"> and comment.type = #{type}</if>
			<if test="comment_parentid != null"> and comment.comment_parentid = #{comment_parentid}</if>
			<if test="comment_conf_code != null"> and comment.comment_conf_code = #{comment_conf_code}</if>
			<if test="ids != null and ids.size() > 0"> or id in <foreach collection="ids" index="" item="item" separator="," open="(" close=")">
				#{item} </foreach>	
			</if>
		</where>
		<if test="orderby != null">${orderby}</if>
	</select>
	
	<select id="queryCommentInfoCountByBean" parameterType="commentInfo" resultType="int">
		select count(1) from ll_comment_info comment
		<where>
			<if test="id != null"> and comment.id = #{id}</if>	
			<if test="comment_parentid != null"> and comment.comment_parentid = #{comment_parentid}</if>
			<if test="comment_conf_id != null"> and comment.comment_conf_id = #{comment_conf_id}</if>		
			<if test="openid != null"> and comment.openid = #{openid}</if>		
			<if test="status != null"> and comment.status = #{status}</if>
			<if test="type != null"> and comment.type = #{type}</if>
			<if test="comment_conf_code != null"> and comment.comment_conf_code = #{comment_conf_code}</if>
		</where>
	</select>
		
	<select id="queryCommentInfoWithParent" parameterType="commentInfo" resultType="commentInfo">
select (select msgtext from ll_comment_info where id = comment.parent_replyid) preplymsgtext,(select msgtext from ll_comment_info where id = comment.comment_parentid) pmsgtext,comment.* from ll_comment_info	comment 
		<where>
			<if test="id != null"> and comment.id = #{id}</if>	
			<if test="comment_parentid != null"> and comment.comment_parentid = #{comment_parentid}</if>
			<if test="comment_conf_id != null"> and comment.comment_conf_id = #{comment_conf_id}</if>		
			<if test="openid != null"> and comment.openid = #{openid}</if>		
			<if test="status != null"> and comment.status = #{status}</if>
			<if test="type != null"> and comment.type = #{type}</if>
			<if test="comment_conf_code != null"> and comment.comment_conf_code = #{comment_conf_code}</if>
			<if test="orderby != null">${orderby}</if>
			<if test="orderby == null">order by comment.createtime desc</if>
		</where>
	</select>
		
	<select id="queryFailCommentInfoWithParent" parameterType="commentInfo" resultType="commentInfo">
select (select msgtext from ll_comment_info where id = comment.parent_replyid) preplymsgtext,(select msgtext from ll_comment_info where id = comment.comment_parentid) pmsgtext,comment.* from ll_comment_info	comment 
		<where>
			<if test="id != null"> and comment.id = #{id}</if>		
			<if test="comment_conf_id != null"> and comment.comment_conf_id = #{comment_conf_id}</if>		
			<if test="openid != null"> and comment.openid = #{openid}</if>		
			<if test="status != null"> and comment.status = #{status}</if>
			<if test="type != null"> and comment.type = #{type}</if>
			<if test="comment_conf_code != null"> and comment.comment_conf_code = #{comment_conf_code}</if>
			<if test="orderby != null">${orderby}</if>
			<if test="orderby == null">order by comment.createtime desc</if>
			
		</where>
	</select>
	
		<select id="queryFailCommentInfoCountByBean" parameterType="commentInfo" resultType="int">
		select count(1) from ll_comment_info_back comment
		<where>
			<if test="id != null"> and comment.id = #{id}</if>	
			<if test="comment_parentid != null"> and comment.comment_parentid = #{comment_parentid}</if>
			<if test="comment_conf_id != null"> and comment.comment_conf_id = #{comment_conf_id}</if>		
			<if test="openid != null"> and comment.openid = #{openid}</if>		
			<if test="status != null"> and comment.status = #{status}</if>
			<if test="type != null"> and comment.type = #{type}</if>
			<if test="comment_conf_code != null"> and comment.comment_conf_code = #{comment_conf_code}</if>
		</where>
	</select>
	
	<select id="queryCommentInfoByParentId" parameterType="list" resultType="commentInfo">
		select comment.* from ll_comment_info comment   where  comment.comment_parentid in 
		<foreach collection="list" index="" item="item" separator="," open="(" close=")">
			#{item.id} 
		</foreach>
		order by comment.type asc
	</select>
	
	<select id="queryFailCommentInfoByParentId" parameterType="list" resultType="commentInfo">
		select comment.* from ll_comment_info_back comment   where  comment.comment_parentid in 
		<foreach collection="list" index="" item="item" separator="," open="(" close=")">
			#{item.id} 
		</foreach>
		order by comment.type asc
	</select>
	
	<update id="updateCommentInfoAgreeCountAdd" parameterType="int">
		update ll_comment_info ll set ll.agreeCount=(ll.agreeCount+1) where ll.id =  #{value} and ll.agreeCount>=0
	</update>
	<update id="updateCommentInfoAgreeCountMinus" parameterType="int">
		update ll_comment_info ll set ll.agreeCount=(ll.agreeCount-1) where ll.id =  #{value} and ll.agreeCount>=0
	</update>
	
	<insert id="insertCommentUserRelation"  parameterType="commentUserRelation" useGeneratedKeys="true" keyProperty="id">
		insert into ll_comment_user_relation(userid,openid,commentid,createtime,ip)values(#{userid},#{openid},#{commentid},#{createtime},#{ip})
	</insert>
	
	<select id="queryCommentUserRelationByBean" parameterType="commentUserRelation"  resultType="commentUserRelation">
		select * from ll_comment_user_relation 
		<where>
			<if test="id != null">and id = #{id}</if>
			<if test="openid != null">and openid = #{openid}</if>
			<if test="ip != null">and ip = #{ip}</if>
			<if test="commentid != null">and commentid = #{commentid}</if>
		</where>
	</select>
	<delete id="deleteCommentUserRelation" parameterType="commentUserRelation" >
		delete from ll_comment_user_relation
		<where>
			<if test="id != null">and id = #{id}</if>
			<if test="openid != null">and openid = #{openid}</if>
			<if test="ip != null">and ip = #{ip}</if>
			<if test="commentid != null">and commentid = #{commentid}</if>
		</where>
	</delete>
	<delete id="deleteCommentInfo" parameterType="commentInfo" >
		delete from ll_comment_info where id = #{id}
	</delete>
	<delete id="deleteFailCommentInfo" parameterType="commentInfo" >
		delete from ll_comment_info_back where id = #{id}
	</delete>
	<update id="updateCommentInfoBean" parameterType="commentInfo">
		update ll_comment_info 
		<set>
			<if test="comment_conf_id != null"> comment_conf_id = #{comment_conf_id},</if>
			<if test="comment_parentid != null"> comment_parentid = #{comment_parentid},</if>
			<if test="createtime != null"> createtime = #{createtime},</if>
			<if test="modifytime != null"> modifytime = #{modifytime},</if>
			<if test="openid != null"> openid = #{openid},</if>
			<if test="status != null"> status = #{status},</if>
			<if test="msgtext != null"> msgtext = #{msgtext},</if>
			<if test="type != null"> type = #{type},</if>
			<if test="is_adminre != null"> is_adminre = #{is_adminre},</if>
			<if test="user_id != null"> user_id = #{user_id},</if>
		</set>	
		<where>
			id = #{id}
		</where>
	</update>
	
			
	<select id="queryFailCommentInfoByBean" parameterType="commentInfo" resultType="commentInfo">
		select comment.* from ll_comment_info_back comment
		<where>
			<if test="id != null"> and comment.id = #{id}</if>		
			<if test="comment_conf_id != null"> and comment.comment_conf_id = #{comment_conf_id}</if>		
			<if test="openid != null"> and comment.openid = #{openid}</if>		
			<if test="ip != null"> and comment.ip = #{ip}</if>		
			<if test="status != null"> and comment.status = #{status}</if>
			<if test="type != null"> and comment.type = #{type}</if>
			<if test="comment_parentid != null"> and comment.comment_parentid = #{comment_parentid}</if>
			<if test="comment_conf_code != null"> and comment.comment_conf_code = #{comment_conf_code}</if>
			order by createtime desc
		</where>
	</select>
	
		<update id="updateFailCommentInfoBean" parameterType="commentInfo">
		update ll_comment_info_back
		<set>
			<if test="comment_conf_id != null"> comment_conf_id = #{comment_conf_id},</if>
			<if test="comment_parentid != null"> comment_parentid = #{comment_parentid},</if>
			<if test="createtime != null"> createtime = #{createtime},</if>
			<if test="modifytime != null"> modifytime = #{modifytime},</if>
			<if test="openid != null"> openid = #{openid},</if>
			<if test="status != null"> status = #{status},</if>
			<if test="msgtext != null"> msgtext = #{msgtext},</if>
			<if test="type != null"> type = #{type},</if>
			<if test="is_adminre != null"> is_adminre = #{is_adminre},</if>
			<if test="user_id != null"> user_id = #{user_id},</if>
		</set>	
		<where>
			id = #{id}
		</where>
	</update>
	
	<select id="queryUserAllCommentByBean" parameterType="commentInfo" resultType="commentInfo">
		select DISTINCT c2.* from ll_comment_info c , ll_comment_info c2
		<where>
		(c2.id = c.comment_parentid  or c.id = c2.id )  and c2.comment_parentid is null
		<if test="openids != null and openids.size() > 0"> and c.openid in <foreach collection="openids" index="" item="item" separator="," open="(" close=")">
			#{item} </foreach>	
		</if>	
		<!-- <if test="openid != null"> and c.openid = #{openid}</if> -->
		<if test="comment_conf_id != null"> and c.comment_conf_id = #{comment_conf_id}</if>
		<if test="comment_conf_id != null"> and c2.comment_conf_id = #{comment_conf_id}</if>
		<if test="status != null"> and c.status = #{status}</if>
		<if test="status != null"> and c2.status = #{status}</if>
		<if test="type != null"> and c2.type = #{type}</if>
		</where>
		 <if test="orderby != null">${orderby}</if>
	</select>
	
	<update id="updateCommentInfoReCountAdd" parameterType="int">
		update ll_comment_info ll set ll.reCount=(ll.reCount+1) where ll.id =  #{value} and ll.reCount>=0
	</update>
	<update id="updateCommentInfoReCountMinus" parameterType="int">
		update ll_comment_info ll set ll.reCount=(ll.reCount-1) where ll.id =  #{value} and ll.reCount>=0
	</update>
		
	<select id="queryCommentImgInfoByInfoId" parameterType="list" resultType="commentInfoImg">
		select comment.id,comment.img_url,comment.info_id,comment.thumb_url,comment.img_sizex from ll_comment_info_img comment   where  comment.info_id in 
		<foreach collection="list" index="" item="item" separator="," open="(" close=")">
			#{item.id} 
		</foreach>
		order by comment.create_time asc
	</select>
	
	<delete id="deleteCommentInfoImg" parameterType="commentInfoImg">
		delete from ll_comment_info_img where id = #{id}
	</delete>
	
	<update id="updateCommentConfig" parameterType="commentConfig">
		update ll_comment_config 
		<set>
			<if test="activity_code != null">activity_code = #{activity_code},</if>
			<if test="is_repeat != null">is_repeat = #{is_repeat},</if>
			<if test="pageSize != null">pageSize = #{pageSize},</if>
			<if test="per_voted_num != null">per_voted_num = #{per_voted_num},</if>
			<if test="voted_cycle != null">voted_cycle = #{voted_cycle},</if>
			<if test="is_user_subscribe != null">is_user_subscribe = #{is_user_subscribe},</if>
			<if test="is_show != null">is_show = #{is_show},</if>
			<if test="start_time != null">start_time = #{start_time},</if>
			<if test="end_time != null">end_time = #{end_time},</if>
			<if test="link_url != null">link_url = #{link_url},</if>
			<if test="name != null">name = #{name},</if>
			<if test="vote_is_user_subscribe != null">vote_is_user_subscribe = #{vote_is_user_subscribe},</if>
			<if test="is_admin_review != null">is_admin_review = #{is_admin_review},</if>
			<if test="orderby != null">orderby = #{orderby},</if>
			<if test="is_voted_expired != null">is_voted_expired = #{is_voted_expired},</if>
			<if test="modify_time != null">modify_time = #{modify_time},</if>
		</set>
		<where>
			id = #{id}
		</where>
	</update>
	
	<select id="queryCommentConfigInfoForShow" parameterType="commentConfig" resultType="commentConfig">
		select * from ll_comment_config 
		<where>
			<if test="id != null"> and id = #{id}</if>	
			<if test="activity_code != null">and activity_code like concat('%', #{activity_code},'%')</if>	
			<if test="is_repeat != null"> and is_repeat = #{is_repeat}</if>	
			<if test="per_voted_num != null">and per_voted_num = #{per_voted_num}</if>
			<if test="voted_cycle != null">and voted_cycle = #{voted_cycle}</if>
			<if test="is_user_subscribe != null">and is_user_subscribe = #{is_user_subscribe}</if>
			<if test="is_show != null">and is_show = #{is_show}</if>
			<if test="name != null">and name like concat('%', #{name},'%')</if>
			<if test="vote_is_user_subscribe != null">and vote_is_user_subscribe = #{vote_is_user_subscribe}</if>
			<if test="is_admin_review != null">and is_admin_review = #{is_admin_review}</if>
			<if test="is_voted_expired != null">and is_voted_expired = #{is_voted_expired}</if>
		</where>
	</select>
	
	<select id="queryCommentConfigInfoCountForShow" parameterType="commentConfig" resultType="int">
		select count(1) from ll_comment_config 
		<where>
			<if test="id != null"> and id = #{id}</if>	
			<if test="activity_code != null">and activity_code like concat('%', #{activity_code},'%')</if>	
			<if test="is_repeat != null"> and is_repeat = #{is_repeat}</if>	
			<if test="per_voted_num != null">and per_voted_num = #{per_voted_num}</if>
			<if test="voted_cycle != null">and voted_cycle = #{voted_cycle}</if>
			<if test="is_user_subscribe != null">and is_user_subscribe = #{is_user_subscribe}</if>
			<if test="is_show != null">and is_show = #{is_show}</if>
			<if test="name != null">and name like concat('%', #{name},'%')</if>
			<if test="vote_is_user_subscribe != null">and vote_is_user_subscribe = #{vote_is_user_subscribe}</if>
			<if test="is_admin_review != null">and is_admin_review = #{is_admin_review}</if>
			<if test="is_voted_expired != null">and is_voted_expired = #{is_voted_expired}</if>
		</where>
	</select>
		<delete id="deleteCommentConfigBean" parameterType="list">
		delete from ll_comment_config where id in
		<foreach collection="list" index="" item="item" separator="," open="(" close=")">
			#{item.id} 
		</foreach>
	</delete>
</mapper>